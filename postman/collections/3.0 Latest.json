{
	"info": {
		"_postman_id": "9f6bd529-708c-48fb-a144-d90a37e7f184",
		"name": "3.0 Latest",
		"description": "Use WePay's APIs to integrate with [Link](/link), [Clear](/clear), or [Core](/core), and to leverage feature offerings like [Digital Wallets](/digital-wallets) and [Card Present](/card-present).\n\nContact Support:\n Name: WePay API Support\n Email: api@wepay.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "1968246-9f6bd529-708c-48fb-a144-d90a37e7f184"
	},
	"item": [
		{
			"name": "accounts",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "capabilities",
							"item": [
								{
									"name": "Update capabilities",
									"id": "83589764-f53f-4d33-993b-55367cd424c0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"payouts\": {\n    \"application_block\": {\n      \"is_blocked\": true,\n      \"reason\": \"This is a sham!\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/capabilities?is_expanded=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"capabilities"
											],
											"query": [
												{
													"key": "is_expanded",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "**This endpoint requires permission from WePay.** The POST /accounts/{id}/capabilities call allows your platform to update an account's capabilities. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
									},
									"response": [
										{
											"id": "2e9666b3-b86a-4749-9b34-46c7ec289f60",
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Api-Version",
														"value": "3.0"
													},
													{
														"key": "Unique-Key",
														"value": "in sed commodo"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"payouts\": {\n    \"application_block\": {\n      \"is_blocked\": true,\n      \"reason\": \"This is a sham!\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/accounts/:id/capabilities?is_expanded=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":id",
														"capabilities"
													],
													"query": [
														{
															"key": "is_expanded",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "Excepteur exercitation sed ut",
															"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
														}
													]
												},
												"description": "**This endpoint requires permission from WePay.** The POST /accounts/{id}/capabilities call allows your platform to update an account's capabilities. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payments\": {\n    \"enabled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"current_issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"upcoming_issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"payouts\": {\n    \"enabled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"current_issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"upcoming_issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"terminals\": {\n    \"enabled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"current_issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"upcoming_issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
										},
										{
											"id": "cceeb600-e190-4fc9-a3de-a1d805684164",
											"name": "INVALID_PARAMS",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Api-Version",
														"value": "3.0"
													},
													{
														"key": "Unique-Key",
														"value": "in sed commodo"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"payouts\": {\n    \"application_block\": {\n      \"is_blocked\": true,\n      \"reason\": \"This is a sham!\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/accounts/:id/capabilities?is_expanded=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":id",
														"capabilities"
													],
													"query": [
														{
															"key": "is_expanded",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "Excepteur exercitation sed ut",
															"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
														}
													]
												},
												"description": "**This endpoint requires permission from WePay.** The POST /accounts/{id}/capabilities call allows your platform to update an account's capabilities. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "0ae2be86-5260-49cb-9148-05280930f8e5",
											"name": "NOT_AUTHORIZED",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Api-Version",
														"value": "3.0"
													},
													{
														"key": "Unique-Key",
														"value": "in sed commodo"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"payouts\": {\n    \"application_block\": {\n      \"is_blocked\": true,\n      \"reason\": \"This is a sham!\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/accounts/:id/capabilities?is_expanded=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":id",
														"capabilities"
													],
													"query": [
														{
															"key": "is_expanded",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "Excepteur exercitation sed ut",
															"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
														}
													]
												},
												"description": "**This endpoint requires permission from WePay.** The POST /accounts/{id}/capabilities call allows your platform to update an account's capabilities. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "84d7b888-1073-488b-94b6-5dfdaa83df1c",
											"name": "UNEXPECTED_ERROR",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Api-Version",
														"value": "3.0"
													},
													{
														"key": "Unique-Key",
														"value": "in sed commodo"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"payouts\": {\n    \"application_block\": {\n      \"is_blocked\": true,\n      \"reason\": \"This is a sham!\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/accounts/:id/capabilities?is_expanded=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":id",
														"capabilities"
													],
													"query": [
														{
															"key": "is_expanded",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "Excepteur exercitation sed ut",
															"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
														}
													]
												},
												"description": "**This endpoint requires permission from WePay.** The POST /accounts/{id}/capabilities call allows your platform to update an account's capabilities. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get capabilities",
									"id": "81cb4b75-969b-4169-aca8-db670ea6be29",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/capabilities?is_expanded=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"capabilities"
											],
											"query": [
												{
													"key": "is_expanded",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "The GET /accounts/{id}/capabilities call allows your platform to look up an account's capabilities. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
									},
									"response": [
										{
											"id": "cf0d3d31-6dcc-4960-9cbb-0fd450fe786d",
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "Api-Version",
														"value": "3.0"
													},
													{
														"key": "Unique-Key",
														"value": "in sed commodo"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:id/capabilities?is_expanded=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":id",
														"capabilities"
													],
													"query": [
														{
															"key": "is_expanded",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "Excepteur exercitation sed ut",
															"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
														}
													]
												},
												"description": "The GET /accounts/{id}/capabilities call allows your platform to look up an account's capabilities. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payments\": {\n    \"enabled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"current_issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"upcoming_issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"payouts\": {\n    \"enabled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"current_issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"upcoming_issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"terminals\": {\n    \"enabled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"current_issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"upcoming_issues\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
										},
										{
											"id": "93a25285-cd61-48ea-b50d-3dbbcdb16a63",
											"name": "INVALID_PARAMS",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "Api-Version",
														"value": "3.0"
													},
													{
														"key": "Unique-Key",
														"value": "in sed commodo"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:id/capabilities?is_expanded=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":id",
														"capabilities"
													],
													"query": [
														{
															"key": "is_expanded",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "Excepteur exercitation sed ut",
															"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
														}
													]
												},
												"description": "The GET /accounts/{id}/capabilities call allows your platform to look up an account's capabilities. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "3f3e1997-3da4-4974-a770-25c08d7f538b",
											"name": "NOT_AUTHORIZED",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "Api-Version",
														"value": "3.0"
													},
													{
														"key": "Unique-Key",
														"value": "in sed commodo"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:id/capabilities?is_expanded=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":id",
														"capabilities"
													],
													"query": [
														{
															"key": "is_expanded",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "Excepteur exercitation sed ut",
															"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
														}
													]
												},
												"description": "The GET /accounts/{id}/capabilities call allows your platform to look up an account's capabilities. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "2fb9f29c-24a2-40a6-9814-bfe58819d177",
											"name": "UNEXPECTED_ERROR",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "Api-Version",
														"value": "3.0"
													},
													{
														"key": "Unique-Key",
														"value": "in sed commodo"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:id/capabilities?is_expanded=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":id",
														"capabilities"
													],
													"query": [
														{
															"key": "is_expanded",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "Excepteur exercitation sed ut",
															"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
														}
													]
												},
												"description": "The GET /accounts/{id}/capabilities call allows your platform to look up an account's capabilities. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "92402027-bae0-4b89-8210-48325e91e7c7"
						},
						{
							"name": "Update an account",
							"id": "22a79c42-2393-40e0-b492-2b2e447742a0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Req to create CA account\",\n  \"industry\": {\n    \"category_detail\": \"Website design\",\n    \"merchant_category_code\": \"7333\"\n  },\n  \"name\": \"Foo Bar Shop\",\n  \"payout\": {\n    \"currencies\": {\n      \"CAD\": {\n        \"payout_method_id\": \"0102b1c6-2bc7-448a-aa1d-076b1637547c\",\n        \"period\": \"daily\"\n      }\n    },\n    \"default_currency\": \"CAD\"\n  },\n  \"reference_id\": null,\n  \"statement_description\": \"Purchase from Foo Bar Shop\",\n  \"projected_monthly_transaction_volume\": 500\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
										}
									]
								},
								"description": "The POST /accounts/{id} call allows your platform to update and add custom data to an account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
							},
							"response": [
								{
									"id": "cf466838-f860-40a6-8d10-e25a9fe03e63",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "Client-IP",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Req to create CA account\",\n  \"industry\": {\n    \"category_detail\": \"Website design\",\n    \"merchant_category_code\": \"7333\"\n  },\n  \"name\": \"Foo Bar Shop\",\n  \"payout\": {\n    \"currencies\": {\n      \"CAD\": {\n        \"payout_method_id\": \"0102b1c6-2bc7-448a-aa1d-076b1637547c\",\n        \"period\": \"daily\"\n      }\n    },\n    \"default_currency\": \"CAD\"\n  },\n  \"reference_id\": null,\n  \"statement_description\": \"Purchase from Foo Bar Shop\",\n  \"projected_monthly_transaction_volume\": 500\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "The POST /accounts/{id} call allows your platform to update and add custom data to an account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"balances\": {\n    \"currencies\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"beneficiary\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"<string>\",\n  \"documents\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"incoming_payments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"industry\": {\n    \"category_detail\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"merchant_category_code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"name\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payout\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"platform_onboarding_time\": \"<long>\",\n  \"pricing\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reference_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statement_description\": \"<string>\",\n  \"enhanced_review\": \"<string>\",\n  \"projected_monthly_transaction_volume\": \"<integer>\",\n  \"referral_details\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"standard_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"coupon_code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"referral_partner\": \"<string>\"\n}"
								},
								{
									"id": "918ccacb-fbef-421d-9966-3a75d9d84907",
									"name": "INVALID_PARAMS, UNSUPPORTED_COUNTRY, UNSUPPORTED_CURRENCY",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "Client-IP",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Req to create CA account\",\n  \"industry\": {\n    \"category_detail\": \"Website design\",\n    \"merchant_category_code\": \"7333\"\n  },\n  \"name\": \"Foo Bar Shop\",\n  \"payout\": {\n    \"currencies\": {\n      \"CAD\": {\n        \"payout_method_id\": \"0102b1c6-2bc7-448a-aa1d-076b1637547c\",\n        \"period\": \"daily\"\n      }\n    },\n    \"default_currency\": \"CAD\"\n  },\n  \"reference_id\": null,\n  \"statement_description\": \"Purchase from Foo Bar Shop\",\n  \"projected_monthly_transaction_volume\": 500\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "The POST /accounts/{id} call allows your platform to update and add custom data to an account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "2f799a32-c609-4b36-839b-a9a32fcc5760",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "Client-IP",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Req to create CA account\",\n  \"industry\": {\n    \"category_detail\": \"Website design\",\n    \"merchant_category_code\": \"7333\"\n  },\n  \"name\": \"Foo Bar Shop\",\n  \"payout\": {\n    \"currencies\": {\n      \"CAD\": {\n        \"payout_method_id\": \"0102b1c6-2bc7-448a-aa1d-076b1637547c\",\n        \"period\": \"daily\"\n      }\n    },\n    \"default_currency\": \"CAD\"\n  },\n  \"reference_id\": null,\n  \"statement_description\": \"Purchase from Foo Bar Shop\",\n  \"projected_monthly_transaction_volume\": 500\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "The POST /accounts/{id} call allows your platform to update and add custom data to an account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "6c376ef2-c5d7-4a55-ac61-d222eec352f4",
									"name": "RESOURCE_CONFLICT",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "Client-IP",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Req to create CA account\",\n  \"industry\": {\n    \"category_detail\": \"Website design\",\n    \"merchant_category_code\": \"7333\"\n  },\n  \"name\": \"Foo Bar Shop\",\n  \"payout\": {\n    \"currencies\": {\n      \"CAD\": {\n        \"payout_method_id\": \"0102b1c6-2bc7-448a-aa1d-076b1637547c\",\n        \"period\": \"daily\"\n      }\n    },\n    \"default_currency\": \"CAD\"\n  },\n  \"reference_id\": null,\n  \"statement_description\": \"Purchase from Foo Bar Shop\",\n  \"projected_monthly_transaction_volume\": 500\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "The POST /accounts/{id} call allows your platform to update and add custom data to an account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "ec22eecd-1430-4b70-b525-1edd3fc9ac14",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "Client-IP",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Req to create CA account\",\n  \"industry\": {\n    \"category_detail\": \"Website design\",\n    \"merchant_category_code\": \"7333\"\n  },\n  \"name\": \"Foo Bar Shop\",\n  \"payout\": {\n    \"currencies\": {\n      \"CAD\": {\n        \"payout_method_id\": \"0102b1c6-2bc7-448a-aa1d-076b1637547c\",\n        \"period\": \"daily\"\n      }\n    },\n    \"default_currency\": \"CAD\"\n  },\n  \"reference_id\": null,\n  \"statement_description\": \"Purchase from Foo Bar Shop\",\n  \"projected_monthly_transaction_volume\": 500\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "The POST /accounts/{id} call allows your platform to update and add custom data to an account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get an account",
							"id": "62f3c33e-0fda-4f57-bd11-e7c6e98dd842",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
										}
									]
								},
								"description": "The GET /accounts/{id} call allows your platform to look up a single account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
							},
							"response": [
								{
									"id": "7f02aac7-0a98-4060-94b9-2982bb54189b",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "The GET /accounts/{id} call allows your platform to look up a single account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"balances\": {\n    \"currencies\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"beneficiary\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"<string>\",\n  \"documents\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"incoming_payments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"industry\": {\n    \"category_detail\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"merchant_category_code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"name\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payout\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"platform_onboarding_time\": \"<long>\",\n  \"pricing\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reference_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statement_description\": \"<string>\",\n  \"enhanced_review\": \"<string>\",\n  \"projected_monthly_transaction_volume\": \"<integer>\",\n  \"referral_details\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"standard_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"coupon_code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"referral_partner\": \"<string>\"\n}"
								},
								{
									"id": "67f13795-0bc0-4dc7-910b-00151eacb028",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "The GET /accounts/{id} call allows your platform to look up a single account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "b101313f-e309-4bbb-b121-0ca76d3ab251",
									"name": "COULD_NOT_AUTHENTICATE",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "The GET /accounts/{id} call allows your platform to look up a single account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "38c8ecaf-3df4-42b5-9d84-8661c4e10da6",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "The GET /accounts/{id} call allows your platform to look up a single account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "86a7e046-7dd1-4274-8eaa-6e47ed29bec9",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "The GET /accounts/{id} call allows your platform to look up a single account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete an account",
							"id": "90fd1707-93fd-4630-b45a-b9b7b9976ae0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
										}
									]
								},
								"description": "The DELETE /accounts/{id} call allows your platform to delete a single account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose. This endpoint is currently restricted and only intended for Core or Clear partners’ use. If access to this endpoint is required, work with your Integration Engineer or Technical Account Manager to enable the configuration and gain access."
							},
							"response": [
								{
									"id": "5c2e99fd-bca3-42e0-806b-cf5add10381e",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "The DELETE /accounts/{id} call allows your platform to delete a single account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose. This endpoint is currently restricted and only intended for Core or Clear partners’ use. If access to this endpoint is required, work with your Integration Engineer or Technical Account Manager to enable the configuration and gain access."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"balances\": {\n    \"currencies\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"beneficiary\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"<string>\",\n  \"documents\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"incoming_payments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"industry\": {\n    \"category_detail\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"merchant_category_code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"name\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payout\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"platform_onboarding_time\": \"<long>\",\n  \"pricing\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reference_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statement_description\": \"<string>\",\n  \"enhanced_review\": \"<string>\",\n  \"projected_monthly_transaction_volume\": \"<integer>\",\n  \"referral_details\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"standard_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"coupon_code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"referral_partner\": \"<string>\"\n}"
								},
								{
									"id": "19abf805-d4d4-4d4e-aec7-b2cb08bf5c9a",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "The DELETE /accounts/{id} call allows your platform to delete a single account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose. This endpoint is currently restricted and only intended for Core or Clear partners’ use. If access to this endpoint is required, work with your Integration Engineer or Technical Account Manager to enable the configuration and gain access."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "2b9f40ef-680b-4020-bb82-b5c247631db7",
									"name": "COULD_NOT_AUTHENTICATE",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "The DELETE /accounts/{id} call allows your platform to delete a single account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose. This endpoint is currently restricted and only intended for Core or Clear partners’ use. If access to this endpoint is required, work with your Integration Engineer or Technical Account Manager to enable the configuration and gain access."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "19d4d52d-9196-4904-b043-cb6839487cd1",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "The DELETE /accounts/{id} call allows your platform to delete a single account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose. This endpoint is currently restricted and only intended for Core or Clear partners’ use. If access to this endpoint is required, work with your Integration Engineer or Technical Account Manager to enable the configuration and gain access."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "7e45e012-07be-4994-9755-87b76243ef17",
									"name": "RESOURCE_CONFLICT",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "The DELETE /accounts/{id} call allows your platform to delete a single account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose. This endpoint is currently restricted and only intended for Core or Clear partners’ use. If access to this endpoint is required, work with your Integration Engineer or Technical Account Manager to enable the configuration and gain access."
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "e9319394-d383-4042-9a45-976066d1aabb",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the merchant account, generated by WePay when the account is created."
												}
											]
										},
										"description": "The DELETE /accounts/{id} call allows your platform to delete a single account. The accounts resource allows your platform to create a new merchant account for each distinct business purpose. This endpoint is currently restricted and only intended for Core or Clear partners’ use. If access to this endpoint is required, work with your Integration Engineer or Technical Account Manager to enable the configuration and gain access."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "eeaa137c-d16b-41ac-ba0e-527ba1fca9df"
				},
				{
					"name": "Create an account",
					"id": "9372686c-42bb-4dd2-83d3-fee1733d778b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
								"key": "WePay-Risk-Token",
								"value": "in sed commodo"
							},
							{
								"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
								"key": "Client-IP",
								"value": "in sed commodo"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Foo Bar Shop on 5th ave.\",\n  \"industry\": {\n    \"category_detail\": \"Website design\",\n    \"merchant_category_code\": \"7333\"\n  },\n  \"legal_entity_id\": \"3cd20b3c-4008-400b-b708-2b844ce7be84\",\n  \"name\": \"Foo Bar Shop\",\n  \"payout\": {\n    \"currencies\": {\n      \"CAD\": {\n        \"payout_method_id\": \"62b90e13-81f6-400f-bca1-e9fd4099921e\",\n        \"period\": \"weekly\"\n      },\n      \"USD\": {\n        \"payout_method_id\": \"0102b1c6-2bc7-448a-aa1d-076b1637547c\",\n        \"period\": \"daily\"\n      }\n    }\n  },\n  \"incoming_payments\": {\n    \"amex\": {\n      \"countries\": {\n        \"US\": {\n          \"opt_blue\": {\n            \"opt_into_marketing\": true\n          }\n        }\n      }\n    }\n  },\n  \"reference_id\": null,\n  \"statement_description\": \"Purchase from Foo Bar Shop\",\n  \"projected_monthly_transaction_volume\": 500\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts"
							]
						},
						"description": "The POST /accounts call allows your platform to create a new account owned by a legal entity. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
					},
					"response": [
						{
							"id": "bf44bd23-03d6-429a-b72f-306f60e0bd75",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Foo Bar Shop on 5th ave.\",\n  \"industry\": {\n    \"category_detail\": \"Website design\",\n    \"merchant_category_code\": \"7333\"\n  },\n  \"legal_entity_id\": \"3cd20b3c-4008-400b-b708-2b844ce7be84\",\n  \"name\": \"Foo Bar Shop\",\n  \"payout\": {\n    \"currencies\": {\n      \"CAD\": {\n        \"payout_method_id\": \"62b90e13-81f6-400f-bca1-e9fd4099921e\",\n        \"period\": \"weekly\"\n      },\n      \"USD\": {\n        \"payout_method_id\": \"0102b1c6-2bc7-448a-aa1d-076b1637547c\",\n        \"period\": \"daily\"\n      }\n    }\n  },\n  \"incoming_payments\": {\n    \"amex\": {\n      \"countries\": {\n        \"US\": {\n          \"opt_blue\": {\n            \"opt_into_marketing\": true\n          }\n        }\n      }\n    }\n  },\n  \"reference_id\": null,\n  \"statement_description\": \"Purchase from Foo Bar Shop\",\n  \"projected_monthly_transaction_volume\": 500\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								},
								"description": "The POST /accounts call allows your platform to create a new account owned by a legal entity. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"balances\": {\n    \"currencies\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"beneficiary\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"<string>\",\n  \"documents\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"incoming_payments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"industry\": {\n    \"category_detail\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"merchant_category_code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"name\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payout\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"platform_onboarding_time\": \"<long>\",\n  \"pricing\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reference_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statement_description\": \"<string>\",\n  \"enhanced_review\": \"<string>\",\n  \"projected_monthly_transaction_volume\": \"<integer>\",\n  \"referral_details\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"standard_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"coupon_code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"referral_partner\": \"<string>\"\n}"
						},
						{
							"id": "daf3dba5-0dbd-41ac-b4be-b221e34c4f51",
							"name": "INVALID_PARAMS, UNSUPPORTED_COUNTRY, UNSUPPORTED_CURRENCY ",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Foo Bar Shop on 5th ave.\",\n  \"industry\": {\n    \"category_detail\": \"Website design\",\n    \"merchant_category_code\": \"7333\"\n  },\n  \"legal_entity_id\": \"3cd20b3c-4008-400b-b708-2b844ce7be84\",\n  \"name\": \"Foo Bar Shop\",\n  \"payout\": {\n    \"currencies\": {\n      \"CAD\": {\n        \"payout_method_id\": \"62b90e13-81f6-400f-bca1-e9fd4099921e\",\n        \"period\": \"weekly\"\n      },\n      \"USD\": {\n        \"payout_method_id\": \"0102b1c6-2bc7-448a-aa1d-076b1637547c\",\n        \"period\": \"daily\"\n      }\n    }\n  },\n  \"incoming_payments\": {\n    \"amex\": {\n      \"countries\": {\n        \"US\": {\n          \"opt_blue\": {\n            \"opt_into_marketing\": true\n          }\n        }\n      }\n    }\n  },\n  \"reference_id\": null,\n  \"statement_description\": \"Purchase from Foo Bar Shop\",\n  \"projected_monthly_transaction_volume\": 500\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								},
								"description": "The POST /accounts call allows your platform to create a new account owned by a legal entity. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "cb1e85fa-9d79-40b1-b5fa-2baba6f12c2c",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Foo Bar Shop on 5th ave.\",\n  \"industry\": {\n    \"category_detail\": \"Website design\",\n    \"merchant_category_code\": \"7333\"\n  },\n  \"legal_entity_id\": \"3cd20b3c-4008-400b-b708-2b844ce7be84\",\n  \"name\": \"Foo Bar Shop\",\n  \"payout\": {\n    \"currencies\": {\n      \"CAD\": {\n        \"payout_method_id\": \"62b90e13-81f6-400f-bca1-e9fd4099921e\",\n        \"period\": \"weekly\"\n      },\n      \"USD\": {\n        \"payout_method_id\": \"0102b1c6-2bc7-448a-aa1d-076b1637547c\",\n        \"period\": \"daily\"\n      }\n    }\n  },\n  \"incoming_payments\": {\n    \"amex\": {\n      \"countries\": {\n        \"US\": {\n          \"opt_blue\": {\n            \"opt_into_marketing\": true\n          }\n        }\n      }\n    }\n  },\n  \"reference_id\": null,\n  \"statement_description\": \"Purchase from Foo Bar Shop\",\n  \"projected_monthly_transaction_volume\": 500\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								},
								"description": "The POST /accounts call allows your platform to create a new account owned by a legal entity. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "04dc2d19-f012-496e-9a64-9ea08f0419a9",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Foo Bar Shop on 5th ave.\",\n  \"industry\": {\n    \"category_detail\": \"Website design\",\n    \"merchant_category_code\": \"7333\"\n  },\n  \"legal_entity_id\": \"3cd20b3c-4008-400b-b708-2b844ce7be84\",\n  \"name\": \"Foo Bar Shop\",\n  \"payout\": {\n    \"currencies\": {\n      \"CAD\": {\n        \"payout_method_id\": \"62b90e13-81f6-400f-bca1-e9fd4099921e\",\n        \"period\": \"weekly\"\n      },\n      \"USD\": {\n        \"payout_method_id\": \"0102b1c6-2bc7-448a-aa1d-076b1637547c\",\n        \"period\": \"daily\"\n      }\n    }\n  },\n  \"incoming_payments\": {\n    \"amex\": {\n      \"countries\": {\n        \"US\": {\n          \"opt_blue\": {\n            \"opt_into_marketing\": true\n          }\n        }\n      }\n    }\n  },\n  \"reference_id\": null,\n  \"statement_description\": \"Purchase from Foo Bar Shop\",\n  \"projected_monthly_transaction_volume\": 500\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								},
								"description": "The POST /accounts call allows your platform to create a new account owned by a legal entity. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a collection of accounts",
					"id": "9599f958-72bb-4fc2-a5d9-0b8da3499fd2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=<string>&beneficiary_legal_entity_id=<string>&reference_id=in sed commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements from this page."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
								},
								{
									"key": "create_time_start",
									"value": "66825797",
									"description": "The timestamp (in UNIX seconds) for the start of the search window."
								},
								{
									"key": "create_time_end",
									"value": "66825797",
									"description": "The timestamp (in UNIX seconds) for the end of the search window."
								},
								{
									"key": "owner_id",
									"value": "<string>",
									"description": "The ID of the legal entity you want to lookup accounts for."
								},
								{
									"key": "beneficiary_legal_entity_id",
									"value": "<string>",
									"description": "Filter search window by elements that match the account's beneficiary legal entity."
								},
								{
									"key": "reference_id",
									"value": "in sed commodo",
									"description": "Return elements having this reference_id."
								}
							]
						},
						"description": "The GET /accounts call allows your platform to look up a collection of accounts. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
					},
					"response": [
						{
							"id": "026c5ee9-0585-4bde-8cd2-d33855cd51d9",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=<string>&beneficiary_legal_entity_id=<string>&reference_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "<string>",
											"description": "The ID of the legal entity you want to lookup accounts for."
										},
										{
											"key": "beneficiary_legal_entity_id",
											"value": "<string>",
											"description": "Filter search window by elements that match the account's beneficiary legal entity."
										},
										{
											"key": "reference_id",
											"value": "in sed commodo",
											"description": "Return elements having this reference_id."
										}
									]
								},
								"description": "The GET /accounts call allows your platform to look up a collection of accounts. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"previous\": \"<string>\",\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "92bdd6fe-aa2e-469c-bd21-7ae35d82ac64",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=<string>&beneficiary_legal_entity_id=<string>&reference_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "<string>",
											"description": "The ID of the legal entity you want to lookup accounts for."
										},
										{
											"key": "beneficiary_legal_entity_id",
											"value": "<string>",
											"description": "Filter search window by elements that match the account's beneficiary legal entity."
										},
										{
											"key": "reference_id",
											"value": "in sed commodo",
											"description": "Return elements having this reference_id."
										}
									]
								},
								"description": "The GET /accounts call allows your platform to look up a collection of accounts. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "46209828-e924-434c-9274-fb7044a794d5",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=<string>&beneficiary_legal_entity_id=<string>&reference_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "<string>",
											"description": "The ID of the legal entity you want to lookup accounts for."
										},
										{
											"key": "beneficiary_legal_entity_id",
											"value": "<string>",
											"description": "Filter search window by elements that match the account's beneficiary legal entity."
										},
										{
											"key": "reference_id",
											"value": "in sed commodo",
											"description": "Return elements having this reference_id."
										}
									]
								},
								"description": "The GET /accounts call allows your platform to look up a collection of accounts. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "096d0a93-2e89-4f78-8203-ff68d3e89acd",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=<string>&beneficiary_legal_entity_id=<string>&reference_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "<string>",
											"description": "The ID of the legal entity you want to lookup accounts for."
										},
										{
											"key": "beneficiary_legal_entity_id",
											"value": "<string>",
											"description": "Filter search window by elements that match the account's beneficiary legal entity."
										},
										{
											"key": "reference_id",
											"value": "in sed commodo",
											"description": "Return elements having this reference_id."
										}
									]
								},
								"description": "The GET /accounts call allows your platform to look up a collection of accounts. The accounts resource allows your platform to create a new merchant account for each distinct business purpose."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "9d7584d3-50bc-49f6-94dc-40ea3b5d01db"
		},
		{
			"name": "adjustments",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get an adjustment",
							"id": "c045f886-a37e-4318-894e-5faf27007845",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/adjustments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"adjustments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the adjustment, generated by WePay when the adjustment is created."
										}
									]
								},
								"description": "The GET /adjustments/{id} call allows your platform to look up a single adjustment. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `adjustments.created` Notification event topic in order to programmatically integrate new Adjustments that WePay makes to the merchant's Account."
							},
							"response": [
								{
									"id": "d7252385-97c8-460d-8f60-47439786505e",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/adjustments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"adjustments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the adjustment, generated by WePay when the adjustment is created."
												}
											]
										},
										"description": "The GET /adjustments/{id} call allows your platform to look up a single adjustment. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `adjustments.created` Notification event topic in order to programmatically integrate new Adjustments that WePay makes to the merchant's Account."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"txnr_adjustment\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reason\": {\n    \"reason_code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"reason_message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"details\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"currency\": \"<string>\",\n  \"amount\": \"<integer>\",\n  \"create_time\": \"<long>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "81bb48b5-871a-4543-885f-192065ed84bb",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/adjustments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"adjustments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the adjustment, generated by WePay when the adjustment is created."
												}
											]
										},
										"description": "The GET /adjustments/{id} call allows your platform to look up a single adjustment. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `adjustments.created` Notification event topic in order to programmatically integrate new Adjustments that WePay makes to the merchant's Account."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "7f6b8fea-68bc-4079-92fc-5a6e7d91ebfc",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/adjustments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"adjustments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the adjustment, generated by WePay when the adjustment is created."
												}
											]
										},
										"description": "The GET /adjustments/{id} call allows your platform to look up a single adjustment. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `adjustments.created` Notification event topic in order to programmatically integrate new Adjustments that WePay makes to the merchant's Account."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "66291e75-7da9-421b-833f-2a7a8fd188cf",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/adjustments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"adjustments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the adjustment, generated by WePay when the adjustment is created."
												}
											]
										},
										"description": "The GET /adjustments/{id} call allows your platform to look up a single adjustment. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `adjustments.created` Notification event topic in order to programmatically integrate new Adjustments that WePay makes to the merchant's Account."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update an adjustment",
							"id": "8e67608d-3c67-43ae-8a59-b70acbe999ba",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"custom_data\": {\n    \"reference_number\": 43453\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/adjustments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"adjustments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the adjustment, generated by WePay when the adjustment is created."
										}
									]
								},
								"description": "The POST /adjustments/{id} call allows your platform to update and add custom data to an adjustment. The adjustments resource notifies your platform that WePay made an adjustment to an account."
							},
							"response": [
								{
									"id": "20698fb4-3e9a-4675-a165-b7bbe1e96a15",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": {\n    \"reference_number\": 43453\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/adjustments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"adjustments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the adjustment, generated by WePay when the adjustment is created."
												}
											]
										},
										"description": "The POST /adjustments/{id} call allows your platform to update and add custom data to an adjustment. The adjustments resource notifies your platform that WePay made an adjustment to an account."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"txnr_adjustment\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reason\": {\n    \"reason_code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"reason_message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"details\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"currency\": \"<string>\",\n  \"amount\": \"<integer>\",\n  \"create_time\": \"<long>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "ff391e12-c1f7-4ec6-8c8b-15063bb27dfb",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": {\n    \"reference_number\": 43453\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/adjustments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"adjustments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the adjustment, generated by WePay when the adjustment is created."
												}
											]
										},
										"description": "The POST /adjustments/{id} call allows your platform to update and add custom data to an adjustment. The adjustments resource notifies your platform that WePay made an adjustment to an account."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "31c63af7-0221-4234-ac1d-fb51cb7d68f7",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": {\n    \"reference_number\": 43453\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/adjustments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"adjustments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the adjustment, generated by WePay when the adjustment is created."
												}
											]
										},
										"description": "The POST /adjustments/{id} call allows your platform to update and add custom data to an adjustment. The adjustments resource notifies your platform that WePay made an adjustment to an account."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "fc08ae5b-ad5c-469e-a0de-c828ce919c97",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": {\n    \"reference_number\": 43453\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/adjustments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"adjustments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the adjustment, generated by WePay when the adjustment is created."
												}
											]
										},
										"description": "The POST /adjustments/{id} call allows your platform to update and add custom data to an adjustment. The adjustments resource notifies your platform that WePay made an adjustment to an account."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "5e8af44d-31cb-4083-992f-50768415273b"
				},
				{
					"name": "Get a collection of adjustments",
					"id": "7fbd801e-7d5a-43df-bd69-48bf0077b97e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/adjustments?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"adjustments"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements from this page."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
								},
								{
									"key": "create_time_start",
									"value": "66825797",
									"description": "The timestamp for the start of the search window."
								},
								{
									"key": "create_time_end",
									"value": "66825797",
									"description": "The timestamp for the end of the search window."
								},
								{
									"key": "owner_id",
									"value": "in sed commodo",
									"description": "Return elements owned by this resource instance."
								}
							]
						},
						"description": "The GET /adjustments call allows your platform to look up a collection of adjustments. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `adjustments.created` Notification event topic in order to programmatically integrate new Adjustments that WePay makes to the merchant's Account."
					},
					"response": [
						{
							"id": "0d70ead0-a832-471b-a5cc-43352548ce1e",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/adjustments?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"adjustments"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										}
									]
								},
								"description": "The GET /adjustments call allows your platform to look up a collection of adjustments. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `adjustments.created` Notification event topic in order to programmatically integrate new Adjustments that WePay makes to the merchant's Account."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"previous\": \"<string>\",\n  \"next\": \"<string>\",\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "43a7ddd3-b603-4513-b681-760068d36dff",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/adjustments?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"adjustments"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										}
									]
								},
								"description": "The GET /adjustments call allows your platform to look up a collection of adjustments. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `adjustments.created` Notification event topic in order to programmatically integrate new Adjustments that WePay makes to the merchant's Account."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "433744ca-b137-4fad-97df-0a9389512068",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/adjustments?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"adjustments"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										}
									]
								},
								"description": "The GET /adjustments call allows your platform to look up a collection of adjustments. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `adjustments.created` Notification event topic in order to programmatically integrate new Adjustments that WePay makes to the merchant's Account."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "bacff628-8a84-4ed3-a982-d550e70d961b",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/adjustments?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"adjustments"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										}
									]
								},
								"description": "The GET /adjustments call allows your platform to look up a collection of adjustments. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `adjustments.created` Notification event topic in order to programmatically integrate new Adjustments that WePay makes to the merchant's Account."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "e1f85e3c-c40a-41c0-babe-56bd1c0d7946"
		},
		{
			"name": "billing_statements",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get a billing statement",
							"id": "737705de-94d6-49f8-a144-61aa213e9155",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing_statements/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing_statements",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) "
										}
									]
								},
								"description": "The GET /billing_statements/{id} call allows your platform to look up a single billing statement. Billing statements provide aggregate transaction amounts for an account in a certain time period. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
							},
							"response": [
								{
									"id": "5627e02e-afde-4199-aec1-617c419f4d48",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing_statements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing_statements",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The GET /billing_statements/{id} call allows your platform to look up a single billing statement. Billing statements provide aggregate transaction amounts for an account in a certain time period. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"total_fee_amount\": \"<integer>\",\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"month\": \"<integer>\",\n  \"year\": \"<integer>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "1f590f15-baab-4b2a-b81f-1fd86d5527d6",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing_statements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing_statements",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The GET /billing_statements/{id} call allows your platform to look up a single billing statement. Billing statements provide aggregate transaction amounts for an account in a certain time period. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "69c5efcd-67d6-430a-8fe2-87d547cabd29",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing_statements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing_statements",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The GET /billing_statements/{id} call allows your platform to look up a single billing statement. Billing statements provide aggregate transaction amounts for an account in a certain time period. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "98cf02ca-3834-4e38-a355-b8355a918725",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing_statements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing_statements",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The GET /billing_statements/{id} call allows your platform to look up a single billing statement. Billing statements provide aggregate transaction amounts for an account in a certain time period. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get fees in a billing statement",
							"id": "22df124c-864e-4b7c-8962-6fed849f1e2b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing_statements/:id/fees_summary?page=in sed commodo&page_size=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing_statements",
										":id",
										"fees_summary"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Maximum number of items per page of results."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) "
										}
									]
								},
								"description": "The GET /billing_statements/{id}/fees_summary call allows your platform to look up fees associated with a merchant's billing statement. Fees are organized in the response based on fee type and fee category. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
							},
							"response": [
								{
									"id": "50faff6c-f895-478e-ae89-e6d8ca442773",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing_statements/:id/fees_summary?page=in sed commodo&page_size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing_statements",
												":id",
												"fees_summary"
											],
											"query": [
												{
													"key": "page",
													"value": "in sed commodo",
													"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
												},
												{
													"key": "page_size",
													"value": "10",
													"description": "Maximum number of items per page of results."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The GET /billing_statements/{id}/fees_summary call allows your platform to look up fees associated with a merchant's billing statement. Fees are organized in the response based on fee type and fee category. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"previous\": \"<string>\",\n  \"api_version\": \"<string>\"\n}"
								},
								{
									"id": "157c16ab-43fc-499b-bb25-b2b7a7c9bd9a",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing_statements/:id/fees_summary?page=in sed commodo&page_size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing_statements",
												":id",
												"fees_summary"
											],
											"query": [
												{
													"key": "page",
													"value": "in sed commodo",
													"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
												},
												{
													"key": "page_size",
													"value": "10",
													"description": "Maximum number of items per page of results."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The GET /billing_statements/{id}/fees_summary call allows your platform to look up fees associated with a merchant's billing statement. Fees are organized in the response based on fee type and fee category. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "212ab9b3-c731-4b04-8ac7-e02825314d10",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing_statements/:id/fees_summary?page=in sed commodo&page_size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing_statements",
												":id",
												"fees_summary"
											],
											"query": [
												{
													"key": "page",
													"value": "in sed commodo",
													"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
												},
												{
													"key": "page_size",
													"value": "10",
													"description": "Maximum number of items per page of results."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The GET /billing_statements/{id}/fees_summary call allows your platform to look up fees associated with a merchant's billing statement. Fees are organized in the response based on fee type and fee category. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "4b721ec4-1891-4ffa-bf93-2a7a8fab658e",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing_statements/:id/fees_summary?page=in sed commodo&page_size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing_statements",
												":id",
												"fees_summary"
											],
											"query": [
												{
													"key": "page",
													"value": "in sed commodo",
													"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
												},
												{
													"key": "page_size",
													"value": "10",
													"description": "Maximum number of items per page of results."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The GET /billing_statements/{id}/fees_summary call allows your platform to look up fees associated with a merchant's billing statement. Fees are organized in the response based on fee type and fee category. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get transactions in a billing statement",
							"id": "22b92474-e78f-41c9-b64d-2fff3e72dbf2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing_statements/:id/transactions_summary?page=in sed commodo&page_size=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing_statements",
										":id",
										"transactions_summary"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Maximum number of items per page of results."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) "
										}
									]
								},
								"description": "The GET /billing_statements/{id}/transactions_summary call allows your platform to look up all transactions in a single billing statement.Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
							},
							"response": [
								{
									"id": "549a9b5b-6b73-45bc-b4cf-89ba5c666e92",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing_statements/:id/transactions_summary?page=in sed commodo&page_size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing_statements",
												":id",
												"transactions_summary"
											],
											"query": [
												{
													"key": "page",
													"value": "in sed commodo",
													"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
												},
												{
													"key": "page_size",
													"value": "10",
													"description": "Maximum number of items per page of results."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The GET /billing_statements/{id}/transactions_summary call allows your platform to look up all transactions in a single billing statement.Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"next\": \"<string>\",\n  \"previous\": \"<string>\",\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"api_version\": \"<string>\"\n}"
								},
								{
									"id": "2cd01acb-a1ac-4c28-a86c-f49da8d887e7",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing_statements/:id/transactions_summary?page=in sed commodo&page_size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing_statements",
												":id",
												"transactions_summary"
											],
											"query": [
												{
													"key": "page",
													"value": "in sed commodo",
													"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
												},
												{
													"key": "page_size",
													"value": "10",
													"description": "Maximum number of items per page of results."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The GET /billing_statements/{id}/transactions_summary call allows your platform to look up all transactions in a single billing statement.Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "3df123ac-04d0-4a03-a455-ee75f0d5778a",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing_statements/:id/transactions_summary?page=in sed commodo&page_size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing_statements",
												":id",
												"transactions_summary"
											],
											"query": [
												{
													"key": "page",
													"value": "in sed commodo",
													"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
												},
												{
													"key": "page_size",
													"value": "10",
													"description": "Maximum number of items per page of results."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The GET /billing_statements/{id}/transactions_summary call allows your platform to look up all transactions in a single billing statement.Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "09cc381d-9ec8-4182-89ad-0bba652aaea2",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/billing_statements/:id/transactions_summary?page=in sed commodo&page_size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"billing_statements",
												":id",
												"transactions_summary"
											],
											"query": [
												{
													"key": "page",
													"value": "in sed commodo",
													"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
												},
												{
													"key": "page_size",
													"value": "10",
													"description": "Maximum number of items per page of results."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The GET /billing_statements/{id}/transactions_summary call allows your platform to look up all transactions in a single billing statement.Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "a30e72c8-cdc5-4991-b144-675fb157ccc7"
				},
				{
					"name": "Get a collection of billing statements",
					"id": "1eb0c3a8-92de-46cf-ae5b-12a290e30c0f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/billing_statements?page=in sed commodo&page_size=10&account_id=in sed commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"billing_statements"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Maximum number of items per page of results."
								},
								{
									"key": "account_id",
									"value": "in sed commodo",
									"description": "All billing statements owned by an account."
								}
							]
						},
						"description": "The GET /billing_statements call allows your platform to look up a collection of billing statements. Billing statements provide aggregate transaction amounts for an account in a certain time period. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
					},
					"response": [
						{
							"id": "2be0fc67-4f18-4ec8-8a0c-7478e414c3a4",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing_statements?page=in sed commodo&page_size=10&account_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing_statements"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Maximum number of items per page of results."
										},
										{
											"key": "account_id",
											"value": "in sed commodo",
											"description": "All billing statements owned by an account."
										}
									]
								},
								"description": "The GET /billing_statements call allows your platform to look up a collection of billing statements. Billing statements provide aggregate transaction amounts for an account in a certain time period. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"next\": \"<string>\",\n  \"previous\": \"<string>\",\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "55780a24-f8ec-4b83-ae20-7b7a024abaa0",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing_statements?page=in sed commodo&page_size=10&account_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing_statements"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Maximum number of items per page of results."
										},
										{
											"key": "account_id",
											"value": "in sed commodo",
											"description": "All billing statements owned by an account."
										}
									]
								},
								"description": "The GET /billing_statements call allows your platform to look up a collection of billing statements. Billing statements provide aggregate transaction amounts for an account in a certain time period. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "5d974203-46dc-45f7-b1a1-1b22087d8e32",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing_statements?page=in sed commodo&page_size=10&account_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing_statements"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Maximum number of items per page of results."
										},
										{
											"key": "account_id",
											"value": "in sed commodo",
											"description": "All billing statements owned by an account."
										}
									]
								},
								"description": "The GET /billing_statements call allows your platform to look up a collection of billing statements. Billing statements provide aggregate transaction amounts for an account in a certain time period. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "609ce537-e83e-4a63-9c2e-3a3b071d6ae2",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing_statements?page=in sed commodo&page_size=10&account_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing_statements"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Maximum number of items per page of results."
										},
										{
											"key": "account_id",
											"value": "in sed commodo",
											"description": "All billing statements owned by an account."
										}
									]
								},
								"description": "The GET /billing_statements call allows your platform to look up a collection of billing statements. Billing statements provide aggregate transaction amounts for an account in a certain time period. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `billing_statements.created` Notification event topic to programmatically incorporate new Billing Statements. Learn more about [MIC+](/docs/cookbooks/merchant-interchange+)."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "08bb00ab-0ff6-4eab-93be-cab52d933fe4"
		},
		{
			"name": "disputes",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get a dispute",
							"id": "d1fddbc5-3dc9-4714-be5c-1917cf4f07af",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/disputes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"disputes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the dispute, generated by WePay when the dispute is created."
										}
									]
								},
								"description": "The GET /disputes/{id} call allows your platform to look up a single dispute. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `disputes.created` Notification event topic in order to programmatically integrate any new Disputes that a merchant receives. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
							},
							"response": [
								{
									"id": "d3919b8c-1602-4523-ba31-8c8a1563b27e",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/disputes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"disputes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the dispute, generated by WePay when the dispute is created."
												}
											]
										},
										"description": "The GET /disputes/{id} call allows your platform to look up a single dispute. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `disputes.created` Notification event topic in order to programmatically integrate any new Disputes that a merchant receives. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"amount\": \"<integer>\",\n  \"fee\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"payment\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"card_brand\": \"<string>\",\n  \"reason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resolution\": {\n    \"resolution_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"txnr_chargeback_merchant\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_chargeback_reversal_merchant\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_merchant_chargeback_fee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_chargeback_app_fees\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_chargeback_reversal_app_fee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"documentation\": {\n    \"documents\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"explanation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "1c525a5f-c4e8-4c92-9a2b-99c62c280a27",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/disputes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"disputes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the dispute, generated by WePay when the dispute is created."
												}
											]
										},
										"description": "The GET /disputes/{id} call allows your platform to look up a single dispute. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `disputes.created` Notification event topic in order to programmatically integrate any new Disputes that a merchant receives. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "b1ebe7ac-e580-4804-824c-d6ade5a14157",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/disputes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"disputes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the dispute, generated by WePay when the dispute is created."
												}
											]
										},
										"description": "The GET /disputes/{id} call allows your platform to look up a single dispute. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `disputes.created` Notification event topic in order to programmatically integrate any new Disputes that a merchant receives. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "0bfee31f-3044-4e74-a6c0-0fab69132532",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/disputes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"disputes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the dispute, generated by WePay when the dispute is created."
												}
											]
										},
										"description": "The GET /disputes/{id} call allows your platform to look up a single dispute. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `disputes.created` Notification event topic in order to programmatically integrate any new Disputes that a merchant receives. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update a dispute",
							"id": "cc4de742-ccca-4901-b39d-dd7de5d101bf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"documentation\": {\n    \"documents\": [\n      \"docu-abc123\",\n      \"docu-efg456\",\n      \"docu-hij789\"\n    ],\n    \"explanation\": \"lorem ipsum dolores umbridge\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/disputes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"disputes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the dispute, generated by WePay when the dispute is created."
										}
									]
								},
								"description": "The POST /disputes/{id}  call allows your platform to update and add custom data to a single dispute. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `disputes.created` Notification event topic in order to programmatically integrate any new Disputes that a merchant receives. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
							},
							"response": [
								{
									"id": "da31dc26-5de2-4b23-90fc-7c411f64c362",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"documentation\": {\n    \"documents\": [\n      \"docu-abc123\",\n      \"docu-efg456\",\n      \"docu-hij789\"\n    ],\n    \"explanation\": \"lorem ipsum dolores umbridge\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/disputes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"disputes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the dispute, generated by WePay when the dispute is created."
												}
											]
										},
										"description": "The POST /disputes/{id}  call allows your platform to update and add custom data to a single dispute. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `disputes.created` Notification event topic in order to programmatically integrate any new Disputes that a merchant receives. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"amount\": \"<integer>\",\n  \"fee\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"payment\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"card_brand\": \"<string>\",\n  \"reason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resolution\": {\n    \"resolution_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"txnr_chargeback_merchant\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_chargeback_reversal_merchant\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_merchant_chargeback_fee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_chargeback_app_fees\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_chargeback_reversal_app_fee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"documentation\": {\n    \"documents\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"explanation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "5e411f1a-c4bc-4341-a8d2-30cd79b5c821",
									"name": "DISPUTE_CANNOT_BE_FURTHER_MODIFIED, INVALID_PARAMS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"documentation\": {\n    \"documents\": [\n      \"docu-abc123\",\n      \"docu-efg456\",\n      \"docu-hij789\"\n    ],\n    \"explanation\": \"lorem ipsum dolores umbridge\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/disputes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"disputes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the dispute, generated by WePay when the dispute is created."
												}
											]
										},
										"description": "The POST /disputes/{id}  call allows your platform to update and add custom data to a single dispute. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `disputes.created` Notification event topic in order to programmatically integrate any new Disputes that a merchant receives. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "a9c72ba7-bce7-4d32-a3a4-3be38edb939d",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"documentation\": {\n    \"documents\": [\n      \"docu-abc123\",\n      \"docu-efg456\",\n      \"docu-hij789\"\n    ],\n    \"explanation\": \"lorem ipsum dolores umbridge\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/disputes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"disputes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the dispute, generated by WePay when the dispute is created."
												}
											]
										},
										"description": "The POST /disputes/{id}  call allows your platform to update and add custom data to a single dispute. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `disputes.created` Notification event topic in order to programmatically integrate any new Disputes that a merchant receives. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "825124fd-73c5-44d5-9b76-c8d4be836540",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"documentation\": {\n    \"documents\": [\n      \"docu-abc123\",\n      \"docu-efg456\",\n      \"docu-hij789\"\n    ],\n    \"explanation\": \"lorem ipsum dolores umbridge\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/disputes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"disputes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the dispute, generated by WePay when the dispute is created."
												}
											]
										},
										"description": "The POST /disputes/{id}  call allows your platform to update and add custom data to a single dispute. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `disputes.created` Notification event topic in order to programmatically integrate any new Disputes that a merchant receives. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Concede a dispute",
							"id": "16c517da-0f8a-4b3f-8f77-9835eda4cb61",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/disputes/:id/concede",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"disputes",
										":id",
										"concede"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) "
										}
									]
								},
								"description": "The POST /disputes/{id}/concede call allows your platform to concede a dispute on behalf of your merchant. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
							},
							"response": [
								{
									"id": "3a327611-3775-4a43-b88b-a00de6f1fa1f",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/disputes/:id/concede",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"disputes",
												":id",
												"concede"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The POST /disputes/{id}/concede call allows your platform to concede a dispute on behalf of your merchant. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"amount\": \"<integer>\",\n  \"fee\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"payment\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"card_brand\": \"<string>\",\n  \"reason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resolution\": {\n    \"resolution_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"txnr_chargeback_merchant\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_chargeback_reversal_merchant\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_merchant_chargeback_fee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_chargeback_app_fees\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_chargeback_reversal_app_fee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"documentation\": {\n    \"documents\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"explanation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "182e43e1-b259-4651-b63c-7442310cf024",
									"name": "DISPUTE_CANNOT_BE_CONCEDED, INVALID_PARAMS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/disputes/:id/concede",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"disputes",
												":id",
												"concede"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The POST /disputes/{id}/concede call allows your platform to concede a dispute on behalf of your merchant. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "0a62887c-5659-4280-9265-782442e07e32",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/disputes/:id/concede",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"disputes",
												":id",
												"concede"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The POST /disputes/{id}/concede call allows your platform to concede a dispute on behalf of your merchant. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "13e061b7-c32a-49b2-aa13-0d9e21f53825",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/disputes/:id/concede",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"disputes",
												":id",
												"concede"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The POST /disputes/{id}/concede call allows your platform to concede a dispute on behalf of your merchant. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "131a248d-141d-44dc-9c51-1bacf42a50de"
				},
				{
					"name": "Get a collection of disputes",
					"id": "e4922bdc-751e-444b-a89f-16b7965ffe98",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/disputes?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&type=second_chargeback&payment_id=in sed commodo&status=awaiting_chargeback_decision_with_credit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"disputes"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements from this page."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
								},
								{
									"key": "create_time_start",
									"value": "66825797",
									"description": "The timestamp for the start of the search window."
								},
								{
									"key": "create_time_end",
									"value": "66825797",
									"description": "The timestamp for the end of the search window."
								},
								{
									"key": "owner_id",
									"value": "in sed commodo",
									"description": "Return elements owned by this resource instance."
								},
								{
									"key": "type",
									"value": "second_chargeback",
									"description": "Type of dispute. Possible values: `chargeback`, `inquiry`."
								},
								{
									"key": "payment_id",
									"value": "in sed commodo",
									"description": "ID of the payment associated with the dispute."
								},
								{
									"key": "status",
									"value": "awaiting_chargeback_decision_with_credit",
									"description": "Status of the dispute. Possible values include: `awaiting_merchant_response`, `awaiting_chargeback_decision`, `pending_wepay_review`,`resolved`,`awaiting_chargeback_decision_with_credit`,`awaiting_chargeback_decision_without_credit`."
								}
							]
						},
						"description": "The GET /disputes call allows your platform to look up a collection of disputes. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `disputes.created` Notification event topic in order to programmatically integrate any new Disputes that a merchant receives. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
					},
					"response": [
						{
							"id": "ca885608-968e-45cd-bcb1-d3f232790bac",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/disputes?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&type=second_chargeback&payment_id=in sed commodo&status=awaiting_chargeback_decision_with_credit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"disputes"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										},
										{
											"key": "type",
											"value": "second_chargeback",
											"description": "Type of dispute. Possible values: `chargeback`, `inquiry`."
										},
										{
											"key": "payment_id",
											"value": "in sed commodo",
											"description": "ID of the payment associated with the dispute."
										},
										{
											"key": "status",
											"value": "awaiting_chargeback_decision_with_credit",
											"description": "Status of the dispute. Possible values include: `awaiting_merchant_response`, `awaiting_chargeback_decision`, `pending_wepay_review`,`resolved`,`awaiting_chargeback_decision_with_credit`,`awaiting_chargeback_decision_without_credit`."
										}
									]
								},
								"description": "The GET /disputes call allows your platform to look up a collection of disputes. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `disputes.created` Notification event topic in order to programmatically integrate any new Disputes that a merchant receives. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"previous\": \"<string>\",\n  \"next\": \"<string>\",\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "3bb26969-15bc-4f79-bd78-6aaeed40898f",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/disputes?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&type=second_chargeback&payment_id=in sed commodo&status=awaiting_chargeback_decision_with_credit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"disputes"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										},
										{
											"key": "type",
											"value": "second_chargeback",
											"description": "Type of dispute. Possible values: `chargeback`, `inquiry`."
										},
										{
											"key": "payment_id",
											"value": "in sed commodo",
											"description": "ID of the payment associated with the dispute."
										},
										{
											"key": "status",
											"value": "awaiting_chargeback_decision_with_credit",
											"description": "Status of the dispute. Possible values include: `awaiting_merchant_response`, `awaiting_chargeback_decision`, `pending_wepay_review`,`resolved`,`awaiting_chargeback_decision_with_credit`,`awaiting_chargeback_decision_without_credit`."
										}
									]
								},
								"description": "The GET /disputes call allows your platform to look up a collection of disputes. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `disputes.created` Notification event topic in order to programmatically integrate any new Disputes that a merchant receives. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "2bb73ca4-42f8-4122-be31-a74625375385",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/disputes?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&type=second_chargeback&payment_id=in sed commodo&status=awaiting_chargeback_decision_with_credit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"disputes"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										},
										{
											"key": "type",
											"value": "second_chargeback",
											"description": "Type of dispute. Possible values: `chargeback`, `inquiry`."
										},
										{
											"key": "payment_id",
											"value": "in sed commodo",
											"description": "ID of the payment associated with the dispute."
										},
										{
											"key": "status",
											"value": "awaiting_chargeback_decision_with_credit",
											"description": "Status of the dispute. Possible values include: `awaiting_merchant_response`, `awaiting_chargeback_decision`, `pending_wepay_review`,`resolved`,`awaiting_chargeback_decision_with_credit`,`awaiting_chargeback_decision_without_credit`."
										}
									]
								},
								"description": "The GET /disputes call allows your platform to look up a collection of disputes. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `disputes.created` Notification event topic in order to programmatically integrate any new Disputes that a merchant receives. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "0e0668f9-40ce-4004-ae65-e06d4e65f4bf",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/disputes?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&type=second_chargeback&payment_id=in sed commodo&status=awaiting_chargeback_decision_with_credit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"disputes"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										},
										{
											"key": "type",
											"value": "second_chargeback",
											"description": "Type of dispute. Possible values: `chargeback`, `inquiry`."
										},
										{
											"key": "payment_id",
											"value": "in sed commodo",
											"description": "ID of the payment associated with the dispute."
										},
										{
											"key": "status",
											"value": "awaiting_chargeback_decision_with_credit",
											"description": "Status of the dispute. Possible values include: `awaiting_merchant_response`, `awaiting_chargeback_decision`, `pending_wepay_review`,`resolved`,`awaiting_chargeback_decision_with_credit`,`awaiting_chargeback_decision_without_credit`."
										}
									]
								},
								"description": "The GET /disputes call allows your platform to look up a collection of disputes. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `disputes.created` Notification event topic in order to programmatically integrate any new Disputes that a merchant receives. Learn more about Disputes in [Manage Payment Operations](/clear/options/respond-to-disputes/) and in the [Disputes Deep Dive](/docs/resources/disputes-deep-dive) resource."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "82930738-46c6-4248-8572-63eebdc1143d"
		},
		{
			"name": "items",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get an item",
							"id": "e15f630e-a752-4a75-876b-bcaecc8b7791",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/items/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"items",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the order, generated by WePay when the order is created."
										}
									]
								},
								"description": "The GET /items/{id} call allows your platform to look up a single item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
							},
							"response": [
								{
									"id": "53becec2-d8dc-404d-bd0a-5f378691e342",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The GET /items/{id} call allows your platform to look up a single item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"product_name\": \"<string>\",\n  \"state\": \"<string>\",\n  \"account_id\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"<string>\",\n  \"photos\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"price\": \"<integer>\",\n  \"product_code\": \"<string>\",\n  \"product_details\": {\n    \"dolore_c5f\": 88976241\n  },\n  \"reference_number\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shipping_options\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"terms\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"uri\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"weight\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "5ab76458-d2f3-4357-9836-bbc02aeca6db",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The GET /items/{id} call allows your platform to look up a single item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "a5a1cacb-43cf-4eb0-baa7-bce71ad99814",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The GET /items/{id} call allows your platform to look up a single item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "2e3e8e4f-6a95-48a3-98a0-a22941b63403",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The GET /items/{id} call allows your platform to look up a single item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete an item",
							"id": "5c9d8346-c1f5-469a-a690-f98a201c81d3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/items/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"items",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the order, generated by WePay when the order is created."
										}
									]
								},
								"description": "The DELETE /items/{id} call allows your platform to delete an item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
							},
							"response": [
								{
									"id": "88916d1f-f752-4a97-aaea-bb7b29fe227e",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The DELETE /items/{id} call allows your platform to delete an item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"product_name\": \"<string>\",\n  \"state\": \"<string>\",\n  \"account_id\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"<string>\",\n  \"photos\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"price\": \"<integer>\",\n  \"product_code\": \"<string>\",\n  \"product_details\": {\n    \"dolore_c5f\": 88976241\n  },\n  \"reference_number\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shipping_options\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"terms\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"uri\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"weight\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "0b25aaa4-8d9f-4652-8cb4-dca08b424e9c",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The DELETE /items/{id} call allows your platform to delete an item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "bd872c80-0a7d-4081-bf68-50a6c11d199c",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The DELETE /items/{id} call allows your platform to delete an item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "1adfeaed-a6a4-4474-a9e3-15b83a824b89",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The DELETE /items/{id} call allows your platform to delete an item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update an item",
							"id": "4f059428-67ae-41a9-9fc1-f7570a54e8f0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"ABC123\",\n  \"description\": \"Classic Iron Anvil\",\n  \"photos\": [],\n  \"price\": 490,\n  \"product_code\": \"XYZ321\",\n  \"product_details\": {\n    \"band\": \"nike\"\n  },\n  \"product_name\": \"Acme Anvil - 100 Lb\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    }\n  ],\n  \"reference_number\": \"abc_123456\",\n  \"shipping_options\": [\n    \"regular\",\n    \"expedited\"\n  ],\n  \"terms\": {\n    \"terms_text\": \"lorem ipsum...\",\n    \"terms_uri\": \"https://example.com/terms_of_service\"\n  },\n  \"uri\": \"https://example.com/abc_123456\",\n  \"weight\": {\n    \"units\": \"pounds\",\n    \"weight\": 1\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/items/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"items",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the order, generated by WePay when the order is created."
										}
									]
								},
								"description": "The POST /items/{id} call allows your platform to update and add custom data an item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
							},
							"response": [
								{
									"id": "6828f058-a945-467a-a118-243ce78edd2c",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"account_id\": \"ABC123\",\n  \"description\": \"Classic Iron Anvil\",\n  \"photos\": [],\n  \"price\": 490,\n  \"product_code\": \"XYZ321\",\n  \"product_details\": {\n    \"band\": \"nike\"\n  },\n  \"product_name\": \"Acme Anvil - 100 Lb\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    }\n  ],\n  \"reference_number\": \"abc_123456\",\n  \"shipping_options\": [\n    \"regular\",\n    \"expedited\"\n  ],\n  \"terms\": {\n    \"terms_text\": \"lorem ipsum...\",\n    \"terms_uri\": \"https://example.com/terms_of_service\"\n  },\n  \"uri\": \"https://example.com/abc_123456\",\n  \"weight\": {\n    \"units\": \"pounds\",\n    \"weight\": 1\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The POST /items/{id} call allows your platform to update and add custom data an item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"product_name\": \"<string>\",\n  \"state\": \"<string>\",\n  \"account_id\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"<string>\",\n  \"photos\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"price\": \"<integer>\",\n  \"product_code\": \"<string>\",\n  \"product_details\": {\n    \"dolore_c5f\": 88976241\n  },\n  \"reference_number\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shipping_options\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"terms\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"uri\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"weight\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "532f1c8d-cec8-457f-8fb3-6bbf5adc985b",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"account_id\": \"ABC123\",\n  \"description\": \"Classic Iron Anvil\",\n  \"photos\": [],\n  \"price\": 490,\n  \"product_code\": \"XYZ321\",\n  \"product_details\": {\n    \"band\": \"nike\"\n  },\n  \"product_name\": \"Acme Anvil - 100 Lb\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    }\n  ],\n  \"reference_number\": \"abc_123456\",\n  \"shipping_options\": [\n    \"regular\",\n    \"expedited\"\n  ],\n  \"terms\": {\n    \"terms_text\": \"lorem ipsum...\",\n    \"terms_uri\": \"https://example.com/terms_of_service\"\n  },\n  \"uri\": \"https://example.com/abc_123456\",\n  \"weight\": {\n    \"units\": \"pounds\",\n    \"weight\": 1\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The POST /items/{id} call allows your platform to update and add custom data an item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "08c9e836-8868-4c3b-8775-df9cea89690e",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"account_id\": \"ABC123\",\n  \"description\": \"Classic Iron Anvil\",\n  \"photos\": [],\n  \"price\": 490,\n  \"product_code\": \"XYZ321\",\n  \"product_details\": {\n    \"band\": \"nike\"\n  },\n  \"product_name\": \"Acme Anvil - 100 Lb\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    }\n  ],\n  \"reference_number\": \"abc_123456\",\n  \"shipping_options\": [\n    \"regular\",\n    \"expedited\"\n  ],\n  \"terms\": {\n    \"terms_text\": \"lorem ipsum...\",\n    \"terms_uri\": \"https://example.com/terms_of_service\"\n  },\n  \"uri\": \"https://example.com/abc_123456\",\n  \"weight\": {\n    \"units\": \"pounds\",\n    \"weight\": 1\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The POST /items/{id} call allows your platform to update and add custom data an item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "7446206c-47aa-45c7-bf3e-7b1afea32091",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"account_id\": \"ABC123\",\n  \"description\": \"Classic Iron Anvil\",\n  \"photos\": [],\n  \"price\": 490,\n  \"product_code\": \"XYZ321\",\n  \"product_details\": {\n    \"band\": \"nike\"\n  },\n  \"product_name\": \"Acme Anvil - 100 Lb\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    }\n  ],\n  \"reference_number\": \"abc_123456\",\n  \"shipping_options\": [\n    \"regular\",\n    \"expedited\"\n  ],\n  \"terms\": {\n    \"terms_text\": \"lorem ipsum...\",\n    \"terms_uri\": \"https://example.com/terms_of_service\"\n  },\n  \"uri\": \"https://example.com/abc_123456\",\n  \"weight\": {\n    \"units\": \"pounds\",\n    \"weight\": 1\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The POST /items/{id} call allows your platform to update and add custom data an item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "27b82a31-d142-4513-945b-6c32dba6fa88"
				},
				{
					"name": "Create an item",
					"id": "bee70216-138d-4174-bb11-5b24375612c8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n  \"description\": \"Classic Iron Anvil\",\n  \"photos\": [],\n  \"price\": 490,\n  \"product_code\": \"XYZ321\",\n  \"product_details\": {\n    \"band\": \"nike\"\n  },\n  \"product_name\": \"Acme Anvil - 100 Lb\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    }\n  ],\n  \"reference_number\": \"abc_123456\",\n  \"shipping_options\": [\n    \"regular\",\n    \"expedited\"\n  ],\n  \"terms\": {\n    \"terms_text\": \"lorem ipsum...\",\n    \"terms_uri\": \"https://example.com/terms_of_service\"\n  },\n  \"uri\": \"https://example.com/abc_123456\",\n  \"weight\": {\n    \"units\": \"pounds\",\n    \"weight\": 1\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items"
							]
						},
						"description": "The POST /items call allows your platform to create a new item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
					},
					"response": [
						{
							"id": "c42436b7-93ac-49f2-917c-ded1e3ee5939",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n  \"description\": \"Classic Iron Anvil\",\n  \"photos\": [],\n  \"price\": 490,\n  \"product_code\": \"XYZ321\",\n  \"product_details\": {\n    \"band\": \"nike\"\n  },\n  \"product_name\": \"Acme Anvil - 100 Lb\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    }\n  ],\n  \"reference_number\": \"abc_123456\",\n  \"shipping_options\": [\n    \"regular\",\n    \"expedited\"\n  ],\n  \"terms\": {\n    \"terms_text\": \"lorem ipsum...\",\n    \"terms_uri\": \"https://example.com/terms_of_service\"\n  },\n  \"uri\": \"https://example.com/abc_123456\",\n  \"weight\": {\n    \"units\": \"pounds\",\n    \"weight\": 1\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"items"
									]
								},
								"description": "The POST /items call allows your platform to create a new item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"product_name\": \"<string>\",\n  \"state\": \"<string>\",\n  \"account_id\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"<string>\",\n  \"photos\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"price\": \"<integer>\",\n  \"product_code\": \"<string>\",\n  \"product_details\": {\n    \"dolore_45\": \"nostrud in dolore consequat\"\n  },\n  \"reference_number\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shipping_options\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"terms\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"uri\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"weight\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
						},
						{
							"id": "d4db0374-236b-4e6b-9ed0-7f935fad3118",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n  \"description\": \"Classic Iron Anvil\",\n  \"photos\": [],\n  \"price\": 490,\n  \"product_code\": \"XYZ321\",\n  \"product_details\": {\n    \"band\": \"nike\"\n  },\n  \"product_name\": \"Acme Anvil - 100 Lb\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    }\n  ],\n  \"reference_number\": \"abc_123456\",\n  \"shipping_options\": [\n    \"regular\",\n    \"expedited\"\n  ],\n  \"terms\": {\n    \"terms_text\": \"lorem ipsum...\",\n    \"terms_uri\": \"https://example.com/terms_of_service\"\n  },\n  \"uri\": \"https://example.com/abc_123456\",\n  \"weight\": {\n    \"units\": \"pounds\",\n    \"weight\": 1\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"items"
									]
								},
								"description": "The POST /items call allows your platform to create a new item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "56790a6d-d0e1-42a1-9c90-ca8654a3fd25",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n  \"description\": \"Classic Iron Anvil\",\n  \"photos\": [],\n  \"price\": 490,\n  \"product_code\": \"XYZ321\",\n  \"product_details\": {\n    \"band\": \"nike\"\n  },\n  \"product_name\": \"Acme Anvil - 100 Lb\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    }\n  ],\n  \"reference_number\": \"abc_123456\",\n  \"shipping_options\": [\n    \"regular\",\n    \"expedited\"\n  ],\n  \"terms\": {\n    \"terms_text\": \"lorem ipsum...\",\n    \"terms_uri\": \"https://example.com/terms_of_service\"\n  },\n  \"uri\": \"https://example.com/abc_123456\",\n  \"weight\": {\n    \"units\": \"pounds\",\n    \"weight\": 1\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"items"
									]
								},
								"description": "The POST /items call allows your platform to create a new item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "1e6c1cda-4ceb-45f2-94f0-65a556006def",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n  \"description\": \"Classic Iron Anvil\",\n  \"photos\": [],\n  \"price\": 490,\n  \"product_code\": \"XYZ321\",\n  \"product_details\": {\n    \"band\": \"nike\"\n  },\n  \"product_name\": \"Acme Anvil - 100 Lb\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    }\n  ],\n  \"reference_number\": \"abc_123456\",\n  \"shipping_options\": [\n    \"regular\",\n    \"expedited\"\n  ],\n  \"terms\": {\n    \"terms_text\": \"lorem ipsum...\",\n    \"terms_uri\": \"https://example.com/terms_of_service\"\n  },\n  \"uri\": \"https://example.com/abc_123456\",\n  \"weight\": {\n    \"units\": \"pounds\",\n    \"weight\": 1\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"items"
									]
								},
								"description": "The POST /items call allows your platform to create a new item. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a collection of items",
					"id": "a75df42c-8a19-45d5-bf84-eb2565d31bb0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/items?page=in sed commodo&page_size=10&create_time_start=-56303220&create_time_end=66825797&reference_number=in sed commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements from this page."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
								},
								{
									"key": "create_time_start",
									"value": "-56303220",
									"description": "The timestamp for the start of the search window."
								},
								{
									"key": "create_time_end",
									"value": "66825797",
									"description": "The timestamp for the end of the search window."
								},
								{
									"key": "reference_number",
									"value": "in sed commodo",
									"description": "Return items created with this reference number."
								}
							]
						},
						"description": "The GET /items call allows your platform to look up a collection of items. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
					},
					"response": [
						{
							"id": "afaae8d8-1dc7-474a-8546-5ad8b5f26fef",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/items?page=in sed commodo&page_size=10&create_time_start=-56303220&create_time_end=66825797&reference_number=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"items"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "-56303220",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "reference_number",
											"value": "in sed commodo",
											"description": "Return items created with this reference number."
										}
									]
								},
								"description": "The GET /items call allows your platform to look up a collection of items. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"previous\": \"<string>\",\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "e80a0519-9df5-49f7-ba31-e2b5f650c977",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/items?page=in sed commodo&page_size=10&create_time_start=-56303220&create_time_end=66825797&reference_number=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"items"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "-56303220",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "reference_number",
											"value": "in sed commodo",
											"description": "Return items created with this reference number."
										}
									]
								},
								"description": "The GET /items call allows your platform to look up a collection of items. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "9fa208ef-acb9-41e8-9651-9414465a842f",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/items?page=in sed commodo&page_size=10&create_time_start=-56303220&create_time_end=66825797&reference_number=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"items"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "-56303220",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "reference_number",
											"value": "in sed commodo",
											"description": "Return items created with this reference number."
										}
									]
								},
								"description": "The GET /items call allows your platform to look up a collection of items. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "d17a5e6a-4295-46f2-85ef-877993129f35",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/items?page=in sed commodo&page_size=10&create_time_start=-56303220&create_time_end=66825797&reference_number=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"items"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "-56303220",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "reference_number",
											"value": "in sed commodo",
											"description": "Return items created with this reference number."
										}
									]
								},
								"description": "The GET /items call allows your platform to look up a collection of items. Items describe an item or service for sale.  For standardized merchandise, an item could be a stock keeping unit (SKU). "
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "479e23aa-d9e2-4451-852c-9fba889a5aed"
		},
		{
			"name": "legal_entities",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "verifications",
							"item": [
								{
									"name": "Update verification information",
									"id": "f4d860bb-a115-4f84-99eb-b9aa777f5327",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"controller\": {\n    \"personal_verification\": {\n      \"documents\": [\n        \"724ec0d3-2eb5-461e-b72d-a15c6b1a9970\",\n        \"3838d4ba-f497-4b6f-8d22-19b90cec4f23\",\n        \"242f9ec7-a309-412c-976d-cc84074a508a\"\n      ]\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/legal_entities/:id/verifications?is_expanded=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"legal_entities",
												":id",
												"verifications"
											],
											"query": [
												{
													"key": "is_expanded",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
												}
											]
										},
										"description": "The POST /legal_entities/{id}/verifications call allows your platform to add and update documents to help WePay verify the identity of a legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
									},
									"response": [
										{
											"id": "f602e609-07c2-4383-a2fa-c5fd641bb4e5",
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Api-Version",
														"value": "3.0"
													},
													{
														"key": "Unique-Key",
														"value": "in sed commodo"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"controller\": {\n    \"personal_verification\": {\n      \"documents\": [\n        \"724ec0d3-2eb5-461e-b72d-a15c6b1a9970\",\n        \"3838d4ba-f497-4b6f-8d22-19b90cec4f23\",\n        \"242f9ec7-a309-412c-976d-cc84074a508a\"\n      ]\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/legal_entities/:id/verifications?is_expanded=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"legal_entities",
														":id",
														"verifications"
													],
													"query": [
														{
															"key": "is_expanded",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "Excepteur exercitation sed ut",
															"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
														}
													]
												},
												"description": "The POST /legal_entities/{id}/verifications call allows your platform to add and update documents to help WePay verify the identity of a legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"resource\": \"<string>\",\n  \"id\": \"<string>\",\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"resource\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"path\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"controller\": {\n    \"personal_verification\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"reference_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"additional_representatives\": {\n    \"representative_0\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"representative_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"representative_2\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"representative_3\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"entity_verification\": {\n    \"verified\": \"<boolean>\",\n    \"current_issues\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"documents\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"api_version\": \"<string>\"\n}"
										},
										{
											"id": "8abb304b-07e3-4404-8714-9f9ce999ee0a",
											"name": "INVALID_PARAMS, JSON_PARSE_FAILURE",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Api-Version",
														"value": "3.0"
													},
													{
														"key": "Unique-Key",
														"value": "in sed commodo"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"controller\": {\n    \"personal_verification\": {\n      \"documents\": [\n        \"724ec0d3-2eb5-461e-b72d-a15c6b1a9970\",\n        \"3838d4ba-f497-4b6f-8d22-19b90cec4f23\",\n        \"242f9ec7-a309-412c-976d-cc84074a508a\"\n      ]\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/legal_entities/:id/verifications?is_expanded=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"legal_entities",
														":id",
														"verifications"
													],
													"query": [
														{
															"key": "is_expanded",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "Excepteur exercitation sed ut",
															"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
														}
													]
												},
												"description": "The POST /legal_entities/{id}/verifications call allows your platform to add and update documents to help WePay verify the identity of a legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "a5c02b44-99e5-448b-8843-b6adf6344a8c",
											"name": "NOT_AUTHORIZED",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Api-Version",
														"value": "3.0"
													},
													{
														"key": "Unique-Key",
														"value": "in sed commodo"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"controller\": {\n    \"personal_verification\": {\n      \"documents\": [\n        \"724ec0d3-2eb5-461e-b72d-a15c6b1a9970\",\n        \"3838d4ba-f497-4b6f-8d22-19b90cec4f23\",\n        \"242f9ec7-a309-412c-976d-cc84074a508a\"\n      ]\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/legal_entities/:id/verifications?is_expanded=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"legal_entities",
														":id",
														"verifications"
													],
													"query": [
														{
															"key": "is_expanded",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "Excepteur exercitation sed ut",
															"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
														}
													]
												},
												"description": "The POST /legal_entities/{id}/verifications call allows your platform to add and update documents to help WePay verify the identity of a legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "daab8188-fbe0-4757-a037-7be3590fac53",
											"name": "RESOURCE_CONFLICT",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Api-Version",
														"value": "3.0"
													},
													{
														"key": "Unique-Key",
														"value": "in sed commodo"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"controller\": {\n    \"personal_verification\": {\n      \"documents\": [\n        \"724ec0d3-2eb5-461e-b72d-a15c6b1a9970\",\n        \"3838d4ba-f497-4b6f-8d22-19b90cec4f23\",\n        \"242f9ec7-a309-412c-976d-cc84074a508a\"\n      ]\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/legal_entities/:id/verifications?is_expanded=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"legal_entities",
														":id",
														"verifications"
													],
													"query": [
														{
															"key": "is_expanded",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "Excepteur exercitation sed ut",
															"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
														}
													]
												},
												"description": "The POST /legal_entities/{id}/verifications call allows your platform to add and update documents to help WePay verify the identity of a legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "870978ee-5c40-4ec0-837b-d92234e023ae",
											"name": "UNEXPECTED_ERROR",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Api-Version",
														"value": "3.0"
													},
													{
														"key": "Unique-Key",
														"value": "in sed commodo"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"controller\": {\n    \"personal_verification\": {\n      \"documents\": [\n        \"724ec0d3-2eb5-461e-b72d-a15c6b1a9970\",\n        \"3838d4ba-f497-4b6f-8d22-19b90cec4f23\",\n        \"242f9ec7-a309-412c-976d-cc84074a508a\"\n      ]\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/legal_entities/:id/verifications?is_expanded=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"legal_entities",
														":id",
														"verifications"
													],
													"query": [
														{
															"key": "is_expanded",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "Excepteur exercitation sed ut",
															"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
														}
													]
												},
												"description": "The POST /legal_entities/{id}/verifications call allows your platform to add and update documents to help WePay verify the identity of a legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get verification information",
									"id": "e0c26243-bf1d-4421-9537-665f772dfb04",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/legal_entities/:id/verifications?is_expanded=true&is_synchronous=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"legal_entities",
												":id",
												"verifications"
											],
											"query": [
												{
													"key": "is_expanded",
													"value": "true"
												},
												{
													"key": "is_synchronous",
													"value": "false",
													"description": "Delay returning until the legal entity has been assessed for risk. **Note:** The default is false."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
												}
											]
										},
										"description": "The GET /legal_entities/{id}/verifications call allows your platform to retrieve the information WePay requires to verify the identity of a legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
									},
									"response": [
										{
											"id": "800f87dc-5504-4515-b28c-5c852bcd7086",
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "Api-Version",
														"value": "3.0"
													},
													{
														"key": "Unique-Key",
														"value": "in sed commodo"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/legal_entities/:id/verifications?is_expanded=true&is_synchronous=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"legal_entities",
														":id",
														"verifications"
													],
													"query": [
														{
															"key": "is_expanded",
															"value": "true"
														},
														{
															"key": "is_synchronous",
															"value": "false",
															"description": "Delay returning until the legal entity has been assessed for risk. **Note:** The default is false."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "Excepteur exercitation sed ut",
															"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
														}
													]
												},
												"description": "The GET /legal_entities/{id}/verifications call allows your platform to retrieve the information WePay requires to verify the identity of a legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"resource\": \"<string>\",\n  \"id\": \"<string>\",\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"resource\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"path\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"controller\": {\n    \"personal_verification\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"reference_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"additional_representatives\": {\n    \"representative_0\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"representative_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"representative_2\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"representative_3\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"entity_verification\": {\n    \"verified\": \"<boolean>\",\n    \"current_issues\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"documents\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"api_version\": \"<string>\"\n}"
										},
										{
											"id": "99c16bb2-4a84-4124-991f-d76908389494",
											"name": "INVALID_PARAMS",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "Api-Version",
														"value": "3.0"
													},
													{
														"key": "Unique-Key",
														"value": "in sed commodo"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/legal_entities/:id/verifications?is_expanded=true&is_synchronous=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"legal_entities",
														":id",
														"verifications"
													],
													"query": [
														{
															"key": "is_expanded",
															"value": "true"
														},
														{
															"key": "is_synchronous",
															"value": "false",
															"description": "Delay returning until the legal entity has been assessed for risk. **Note:** The default is false."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "Excepteur exercitation sed ut",
															"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
														}
													]
												},
												"description": "The GET /legal_entities/{id}/verifications call allows your platform to retrieve the information WePay requires to verify the identity of a legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "a795b728-34cb-46e0-b26d-86a811301e91",
											"name": "NOT_AUTHORIZED",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "Api-Version",
														"value": "3.0"
													},
													{
														"key": "Unique-Key",
														"value": "in sed commodo"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/legal_entities/:id/verifications?is_expanded=true&is_synchronous=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"legal_entities",
														":id",
														"verifications"
													],
													"query": [
														{
															"key": "is_expanded",
															"value": "true"
														},
														{
															"key": "is_synchronous",
															"value": "false",
															"description": "Delay returning until the legal entity has been assessed for risk. **Note:** The default is false."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "Excepteur exercitation sed ut",
															"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
														}
													]
												},
												"description": "The GET /legal_entities/{id}/verifications call allows your platform to retrieve the information WePay requires to verify the identity of a legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "346b39f2-532f-41ee-86c2-a22fecca585c",
											"name": "UNEXPECTED_ERROR",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "Api-Version",
														"value": "3.0"
													},
													{
														"key": "Unique-Key",
														"value": "in sed commodo"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/legal_entities/:id/verifications?is_expanded=true&is_synchronous=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"legal_entities",
														":id",
														"verifications"
													],
													"query": [
														{
															"key": "is_expanded",
															"value": "true"
														},
														{
															"key": "is_synchronous",
															"value": "false",
															"description": "Delay returning until the legal entity has been assessed for risk. **Note:** The default is false."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "Excepteur exercitation sed ut",
															"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
														}
													]
												},
												"description": "The GET /legal_entities/{id}/verifications call allows your platform to retrieve the information WePay requires to verify the identity of a legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "6f07c714-6fcd-4361-a0a6-71fb237847ef"
						},
						{
							"name": "Update a legal entity",
							"id": "48e8367f-4b70-4243-9a23-57c9477a40d0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"attestation\": {\n    \"attester_type\": \"other_representative\",\n    \"other_representative\": {\n      \"attest_time\": 1490656130,\n      \"job_title\": \"CEO\",\n      \"name\": {\n        \"first\": \"Foo\",\n        \"last\": \"Bar\"\n      },\n      \"original_ip\": \"12.37.161.213\"\n    }\n  },\n  \"controller\": {\n    \"reference_id\": \"reference_id_0\",\n    \"address\": {\n      \"city\": \"Beverly Hills\",\n      \"country\": \"US\",\n      \"line1\": \"456 Nocturn Alley\",\n      \"postal_code\": \"90210\",\n      \"region\": \"CA\"\n    },\n    \"date_of_birth\": {\n      \"day\": 1,\n      \"month\": 1,\n      \"year\": 1900\n    },\n    \"email\": \"example@example.com\",\n    \"name\": {\n      \"first\": \"Foo\",\n      \"last\": \"Bar\"\n    },\n    \"personal_country_info\": {\n      \"US\": {\n        \"social_security_number\": \"012-34-5678\"\n      }\n    },\n    \"phone\": {\n      \"country_code\": \"+1\",\n      \"phone_number\": \"5556667777\"\n    },\n    \"job_title\": \"CFO\"\n  },\n  \"account_controller\": null,\n  \"controller_type\": \"controller\",\n  \"description\": \"The Foo Bar Shop on 5th ave.\",\n  \"entity_country_info\": {\n    \"US\": {\n      \"employer_identification_number\": \"123211230\"\n    }\n  },\n  \"entity_name\": \"Foo Bar Shop\",\n  \"email\": \"example@email.com\",\n  \"primary_url\": \"http://www.example.com\",\n  \"significant_beneficiaries\": {\n    \"affiliations\": {\n      \"affiliation_0\": {\n        \"name\": \"charity_a\",\n        \"countries\": [\n          \"US\",\n          \"CA\"\n        ],\n        \"association_types\": {\n          \"contractual_obligation\": true,\n          \"donor\": false,\n          \"funding_recipient\": false,\n          \"other\": \"other association_type\",\n          \"parent_organization\": true,\n          \"program_affiliation\": false,\n          \"resource_delivery_provider\": false,\n          \"transfer_retention_or_expenditure\": false\n        }\n      }\n    },\n    \"entities\": {\n      \"art_and_culture\": false,\n      \"education\": true,\n      \"individual\": false,\n      \"labor_union\": true,\n      \"other\": \"some significant beneficiary\",\n      \"political_organization\": false,\n      \"religious\": true,\n      \"social_service_and_economic_development\": false\n    },\n    \"geographies\": {\n      \"local\": true,\n      \"regional\": true,\n      \"national\": false,\n      \"international\": [\n        \"US\",\n        \"CA\"\n      ]\n    },\n    \"non_domestic_location_beneficiaries\": [\n      \"US\",\n      \"CA\"\n    ]\n  },\n  \"significant_donors\": {\n    \"corporate_entity\": true,\n    \"endowment_fund\": true,\n    \"government\": false,\n    \"individual\": true,\n    \"institutional\": false,\n    \"other\": \"some significant donor\",\n    \"other_charitable_organization\": true\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/legal_entities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legal_entities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
										}
									]
								},
								"description": "The POST /legal_entities/{id} call allows your platform to update and add custom data to a legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
							},
							"response": [
								{
									"id": "6bf0d598-746a-4431-9812-88bde2d0a815",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"attestation\": {\n    \"attester_type\": \"other_representative\",\n    \"other_representative\": {\n      \"attest_time\": 1490656130,\n      \"job_title\": \"CEO\",\n      \"name\": {\n        \"first\": \"Foo\",\n        \"last\": \"Bar\"\n      },\n      \"original_ip\": \"12.37.161.213\"\n    }\n  },\n  \"controller\": {\n    \"reference_id\": \"reference_id_0\",\n    \"address\": {\n      \"city\": \"Beverly Hills\",\n      \"country\": \"US\",\n      \"line1\": \"456 Nocturn Alley\",\n      \"postal_code\": \"90210\",\n      \"region\": \"CA\"\n    },\n    \"date_of_birth\": {\n      \"day\": 1,\n      \"month\": 1,\n      \"year\": 1900\n    },\n    \"email\": \"example@example.com\",\n    \"name\": {\n      \"first\": \"Foo\",\n      \"last\": \"Bar\"\n    },\n    \"personal_country_info\": {\n      \"US\": {\n        \"social_security_number\": \"012-34-5678\"\n      }\n    },\n    \"phone\": {\n      \"country_code\": \"+1\",\n      \"phone_number\": \"5556667777\"\n    },\n    \"job_title\": \"CFO\"\n  },\n  \"account_controller\": null,\n  \"controller_type\": \"controller\",\n  \"description\": \"The Foo Bar Shop on 5th ave.\",\n  \"entity_country_info\": {\n    \"US\": {\n      \"employer_identification_number\": \"123211230\"\n    }\n  },\n  \"entity_name\": \"Foo Bar Shop\",\n  \"email\": \"example@email.com\",\n  \"primary_url\": \"http://www.example.com\",\n  \"significant_beneficiaries\": {\n    \"affiliations\": {\n      \"affiliation_0\": {\n        \"name\": \"charity_a\",\n        \"countries\": [\n          \"US\",\n          \"CA\"\n        ],\n        \"association_types\": {\n          \"contractual_obligation\": true,\n          \"donor\": false,\n          \"funding_recipient\": false,\n          \"other\": \"other association_type\",\n          \"parent_organization\": true,\n          \"program_affiliation\": false,\n          \"resource_delivery_provider\": false,\n          \"transfer_retention_or_expenditure\": false\n        }\n      }\n    },\n    \"entities\": {\n      \"art_and_culture\": false,\n      \"education\": true,\n      \"individual\": false,\n      \"labor_union\": true,\n      \"other\": \"some significant beneficiary\",\n      \"political_organization\": false,\n      \"religious\": true,\n      \"social_service_and_economic_development\": false\n    },\n    \"geographies\": {\n      \"local\": true,\n      \"regional\": true,\n      \"national\": false,\n      \"international\": [\n        \"US\",\n        \"CA\"\n      ]\n    },\n    \"non_domestic_location_beneficiaries\": [\n      \"US\",\n      \"CA\"\n    ]\n  },\n  \"significant_donors\": {\n    \"corporate_entity\": true,\n    \"endowment_fund\": true,\n    \"government\": false,\n    \"individual\": true,\n    \"institutional\": false,\n    \"other\": \"some significant donor\",\n    \"other_charitable_organization\": true\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/legal_entities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"legal_entities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
												}
											]
										},
										"description": "The POST /legal_entities/{id} call allows your platform to update and add custom data to a legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"additional_representatives\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"controller\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"country\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"<string>\",\n  \"entity_country_info\": {\n    \"CA\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"US\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country_of_formation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"operates_in_sanctioned_countries\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"year_of_formation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"entity_name\": \"<string>\",\n  \"id\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"primary_url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"terms_of_service\": {\n    \"acceptance_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"original_ip\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"terms_of_service_version\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"account_controller\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attestation\": {\n    \"attester_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"additional_representative\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"controller\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"other_representative\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"controller_type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"email\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enterprise_customer_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"preferred_locale\": \"<string>\",\n  \"public_ownership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reference_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"referral_details\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"standard_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"coupon_code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"significant_beneficiaries\": {\n    \"affiliations\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"entities\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"geographies\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"non_domestic_location_beneficiaries\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"significant_donors\": {\n    \"corporate_entity\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endowment_fund\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"government\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"individual\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"institutional\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"other\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"other_charitable_organization\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
								},
								{
									"id": "82d8a10d-d558-49a9-bd62-cfe536a03f53",
									"name": "INVALID_PARAMS, UNSUPPORTED_COUNTRY",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"attestation\": {\n    \"attester_type\": \"other_representative\",\n    \"other_representative\": {\n      \"attest_time\": 1490656130,\n      \"job_title\": \"CEO\",\n      \"name\": {\n        \"first\": \"Foo\",\n        \"last\": \"Bar\"\n      },\n      \"original_ip\": \"12.37.161.213\"\n    }\n  },\n  \"controller\": {\n    \"reference_id\": \"reference_id_0\",\n    \"address\": {\n      \"city\": \"Beverly Hills\",\n      \"country\": \"US\",\n      \"line1\": \"456 Nocturn Alley\",\n      \"postal_code\": \"90210\",\n      \"region\": \"CA\"\n    },\n    \"date_of_birth\": {\n      \"day\": 1,\n      \"month\": 1,\n      \"year\": 1900\n    },\n    \"email\": \"example@example.com\",\n    \"name\": {\n      \"first\": \"Foo\",\n      \"last\": \"Bar\"\n    },\n    \"personal_country_info\": {\n      \"US\": {\n        \"social_security_number\": \"012-34-5678\"\n      }\n    },\n    \"phone\": {\n      \"country_code\": \"+1\",\n      \"phone_number\": \"5556667777\"\n    },\n    \"job_title\": \"CFO\"\n  },\n  \"account_controller\": null,\n  \"controller_type\": \"controller\",\n  \"description\": \"The Foo Bar Shop on 5th ave.\",\n  \"entity_country_info\": {\n    \"US\": {\n      \"employer_identification_number\": \"123211230\"\n    }\n  },\n  \"entity_name\": \"Foo Bar Shop\",\n  \"email\": \"example@email.com\",\n  \"primary_url\": \"http://www.example.com\",\n  \"significant_beneficiaries\": {\n    \"affiliations\": {\n      \"affiliation_0\": {\n        \"name\": \"charity_a\",\n        \"countries\": [\n          \"US\",\n          \"CA\"\n        ],\n        \"association_types\": {\n          \"contractual_obligation\": true,\n          \"donor\": false,\n          \"funding_recipient\": false,\n          \"other\": \"other association_type\",\n          \"parent_organization\": true,\n          \"program_affiliation\": false,\n          \"resource_delivery_provider\": false,\n          \"transfer_retention_or_expenditure\": false\n        }\n      }\n    },\n    \"entities\": {\n      \"art_and_culture\": false,\n      \"education\": true,\n      \"individual\": false,\n      \"labor_union\": true,\n      \"other\": \"some significant beneficiary\",\n      \"political_organization\": false,\n      \"religious\": true,\n      \"social_service_and_economic_development\": false\n    },\n    \"geographies\": {\n      \"local\": true,\n      \"regional\": true,\n      \"national\": false,\n      \"international\": [\n        \"US\",\n        \"CA\"\n      ]\n    },\n    \"non_domestic_location_beneficiaries\": [\n      \"US\",\n      \"CA\"\n    ]\n  },\n  \"significant_donors\": {\n    \"corporate_entity\": true,\n    \"endowment_fund\": true,\n    \"government\": false,\n    \"individual\": true,\n    \"institutional\": false,\n    \"other\": \"some significant donor\",\n    \"other_charitable_organization\": true\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/legal_entities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"legal_entities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
												}
											]
										},
										"description": "The POST /legal_entities/{id} call allows your platform to update and add custom data to a legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "65b3381f-44ea-49a4-bb22-0424e03cd827",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"attestation\": {\n    \"attester_type\": \"other_representative\",\n    \"other_representative\": {\n      \"attest_time\": 1490656130,\n      \"job_title\": \"CEO\",\n      \"name\": {\n        \"first\": \"Foo\",\n        \"last\": \"Bar\"\n      },\n      \"original_ip\": \"12.37.161.213\"\n    }\n  },\n  \"controller\": {\n    \"reference_id\": \"reference_id_0\",\n    \"address\": {\n      \"city\": \"Beverly Hills\",\n      \"country\": \"US\",\n      \"line1\": \"456 Nocturn Alley\",\n      \"postal_code\": \"90210\",\n      \"region\": \"CA\"\n    },\n    \"date_of_birth\": {\n      \"day\": 1,\n      \"month\": 1,\n      \"year\": 1900\n    },\n    \"email\": \"example@example.com\",\n    \"name\": {\n      \"first\": \"Foo\",\n      \"last\": \"Bar\"\n    },\n    \"personal_country_info\": {\n      \"US\": {\n        \"social_security_number\": \"012-34-5678\"\n      }\n    },\n    \"phone\": {\n      \"country_code\": \"+1\",\n      \"phone_number\": \"5556667777\"\n    },\n    \"job_title\": \"CFO\"\n  },\n  \"account_controller\": null,\n  \"controller_type\": \"controller\",\n  \"description\": \"The Foo Bar Shop on 5th ave.\",\n  \"entity_country_info\": {\n    \"US\": {\n      \"employer_identification_number\": \"123211230\"\n    }\n  },\n  \"entity_name\": \"Foo Bar Shop\",\n  \"email\": \"example@email.com\",\n  \"primary_url\": \"http://www.example.com\",\n  \"significant_beneficiaries\": {\n    \"affiliations\": {\n      \"affiliation_0\": {\n        \"name\": \"charity_a\",\n        \"countries\": [\n          \"US\",\n          \"CA\"\n        ],\n        \"association_types\": {\n          \"contractual_obligation\": true,\n          \"donor\": false,\n          \"funding_recipient\": false,\n          \"other\": \"other association_type\",\n          \"parent_organization\": true,\n          \"program_affiliation\": false,\n          \"resource_delivery_provider\": false,\n          \"transfer_retention_or_expenditure\": false\n        }\n      }\n    },\n    \"entities\": {\n      \"art_and_culture\": false,\n      \"education\": true,\n      \"individual\": false,\n      \"labor_union\": true,\n      \"other\": \"some significant beneficiary\",\n      \"political_organization\": false,\n      \"religious\": true,\n      \"social_service_and_economic_development\": false\n    },\n    \"geographies\": {\n      \"local\": true,\n      \"regional\": true,\n      \"national\": false,\n      \"international\": [\n        \"US\",\n        \"CA\"\n      ]\n    },\n    \"non_domestic_location_beneficiaries\": [\n      \"US\",\n      \"CA\"\n    ]\n  },\n  \"significant_donors\": {\n    \"corporate_entity\": true,\n    \"endowment_fund\": true,\n    \"government\": false,\n    \"individual\": true,\n    \"institutional\": false,\n    \"other\": \"some significant donor\",\n    \"other_charitable_organization\": true\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/legal_entities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"legal_entities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
												}
											]
										},
										"description": "The POST /legal_entities/{id} call allows your platform to update and add custom data to a legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "c314678d-0129-45a0-98c0-7c22ad14f3e0",
									"name": "RESOURCE_CONFLICT",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"attestation\": {\n    \"attester_type\": \"other_representative\",\n    \"other_representative\": {\n      \"attest_time\": 1490656130,\n      \"job_title\": \"CEO\",\n      \"name\": {\n        \"first\": \"Foo\",\n        \"last\": \"Bar\"\n      },\n      \"original_ip\": \"12.37.161.213\"\n    }\n  },\n  \"controller\": {\n    \"reference_id\": \"reference_id_0\",\n    \"address\": {\n      \"city\": \"Beverly Hills\",\n      \"country\": \"US\",\n      \"line1\": \"456 Nocturn Alley\",\n      \"postal_code\": \"90210\",\n      \"region\": \"CA\"\n    },\n    \"date_of_birth\": {\n      \"day\": 1,\n      \"month\": 1,\n      \"year\": 1900\n    },\n    \"email\": \"example@example.com\",\n    \"name\": {\n      \"first\": \"Foo\",\n      \"last\": \"Bar\"\n    },\n    \"personal_country_info\": {\n      \"US\": {\n        \"social_security_number\": \"012-34-5678\"\n      }\n    },\n    \"phone\": {\n      \"country_code\": \"+1\",\n      \"phone_number\": \"5556667777\"\n    },\n    \"job_title\": \"CFO\"\n  },\n  \"account_controller\": null,\n  \"controller_type\": \"controller\",\n  \"description\": \"The Foo Bar Shop on 5th ave.\",\n  \"entity_country_info\": {\n    \"US\": {\n      \"employer_identification_number\": \"123211230\"\n    }\n  },\n  \"entity_name\": \"Foo Bar Shop\",\n  \"email\": \"example@email.com\",\n  \"primary_url\": \"http://www.example.com\",\n  \"significant_beneficiaries\": {\n    \"affiliations\": {\n      \"affiliation_0\": {\n        \"name\": \"charity_a\",\n        \"countries\": [\n          \"US\",\n          \"CA\"\n        ],\n        \"association_types\": {\n          \"contractual_obligation\": true,\n          \"donor\": false,\n          \"funding_recipient\": false,\n          \"other\": \"other association_type\",\n          \"parent_organization\": true,\n          \"program_affiliation\": false,\n          \"resource_delivery_provider\": false,\n          \"transfer_retention_or_expenditure\": false\n        }\n      }\n    },\n    \"entities\": {\n      \"art_and_culture\": false,\n      \"education\": true,\n      \"individual\": false,\n      \"labor_union\": true,\n      \"other\": \"some significant beneficiary\",\n      \"political_organization\": false,\n      \"religious\": true,\n      \"social_service_and_economic_development\": false\n    },\n    \"geographies\": {\n      \"local\": true,\n      \"regional\": true,\n      \"national\": false,\n      \"international\": [\n        \"US\",\n        \"CA\"\n      ]\n    },\n    \"non_domestic_location_beneficiaries\": [\n      \"US\",\n      \"CA\"\n    ]\n  },\n  \"significant_donors\": {\n    \"corporate_entity\": true,\n    \"endowment_fund\": true,\n    \"government\": false,\n    \"individual\": true,\n    \"institutional\": false,\n    \"other\": \"some significant donor\",\n    \"other_charitable_organization\": true\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/legal_entities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"legal_entities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
												}
											]
										},
										"description": "The POST /legal_entities/{id} call allows your platform to update and add custom data to a legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "20c980db-bac6-4d4b-bec5-d16f5eea2376",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"attestation\": {\n    \"attester_type\": \"other_representative\",\n    \"other_representative\": {\n      \"attest_time\": 1490656130,\n      \"job_title\": \"CEO\",\n      \"name\": {\n        \"first\": \"Foo\",\n        \"last\": \"Bar\"\n      },\n      \"original_ip\": \"12.37.161.213\"\n    }\n  },\n  \"controller\": {\n    \"reference_id\": \"reference_id_0\",\n    \"address\": {\n      \"city\": \"Beverly Hills\",\n      \"country\": \"US\",\n      \"line1\": \"456 Nocturn Alley\",\n      \"postal_code\": \"90210\",\n      \"region\": \"CA\"\n    },\n    \"date_of_birth\": {\n      \"day\": 1,\n      \"month\": 1,\n      \"year\": 1900\n    },\n    \"email\": \"example@example.com\",\n    \"name\": {\n      \"first\": \"Foo\",\n      \"last\": \"Bar\"\n    },\n    \"personal_country_info\": {\n      \"US\": {\n        \"social_security_number\": \"012-34-5678\"\n      }\n    },\n    \"phone\": {\n      \"country_code\": \"+1\",\n      \"phone_number\": \"5556667777\"\n    },\n    \"job_title\": \"CFO\"\n  },\n  \"account_controller\": null,\n  \"controller_type\": \"controller\",\n  \"description\": \"The Foo Bar Shop on 5th ave.\",\n  \"entity_country_info\": {\n    \"US\": {\n      \"employer_identification_number\": \"123211230\"\n    }\n  },\n  \"entity_name\": \"Foo Bar Shop\",\n  \"email\": \"example@email.com\",\n  \"primary_url\": \"http://www.example.com\",\n  \"significant_beneficiaries\": {\n    \"affiliations\": {\n      \"affiliation_0\": {\n        \"name\": \"charity_a\",\n        \"countries\": [\n          \"US\",\n          \"CA\"\n        ],\n        \"association_types\": {\n          \"contractual_obligation\": true,\n          \"donor\": false,\n          \"funding_recipient\": false,\n          \"other\": \"other association_type\",\n          \"parent_organization\": true,\n          \"program_affiliation\": false,\n          \"resource_delivery_provider\": false,\n          \"transfer_retention_or_expenditure\": false\n        }\n      }\n    },\n    \"entities\": {\n      \"art_and_culture\": false,\n      \"education\": true,\n      \"individual\": false,\n      \"labor_union\": true,\n      \"other\": \"some significant beneficiary\",\n      \"political_organization\": false,\n      \"religious\": true,\n      \"social_service_and_economic_development\": false\n    },\n    \"geographies\": {\n      \"local\": true,\n      \"regional\": true,\n      \"national\": false,\n      \"international\": [\n        \"US\",\n        \"CA\"\n      ]\n    },\n    \"non_domestic_location_beneficiaries\": [\n      \"US\",\n      \"CA\"\n    ]\n  },\n  \"significant_donors\": {\n    \"corporate_entity\": true,\n    \"endowment_fund\": true,\n    \"government\": false,\n    \"individual\": true,\n    \"institutional\": false,\n    \"other\": \"some significant donor\",\n    \"other_charitable_organization\": true\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/legal_entities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"legal_entities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
												}
											]
										},
										"description": "The POST /legal_entities/{id} call allows your platform to update and add custom data to a legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get a legal entity",
							"id": "d2024c37-670c-408f-8e72-ed257168e661",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/legal_entities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legal_entities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
										}
									]
								},
								"description": "The GET /legal_entities/{id} call allows your platform to look up a single legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
							},
							"response": [
								{
									"id": "f796fa36-ee24-446b-8e3c-84885483f1ca",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/legal_entities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"legal_entities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
												}
											]
										},
										"description": "The GET /legal_entities/{id} call allows your platform to look up a single legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"additional_representatives\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"controller\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"country\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"<string>\",\n  \"entity_country_info\": {\n    \"CA\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"US\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country_of_formation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"operates_in_sanctioned_countries\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"year_of_formation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"entity_name\": \"<string>\",\n  \"id\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"primary_url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"terms_of_service\": {\n    \"acceptance_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"original_ip\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"terms_of_service_version\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"account_controller\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attestation\": {\n    \"attester_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"additional_representative\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"controller\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"other_representative\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"controller_type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"email\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enterprise_customer_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"preferred_locale\": \"<string>\",\n  \"public_ownership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reference_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"referral_details\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"standard_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"coupon_code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"significant_beneficiaries\": {\n    \"affiliations\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"entities\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"geographies\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"non_domestic_location_beneficiaries\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"significant_donors\": {\n    \"corporate_entity\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endowment_fund\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"government\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"individual\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"institutional\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"other\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"other_charitable_organization\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
								},
								{
									"id": "fb1f0067-8039-483d-a0f5-20a7e3cccdce",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/legal_entities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"legal_entities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
												}
											]
										},
										"description": "The GET /legal_entities/{id} call allows your platform to look up a single legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "1d5c4de1-f29f-404e-904f-07d063b5466b",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/legal_entities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"legal_entities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
												}
											]
										},
										"description": "The GET /legal_entities/{id} call allows your platform to look up a single legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "58d5e2d5-3cf0-4f73-a6eb-0267b1aa3499",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/legal_entities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"legal_entities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the legal entity, generated by WePay when the legal entity is created."
												}
											]
										},
										"description": "The GET /legal_entities/{id} call allows your platform to look up a single legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Set a controller password",
							"id": "fa3a6a84-e416-4d42-812e-eb913ef9a72b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/legal_entities/:id/set_controller_password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legal_entities",
										":id",
										"set_controller_password"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) "
										}
									]
								},
								"description": "The POST /legal_entities/{id}/set_controller_password call allows your platform to set password for controller. Merchant will receive a email for registration, once merchant is registered with WePay he/she can use WePay hosted user interfaces like onboarding forms, dispute management etc."
							},
							"response": [
								{
									"id": "dc23f8c6-858c-4bb4-970e-02e1d88d6d67",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/legal_entities/:id/set_controller_password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"legal_entities",
												":id",
												"set_controller_password"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The POST /legal_entities/{id}/set_controller_password call allows your platform to set password for controller. Merchant will receive a email for registration, once merchant is registered with WePay he/she can use WePay hosted user interfaces like onboarding forms, dispute management etc."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"additional_representatives\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"controller\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"country\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"<string>\",\n  \"entity_country_info\": {\n    \"CA\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"US\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country_of_formation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"operates_in_sanctioned_countries\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"year_of_formation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"entity_name\": \"<string>\",\n  \"id\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"primary_url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"terms_of_service\": {\n    \"acceptance_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"original_ip\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"terms_of_service_version\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"account_controller\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attestation\": {\n    \"attester_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"additional_representative\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"controller\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"other_representative\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"controller_type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"email\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enterprise_customer_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"preferred_locale\": \"<string>\",\n  \"public_ownership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reference_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"referral_details\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"standard_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"coupon_code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"significant_beneficiaries\": {\n    \"affiliations\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"entities\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"geographies\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"non_domestic_location_beneficiaries\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"significant_donors\": {\n    \"corporate_entity\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endowment_fund\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"government\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"individual\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"institutional\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"other\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"other_charitable_organization\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
								},
								{
									"id": "f0bcfc82-76d4-49ac-bbf9-77715deaabd4",
									"name": "INVALID_PARAMS, LEGAL_ENTITY_CANNOT_SETUP_PASSWORD",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/legal_entities/:id/set_controller_password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"legal_entities",
												":id",
												"set_controller_password"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The POST /legal_entities/{id}/set_controller_password call allows your platform to set password for controller. Merchant will receive a email for registration, once merchant is registered with WePay he/she can use WePay hosted user interfaces like onboarding forms, dispute management etc."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "cff06908-ca69-4ea8-bfbc-4d785d452dad",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/legal_entities/:id/set_controller_password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"legal_entities",
												":id",
												"set_controller_password"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The POST /legal_entities/{id}/set_controller_password call allows your platform to set password for controller. Merchant will receive a email for registration, once merchant is registered with WePay he/she can use WePay hosted user interfaces like onboarding forms, dispute management etc."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "5f960c14-d77b-4e37-bf3c-69e86c131dcc",
									"name": "RESOURCE_CONFLICT",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/legal_entities/:id/set_controller_password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"legal_entities",
												":id",
												"set_controller_password"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The POST /legal_entities/{id}/set_controller_password call allows your platform to set password for controller. Merchant will receive a email for registration, once merchant is registered with WePay he/she can use WePay hosted user interfaces like onboarding forms, dispute management etc."
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "628926f5-46ab-43e1-bbd2-89bab5f1fef3",
									"name": "THROTTLE_EXCEEDED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/legal_entities/:id/set_controller_password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"legal_entities",
												":id",
												"set_controller_password"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The POST /legal_entities/{id}/set_controller_password call allows your platform to set password for controller. Merchant will receive a email for registration, once merchant is registered with WePay he/she can use WePay hosted user interfaces like onboarding forms, dispute management etc."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "796eeba1-52e6-4f50-a89b-9633071c51c4",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/legal_entities/:id/set_controller_password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"legal_entities",
												":id",
												"set_controller_password"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The POST /legal_entities/{id}/set_controller_password call allows your platform to set password for controller. Merchant will receive a email for registration, once merchant is registered with WePay he/she can use WePay hosted user interfaces like onboarding forms, dispute management etc."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "a298e395-e3bb-4f2e-8677-e780a824beb1"
				},
				{
					"name": "Create a legal entity",
					"id": "23aa70f7-61a3-431d-a35b-82919ae012d8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
								"key": "WePay-Risk-Token",
								"value": "in sed commodo"
							},
							{
								"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
								"key": "Client-IP",
								"value": "in sed commodo"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"country\": \"CA\",\n  \"description\": \"Req to create a CA legal entity\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/legal_entities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"legal_entities"
							]
						},
						"description": "The POST /legal_entities call allows your platform to create a new legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
					},
					"response": [
						{
							"id": "f80697a8-a977-48d1-8477-f0748aa1b2f1",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"country\": \"CA\",\n  \"description\": \"Req to create a CA legal entity\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/legal_entities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legal_entities"
									]
								},
								"description": "The POST /legal_entities call allows your platform to create a new legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"additional_representatives\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"controller\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"country\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"<string>\",\n  \"entity_country_info\": {\n    \"CA\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"GB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"US\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country_of_formation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"operates_in_sanctioned_countries\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"year_of_formation\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"entity_name\": \"<string>\",\n  \"id\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"primary_url\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"terms_of_service\": {\n    \"acceptance_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"original_ip\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"terms_of_service_version\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"account_controller\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attestation\": {\n    \"attester_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"additional_representative\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"controller\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"other_representative\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"controller_type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"email\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enterprise_customer_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"preferred_locale\": \"<string>\",\n  \"public_ownership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reference_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"referral_details\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"standard_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"coupon_code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"significant_beneficiaries\": {\n    \"affiliations\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"entities\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"geographies\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"non_domestic_location_beneficiaries\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"significant_donors\": {\n    \"corporate_entity\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endowment_fund\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"government\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"individual\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"institutional\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"other\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"other_charitable_organization\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
						},
						{
							"id": "a9d778ff-4e31-40b0-bb86-b48bc5518d64",
							"name": "INVALID_PARAMS, UNSUPPORTED_COUNTRY",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"country\": \"CA\",\n  \"description\": \"Req to create a CA legal entity\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/legal_entities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legal_entities"
									]
								},
								"description": "The POST /legal_entities call allows your platform to create a new legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "e1146639-c3ef-4c3e-bfb1-33af43d57891",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"country\": \"CA\",\n  \"description\": \"Req to create a CA legal entity\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/legal_entities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legal_entities"
									]
								},
								"description": "The POST /legal_entities call allows your platform to create a new legal entity. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a collection of legal entities",
					"id": "fdcff372-3938-4db4-80c0-df6711505e87",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/legal_entities?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&reference_id=in sed commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"legal_entities"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements from this page."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
								},
								{
									"key": "create_time_start",
									"value": "66825797",
									"description": "The create time epoch timestamp (in seconds) for the start of the search window, inclusive."
								},
								{
									"key": "create_time_end",
									"value": "66825797",
									"description": "The create time epoch timestamp (in seconds) for the end of the search window, inclusive."
								},
								{
									"key": "reference_id",
									"value": "in sed commodo",
									"description": "Return elements having this reference_id."
								}
							]
						},
						"description": "The GET /legal_entities call allows your platform to look up a collection of legal entities. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
					},
					"response": [
						{
							"id": "0dca6be7-1033-4ef3-adf3-130d356345da",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/legal_entities?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&reference_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legal_entities"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The create time epoch timestamp (in seconds) for the start of the search window, inclusive."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The create time epoch timestamp (in seconds) for the end of the search window, inclusive."
										},
										{
											"key": "reference_id",
											"value": "in sed commodo",
											"description": "Return elements having this reference_id."
										}
									]
								},
								"description": "The GET /legal_entities call allows your platform to look up a collection of legal entities. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"previous\": \"<string>\",\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "b1101a50-8e95-4b41-bb3e-0bf30e75c280",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/legal_entities?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&reference_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legal_entities"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The create time epoch timestamp (in seconds) for the start of the search window, inclusive."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The create time epoch timestamp (in seconds) for the end of the search window, inclusive."
										},
										{
											"key": "reference_id",
											"value": "in sed commodo",
											"description": "Return elements having this reference_id."
										}
									]
								},
								"description": "The GET /legal_entities call allows your platform to look up a collection of legal entities. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "f970f6c3-673b-4c36-85c7-ab9402d9da6d",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/legal_entities?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&reference_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legal_entities"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The create time epoch timestamp (in seconds) for the start of the search window, inclusive."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The create time epoch timestamp (in seconds) for the end of the search window, inclusive."
										},
										{
											"key": "reference_id",
											"value": "in sed commodo",
											"description": "Return elements having this reference_id."
										}
									]
								},
								"description": "The GET /legal_entities call allows your platform to look up a collection of legal entities. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "9357bf5f-8437-478b-9fe3-cda8d572f20f",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/legal_entities?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&reference_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legal_entities"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The create time epoch timestamp (in seconds) for the start of the search window, inclusive."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The create time epoch timestamp (in seconds) for the end of the search window, inclusive."
										},
										{
											"key": "reference_id",
											"value": "in sed commodo",
											"description": "Return elements having this reference_id."
										}
									]
								},
								"description": "The GET /legal_entities call allows your platform to look up a collection of legal entities. Onboarding a merchant requires the creation of a legal entity. A legal entity may be a business, individual, nonprofit, etc., and is completely owned by a single partner application. WePay collects information about the legal entity so we can properly underwrite them when provisioning a merchant account."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "2472f2aa-f49f-454c-8dbd-6b110ca1a950"
		},
		{
			"name": "notifications",
			"item": [
				{
					"name": "Get a collection of notifications",
					"id": "f80b04b0-7580-42cc-834c-cb11df329285",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notifications?page=in sed commodo&page_size=10&object_type=in sed commodo&object_id=in sed commodo&event_time_start=66825797&event_time_end=66825797",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements from this page."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
								},
								{
									"key": "object_type",
									"value": "in sed commodo",
									"description": "The scope type of a notification. Acceptable values are WePay API resources, related to the notification topic. For example ,`payments`, `payment_methods`, `accounts`, `legal_entities`, `refunds`, `disputes` etc."
								},
								{
									"key": "object_id",
									"value": "in sed commodo",
									"description": "The scope ID of a notification, related to the object_type."
								},
								{
									"key": "event_time_start",
									"value": "66825797",
									"description": "Event time indicates when a notification event was triggered. TThis parameter will set the timestamp for the start of the search window."
								},
								{
									"key": "event_time_end",
									"value": "66825797",
									"description": "Event time indicates when a notification event was triggered. This parameter will set the timestamp for the end of the search window."
								}
							]
						},
						"description": "The  GET /notifications call allows your platform to look up a collection of notifications. The notifications resource allows your platform to retrieve details on a specific notification or a collection of notifications. Your platform can utilize notifications to gain insight into WePay’s system, communicate with your users, monitor issues, etc."
					},
					"response": [
						{
							"id": "67c2ed3f-458a-49ec-9c51-83091e2f01aa",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?page=in sed commodo&page_size=10&object_type=in sed commodo&object_id=in sed commodo&event_time_start=66825797&event_time_end=66825797",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "object_type",
											"value": "in sed commodo",
											"description": "The scope type of a notification. Acceptable values are WePay API resources, related to the notification topic. For example ,`payments`, `payment_methods`, `accounts`, `legal_entities`, `refunds`, `disputes` etc."
										},
										{
											"key": "object_id",
											"value": "in sed commodo",
											"description": "The scope ID of a notification, related to the object_type."
										},
										{
											"key": "event_time_start",
											"value": "66825797",
											"description": "Event time indicates when a notification event was triggered. TThis parameter will set the timestamp for the start of the search window."
										},
										{
											"key": "event_time_end",
											"value": "66825797",
											"description": "Event time indicates when a notification event was triggered. This parameter will set the timestamp for the end of the search window."
										}
									]
								},
								"description": "The  GET /notifications call allows your platform to look up a collection of notifications. The notifications resource allows your platform to retrieve details on a specific notification or a collection of notifications. Your platform can utilize notifications to gain insight into WePay’s system, communicate with your users, monitor issues, etc."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resource\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"path\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"topic\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"event_time\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"payload\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"api_version\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"previous\": \"<string>\",\n  \"next\": \"<string>\",\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "457f1404-d4dc-453a-b49b-a9abb09add8d",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?page=in sed commodo&page_size=10&object_type=in sed commodo&object_id=in sed commodo&event_time_start=66825797&event_time_end=66825797",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "object_type",
											"value": "in sed commodo",
											"description": "The scope type of a notification. Acceptable values are WePay API resources, related to the notification topic. For example ,`payments`, `payment_methods`, `accounts`, `legal_entities`, `refunds`, `disputes` etc."
										},
										{
											"key": "object_id",
											"value": "in sed commodo",
											"description": "The scope ID of a notification, related to the object_type."
										},
										{
											"key": "event_time_start",
											"value": "66825797",
											"description": "Event time indicates when a notification event was triggered. TThis parameter will set the timestamp for the start of the search window."
										},
										{
											"key": "event_time_end",
											"value": "66825797",
											"description": "Event time indicates when a notification event was triggered. This parameter will set the timestamp for the end of the search window."
										}
									]
								},
								"description": "The  GET /notifications call allows your platform to look up a collection of notifications. The notifications resource allows your platform to retrieve details on a specific notification or a collection of notifications. Your platform can utilize notifications to gain insight into WePay’s system, communicate with your users, monitor issues, etc."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "504e9d1c-d6dd-4d6f-82d2-3c45dd053b24",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?page=in sed commodo&page_size=10&object_type=in sed commodo&object_id=in sed commodo&event_time_start=66825797&event_time_end=66825797",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "object_type",
											"value": "in sed commodo",
											"description": "The scope type of a notification. Acceptable values are WePay API resources, related to the notification topic. For example ,`payments`, `payment_methods`, `accounts`, `legal_entities`, `refunds`, `disputes` etc."
										},
										{
											"key": "object_id",
											"value": "in sed commodo",
											"description": "The scope ID of a notification, related to the object_type."
										},
										{
											"key": "event_time_start",
											"value": "66825797",
											"description": "Event time indicates when a notification event was triggered. TThis parameter will set the timestamp for the start of the search window."
										},
										{
											"key": "event_time_end",
											"value": "66825797",
											"description": "Event time indicates when a notification event was triggered. This parameter will set the timestamp for the end of the search window."
										}
									]
								},
								"description": "The  GET /notifications call allows your platform to look up a collection of notifications. The notifications resource allows your platform to retrieve details on a specific notification or a collection of notifications. Your platform can utilize notifications to gain insight into WePay’s system, communicate with your users, monitor issues, etc."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "33c2e141-a51e-46c4-87c3-2b00c82ad2e3",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?page=in sed commodo&page_size=10&object_type=in sed commodo&object_id=in sed commodo&event_time_start=66825797&event_time_end=66825797",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "object_type",
											"value": "in sed commodo",
											"description": "The scope type of a notification. Acceptable values are WePay API resources, related to the notification topic. For example ,`payments`, `payment_methods`, `accounts`, `legal_entities`, `refunds`, `disputes` etc."
										},
										{
											"key": "object_id",
											"value": "in sed commodo",
											"description": "The scope ID of a notification, related to the object_type."
										},
										{
											"key": "event_time_start",
											"value": "66825797",
											"description": "Event time indicates when a notification event was triggered. TThis parameter will set the timestamp for the start of the search window."
										},
										{
											"key": "event_time_end",
											"value": "66825797",
											"description": "Event time indicates when a notification event was triggered. This parameter will set the timestamp for the end of the search window."
										}
									]
								},
								"description": "The  GET /notifications call allows your platform to look up a collection of notifications. The notifications resource allows your platform to retrieve details on a specific notification or a collection of notifications. Your platform can utilize notifications to gain insight into WePay’s system, communicate with your users, monitor issues, etc."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a notification",
					"id": "b088f1dd-eb0c-4add-9353-fd306879a02b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notifications/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "Excepteur exercitation sed ut",
									"description": "(Required) ID of the notification, generated by WePay when the notification is created."
								}
							]
						},
						"description": "The GET /notifications/{id} call allows your platform to look up a notification. The notifications resource allows your platform to retrieve details on a specific notification or a collection of notifications. Your platform can utilize notifications to gain insight into WePay’s system, communicate with your users, monitor issues, etc."
					},
					"response": [
						{
							"id": "5674a86f-c7ba-4f3d-820c-830b3e76bce9",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the notification, generated by WePay when the notification is created."
										}
									]
								},
								"description": "The GET /notifications/{id} call allows your platform to look up a notification. The notifications resource allows your platform to retrieve details on a specific notification or a collection of notifications. Your platform can utilize notifications to gain insight into WePay’s system, communicate with your users, monitor issues, etc."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"resource\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"path\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"topic\": \"<string>\",\n  \"event_time\": \"<long>\",\n  \"payload\": {\n    \"ullamco496\": -34060655\n  },\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "1375c087-8032-400e-bf63-9d7d065ba722",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the notification, generated by WePay when the notification is created."
										}
									]
								},
								"description": "The GET /notifications/{id} call allows your platform to look up a notification. The notifications resource allows your platform to retrieve details on a specific notification or a collection of notifications. Your platform can utilize notifications to gain insight into WePay’s system, communicate with your users, monitor issues, etc."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "149dad34-0c32-4bdf-9890-136806b5e513",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the notification, generated by WePay when the notification is created."
										}
									]
								},
								"description": "The GET /notifications/{id} call allows your platform to look up a notification. The notifications resource allows your platform to retrieve details on a specific notification or a collection of notifications. Your platform can utilize notifications to gain insight into WePay’s system, communicate with your users, monitor issues, etc."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "ab38a5ea-869f-4134-9334-8ea42bbd714c",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the notification, generated by WePay when the notification is created."
										}
									]
								},
								"description": "The GET /notifications/{id} call allows your platform to look up a notification. The notifications resource allows your platform to retrieve details on a specific notification or a collection of notifications. Your platform can utilize notifications to gain insight into WePay’s system, communicate with your users, monitor issues, etc."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "4ee7069e-2407-4799-8c3b-fe7c06cedf7c"
		},
		{
			"name": "notification_preferences",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get a notification preference",
							"id": "b57dffa2-0e07-41e7-a846-a7edd157777e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notification_preferences/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification_preferences",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the notification preference, generated by WePay when the notification preference is created."
										}
									]
								},
								"description": "The GET /notification_preferences/{id} call allows your platform to look up a single notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
							},
							"response": [
								{
									"id": "8bff9908-e7c9-4d75-9b1e-c0b38341a168",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/notification_preferences/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notification_preferences",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the notification preference, generated by WePay when the notification preference is created."
												}
											]
										},
										"description": "The GET /notification_preferences/{id} call allows your platform to look up a single notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"create_time\": \"<long>\",\n  \"topic\": \"<string>\",\n  \"callback_uri\": \"<string>\",\n  \"status\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "5faca2b3-f136-48df-b680-10262be20252",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/notification_preferences/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notification_preferences",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the notification preference, generated by WePay when the notification preference is created."
												}
											]
										},
										"description": "The GET /notification_preferences/{id} call allows your platform to look up a single notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "19a641e9-ccde-4c82-a0a3-37693487e3ed",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/notification_preferences/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notification_preferences",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the notification preference, generated by WePay when the notification preference is created."
												}
											]
										},
										"description": "The GET /notification_preferences/{id} call allows your platform to look up a single notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "a30cd557-83d5-41c2-b907-53cab0bc297b",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/notification_preferences/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notification_preferences",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the notification preference, generated by WePay when the notification preference is created."
												}
											]
										},
										"description": "The GET /notification_preferences/{id} call allows your platform to look up a single notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update a notification preference",
							"id": "837502a5-0da0-41f6-88b6-0e6e6b8fd5e3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"callback_uri\": \"https://example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notification_preferences/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification_preferences",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the notification preference, generated by WePay when the notification preference is created."
										}
									]
								},
								"description": "The POST /notification_preferences/{id} call allows your platform to update a notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
							},
							"response": [
								{
									"id": "4015f9e1-1b7d-45c7-9a6c-bf77d895977a",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"callback_uri\": \"https://example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/notification_preferences/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notification_preferences",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the notification preference, generated by WePay when the notification preference is created."
												}
											]
										},
										"description": "The POST /notification_preferences/{id} call allows your platform to update a notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"create_time\": \"<long>\",\n  \"topic\": \"<string>\",\n  \"callback_uri\": \"<string>\",\n  \"status\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "1a9957d1-0f81-4a98-be70-030aa7bf0aa5",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"callback_uri\": \"https://example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/notification_preferences/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notification_preferences",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the notification preference, generated by WePay when the notification preference is created."
												}
											]
										},
										"description": "The POST /notification_preferences/{id} call allows your platform to update a notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "3f33a557-b605-46ce-bb54-b4f2fe1b44b5",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"callback_uri\": \"https://example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/notification_preferences/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notification_preferences",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the notification preference, generated by WePay when the notification preference is created."
												}
											]
										},
										"description": "The POST /notification_preferences/{id} call allows your platform to update a notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "68d5856f-7dab-4595-93bc-def6e6795b50",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"callback_uri\": \"https://example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/notification_preferences/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notification_preferences",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the notification preference, generated by WePay when the notification preference is created."
												}
											]
										},
										"description": "The POST /notification_preferences/{id} call allows your platform to update a notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete a notification preference",
							"id": "3f098f59-79d9-4e9d-ad01-ef5ba12d0b7a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notification_preferences/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification_preferences",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the notification preference, generated by WePay when the notification preference is created."
										}
									]
								},
								"description": "The DELETE /notification_preferences/{id} call allows your platform to delete a notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
							},
							"response": [
								{
									"id": "64bcd697-3220-42ad-9135-5873f5adafda",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/notification_preferences/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notification_preferences",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the notification preference, generated by WePay when the notification preference is created."
												}
											]
										},
										"description": "The DELETE /notification_preferences/{id} call allows your platform to delete a notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"create_time\": \"<long>\",\n  \"topic\": \"<string>\",\n  \"callback_uri\": \"<string>\",\n  \"status\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "16359ea9-eb61-49cd-9eda-0d751efd062d",
									"name": "INVALID_PARAMS, RESOURCE_PREVIOUSLY_DELETED",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/notification_preferences/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notification_preferences",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the notification preference, generated by WePay when the notification preference is created."
												}
											]
										},
										"description": "The DELETE /notification_preferences/{id} call allows your platform to delete a notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "e4e31f83-0bce-4408-831c-aebef7e78af6",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/notification_preferences/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notification_preferences",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the notification preference, generated by WePay when the notification preference is created."
												}
											]
										},
										"description": "The DELETE /notification_preferences/{id} call allows your platform to delete a notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "4a4531e0-5515-47c4-a3d9-e42cf2b08d94",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/notification_preferences/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notification_preferences",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the notification preference, generated by WePay when the notification preference is created."
												}
											]
										},
										"description": "The DELETE /notification_preferences/{id} call allows your platform to delete a notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "4e42c3bd-41bd-417e-83a3-7eb962a26765"
				},
				{
					"name": "Get a collection of notification preferences",
					"id": "854457da-5e6b-4557-88ec-fa347a3f5704",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notification_preferences?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&type=notification&status=active&topic=accounts.updated&callback_uri=in sed commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notification_preferences"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements from this page."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
								},
								{
									"key": "create_time_start",
									"value": "66825797",
									"description": "The timestamp for the start of the search window."
								},
								{
									"key": "create_time_end",
									"value": "66825797",
									"description": "The timestamp for the end of the search window."
								},
								{
									"key": "type",
									"value": "notification",
									"description": "Type of notification preference"
								},
								{
									"key": "status",
									"value": "active",
									"description": "Status of the notification. Possible values are: `active`, `unreachable`, `deleted`. **Note:** The default state is active."
								},
								{
									"key": "topic",
									"value": "accounts.updated",
									"description": "The event topic of the notification preference to search for."
								},
								{
									"key": "callback_uri",
									"value": "in sed commodo",
									"description": "A valid URL where notification webhooks are sent."
								}
							]
						},
						"description": "The GET /notification_preferences call allows your platform to look up a collection of notification preferences. Notification preferences allow your platform to subscribe to notifications based on an event topic."
					},
					"response": [
						{
							"id": "8c312c51-dab5-4e91-b0bc-daab5b3c23dc",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notification_preferences?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&type=notification&status=active&topic=accounts.updated&callback_uri=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification_preferences"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "type",
											"value": "notification",
											"description": "Type of notification preference"
										},
										{
											"key": "status",
											"value": "active",
											"description": "Status of the notification. Possible values are: `active`, `unreachable`, `deleted`. **Note:** The default state is active."
										},
										{
											"key": "topic",
											"value": "accounts.updated",
											"description": "The event topic of the notification preference to search for."
										},
										{
											"key": "callback_uri",
											"value": "in sed commodo",
											"description": "A valid URL where notification webhooks are sent."
										}
									]
								},
								"description": "The GET /notification_preferences call allows your platform to look up a collection of notification preferences. Notification preferences allow your platform to subscribe to notifications based on an event topic."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"previous\": \"<string>\",\n  \"next\": \"<string>\",\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "b2619657-5439-4458-9bb1-e8d1915f5ab5",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notification_preferences?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&type=notification&status=active&topic=accounts.updated&callback_uri=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification_preferences"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "type",
											"value": "notification",
											"description": "Type of notification preference"
										},
										{
											"key": "status",
											"value": "active",
											"description": "Status of the notification. Possible values are: `active`, `unreachable`, `deleted`. **Note:** The default state is active."
										},
										{
											"key": "topic",
											"value": "accounts.updated",
											"description": "The event topic of the notification preference to search for."
										},
										{
											"key": "callback_uri",
											"value": "in sed commodo",
											"description": "A valid URL where notification webhooks are sent."
										}
									]
								},
								"description": "The GET /notification_preferences call allows your platform to look up a collection of notification preferences. Notification preferences allow your platform to subscribe to notifications based on an event topic."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "7dc333ef-b867-4ff1-9843-27e7d4bbbe02",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notification_preferences?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&type=notification&status=active&topic=accounts.updated&callback_uri=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification_preferences"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "type",
											"value": "notification",
											"description": "Type of notification preference"
										},
										{
											"key": "status",
											"value": "active",
											"description": "Status of the notification. Possible values are: `active`, `unreachable`, `deleted`. **Note:** The default state is active."
										},
										{
											"key": "topic",
											"value": "accounts.updated",
											"description": "The event topic of the notification preference to search for."
										},
										{
											"key": "callback_uri",
											"value": "in sed commodo",
											"description": "A valid URL where notification webhooks are sent."
										}
									]
								},
								"description": "The GET /notification_preferences call allows your platform to look up a collection of notification preferences. Notification preferences allow your platform to subscribe to notifications based on an event topic."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "caf4ff90-a5e4-444f-afe1-2595f76a539d",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notification_preferences?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&type=notification&status=active&topic=accounts.updated&callback_uri=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification_preferences"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "type",
											"value": "notification",
											"description": "Type of notification preference"
										},
										{
											"key": "status",
											"value": "active",
											"description": "Status of the notification. Possible values are: `active`, `unreachable`, `deleted`. **Note:** The default state is active."
										},
										{
											"key": "topic",
											"value": "accounts.updated",
											"description": "The event topic of the notification preference to search for."
										},
										{
											"key": "callback_uri",
											"value": "in sed commodo",
											"description": "A valid URL where notification webhooks are sent."
										}
									]
								},
								"description": "The GET /notification_preferences call allows your platform to look up a collection of notification preferences. Notification preferences allow your platform to subscribe to notifications based on an event topic."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a notification preference",
					"id": "c9305f84-7337-4233-99c6-d816176c6251",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"callback_uri\": \"https://example.com/payments\",\n  \"topic\": \"payments.completed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notification_preferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notification_preferences"
							]
						},
						"description": "The POST /notification_preferences call allows your platform to create a new notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
					},
					"response": [
						{
							"id": "3f89b865-c647-4873-8fb1-1e525ffa1d4e",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"callback_uri\": \"https://example.com/payments\",\n  \"topic\": \"payments.completed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notification_preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification_preferences"
									]
								},
								"description": "The POST /notification_preferences call allows your platform to create a new notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"create_time\": \"<long>\",\n  \"topic\": \"<string>\",\n  \"callback_uri\": \"<string>\",\n  \"status\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
						},
						{
							"id": "2deb83fc-1d5e-4ec8-a52f-1677997f51b9",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"callback_uri\": \"https://example.com/payments\",\n  \"topic\": \"payments.completed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notification_preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification_preferences"
									]
								},
								"description": "The POST /notification_preferences call allows your platform to create a new notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "c0180a61-df4a-433e-8841-4a9c660993e0",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"callback_uri\": \"https://example.com/payments\",\n  \"topic\": \"payments.completed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notification_preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification_preferences"
									]
								},
								"description": "The POST /notification_preferences call allows your platform to create a new notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "05e95f65-63e3-4427-8bfa-906960e1831f",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"callback_uri\": \"https://example.com/payments\",\n  \"topic\": \"payments.completed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notification_preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification_preferences"
									]
								},
								"description": "The POST /notification_preferences call allows your platform to create a new notification preference. Notification preferences allow your platform to subscribe to notifications based on an event topic."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "28a83913-709b-42a7-8b3d-27ddf1b77a5c"
		},
		{
			"name": "orders",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get an order",
							"id": "1bb320a8-c65e-47c2-98da-07062d09dd8b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the order, generated by WePay when the order is created."
										}
									]
								},
								"description": "The GET /orders/{id} call allows your platform to look up a single order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
							},
							"response": [
								{
									"id": "3d482285-c069-4747-99c3-cbec5c49cc56",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/orders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The GET /orders/{id} call allows your platform to look up a single order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"alternate_tax_amount\": \"<integer>\",\n  \"alternate_tax_id\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"buyer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customer_reference_number\": \"<string>\",\n  \"delivery_type\": \"<string>\",\n  \"discount_amount\": \"<integer>\",\n  \"discount_program_name\": \"<string>\",\n  \"duty_amount\": \"<integer>\",\n  \"freight_amount\": \"<integer>\",\n  \"grand_total_amount\": \"<integer>\",\n  \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"line_items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"long_description\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"reference_number\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"service_address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"ship_from_address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"ship_to_address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shipping_status\": {\n    \"actual_delivery_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"carrier\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expected_delivery_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shipping_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tracking_number\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tracking_uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"short_description\": \"<string>\",\n  \"state\": \"<string>\",\n  \"status\": \"<string>\",\n  \"tax_amount\": \"<integer>\",\n  \"terms\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tip_amount\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"vat_amount\": \"<integer>\",\n  \"vat_rate\": \"<number>\"\n}"
								},
								{
									"id": "7b243f62-86f2-4bfb-b59a-708c9ba9c76b",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/orders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The GET /orders/{id} call allows your platform to look up a single order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "aa037cac-632a-4dd1-a32d-15edee7c15ad",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/orders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The GET /orders/{id} call allows your platform to look up a single order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "e2046c60-b0b7-46c1-8dec-3201920db21c",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/orders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The GET /orders/{id} call allows your platform to look up a single order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete an order",
							"id": "a0ae162d-18a2-4d5c-a51e-e540391c77ce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the order, generated by WePay when the order is created."
										}
									]
								},
								"description": "The DELETE /orders/{id} call allows your platform to delete an order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
							},
							"response": [
								{
									"id": "df240c81-5654-4f35-9cbb-4f0cb1c353b9",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/orders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The DELETE /orders/{id} call allows your platform to delete an order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"alternate_tax_amount\": \"<integer>\",\n  \"alternate_tax_id\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"buyer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customer_reference_number\": \"<string>\",\n  \"delivery_type\": \"<string>\",\n  \"discount_amount\": \"<integer>\",\n  \"discount_program_name\": \"<string>\",\n  \"duty_amount\": \"<integer>\",\n  \"freight_amount\": \"<integer>\",\n  \"grand_total_amount\": \"<integer>\",\n  \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"line_items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"long_description\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"reference_number\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"service_address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"ship_from_address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"ship_to_address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shipping_status\": {\n    \"actual_delivery_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"carrier\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expected_delivery_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shipping_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tracking_number\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tracking_uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"short_description\": \"<string>\",\n  \"state\": \"<string>\",\n  \"status\": \"<string>\",\n  \"tax_amount\": \"<integer>\",\n  \"terms\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tip_amount\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"vat_amount\": \"<integer>\",\n  \"vat_rate\": \"<number>\"\n}"
								},
								{
									"id": "8726d1e8-b3dd-421f-a8a0-f9d03b9c4b50",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/orders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The DELETE /orders/{id} call allows your platform to delete an order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "3cf5f12b-bf75-4cc1-be22-260dc01ea29b",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/orders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The DELETE /orders/{id} call allows your platform to delete an order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "9e820609-2a0b-4d12-8cf1-2eb9dd151e57",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/orders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The DELETE /orders/{id} call allows your platform to delete an order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update an order",
							"id": "dba20455-71b6-4906-937b-7e55531a3f08",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n  \"alternate_tax_amount\": 35,\n  \"alternate_tax_id\": \"11\",\n  \"buyer\": {\n    \"legal_entity_id\": \"1490656130\",\n    \"type\": \"legal_entity_id\"\n  },\n  \"customer_reference_number\": \"cust# 1234\",\n  \"delivery_type\": \"point_of_sale\",\n  \"discount_amount\": 0,\n  \"duty_amount\": 0,\n  \"freight_amount\": 0,\n  \"grand_total_amount\": 1000,\n  \"line_items\": [\n    {\n      \"commodity_code\": \"ABC123\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Iron Anvil\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Iron Anvil\",\n        \"photos\": [],\n        \"price\": 490,\n        \"product_code\": \"XYZ321\",\n        \"product_details\": {\n          \"band\": \"nike\"\n        },\n        \"product_name\": \"Acme Anvil - 100 Lb\",\n        \"reference_number\": \"abc_123456\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_123456\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    },\n    {\n      \"commodity_code\": \"XYZ999\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Catapult\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Catapult\",\n        \"photos\": [\n          \"http://imgur.com/o4Qk0AF\"\n        ],\n        \"price\": 490,\n        \"product_code\": \"AAAXYZ321\",\n        \"product_name\": \"Acme Catapult\",\n        \"reference_number\": \"abc_654321\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_654321\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    }\n  ],\n  \"long_description\": null,\n  \"notes\": \"urgent order\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    },\n    {\n      \"auto_billing\": {\n        \"autobill_setup_time\": 1209600,\n        \"payment_frequency\": \"monthly\",\n        \"payment_number\": 1,\n        \"setup_by\": \"payer\",\n        \"total_payments_scheduled\": 5\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"user\",\n      \"type\": \"auto_billing\"\n    }\n  ],\n  \"reference_number\": \"invoice #54321\",\n  \"service_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_from_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_to_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"shipping_status\": {\n    \"actual_delivery_time\": null,\n    \"carrier\": \"UPS\",\n    \"expected_delivery_time\": 1490656130,\n    \"shipping_time\": 1390656130,\n    \"tracking_number\": \"1Z34567890\",\n    \"tracking_uri\": \"https://example.com/ups/1Z34567890\"\n  },\n  \"short_description\": \"Donation to ABC campaign\",\n  \"status\": \"paid\",\n  \"tax_amount\": 35,\n  \"type\": \"goods\",\n  \"vat_amount\": 5,\n  \"vat_rate\": 1.99,\n  \"discount_program_name\": \"Everything is 50% off\",\n  \"tip_amount\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the order, generated by WePay when the order is created."
										}
									]
								},
								"description": "The POST /orders/{id} call allows your platform to update and add custom data an order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
							},
							"response": [
								{
									"id": "528e3abb-2cdc-4a56-bf72-3182e8e2b91a",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n  \"alternate_tax_amount\": 35,\n  \"alternate_tax_id\": \"11\",\n  \"buyer\": {\n    \"legal_entity_id\": \"1490656130\",\n    \"type\": \"legal_entity_id\"\n  },\n  \"customer_reference_number\": \"cust# 1234\",\n  \"delivery_type\": \"point_of_sale\",\n  \"discount_amount\": 0,\n  \"duty_amount\": 0,\n  \"freight_amount\": 0,\n  \"grand_total_amount\": 1000,\n  \"line_items\": [\n    {\n      \"commodity_code\": \"ABC123\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Iron Anvil\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Iron Anvil\",\n        \"photos\": [],\n        \"price\": 490,\n        \"product_code\": \"XYZ321\",\n        \"product_details\": {\n          \"band\": \"nike\"\n        },\n        \"product_name\": \"Acme Anvil - 100 Lb\",\n        \"reference_number\": \"abc_123456\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_123456\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    },\n    {\n      \"commodity_code\": \"XYZ999\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Catapult\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Catapult\",\n        \"photos\": [\n          \"http://imgur.com/o4Qk0AF\"\n        ],\n        \"price\": 490,\n        \"product_code\": \"AAAXYZ321\",\n        \"product_name\": \"Acme Catapult\",\n        \"reference_number\": \"abc_654321\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_654321\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    }\n  ],\n  \"long_description\": null,\n  \"notes\": \"urgent order\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    },\n    {\n      \"auto_billing\": {\n        \"autobill_setup_time\": 1209600,\n        \"payment_frequency\": \"monthly\",\n        \"payment_number\": 1,\n        \"setup_by\": \"payer\",\n        \"total_payments_scheduled\": 5\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"user\",\n      \"type\": \"auto_billing\"\n    }\n  ],\n  \"reference_number\": \"invoice #54321\",\n  \"service_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_from_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_to_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"shipping_status\": {\n    \"actual_delivery_time\": null,\n    \"carrier\": \"UPS\",\n    \"expected_delivery_time\": 1490656130,\n    \"shipping_time\": 1390656130,\n    \"tracking_number\": \"1Z34567890\",\n    \"tracking_uri\": \"https://example.com/ups/1Z34567890\"\n  },\n  \"short_description\": \"Donation to ABC campaign\",\n  \"status\": \"paid\",\n  \"tax_amount\": 35,\n  \"type\": \"goods\",\n  \"vat_amount\": 5,\n  \"vat_rate\": 1.99,\n  \"discount_program_name\": \"Everything is 50% off\",\n  \"tip_amount\": 0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/orders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The POST /orders/{id} call allows your platform to update and add custom data an order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"alternate_tax_amount\": \"<integer>\",\n  \"alternate_tax_id\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"buyer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customer_reference_number\": \"<string>\",\n  \"delivery_type\": \"<string>\",\n  \"discount_amount\": \"<integer>\",\n  \"discount_program_name\": \"<string>\",\n  \"duty_amount\": \"<integer>\",\n  \"freight_amount\": \"<integer>\",\n  \"grand_total_amount\": \"<integer>\",\n  \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"line_items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"long_description\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"reference_number\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"service_address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"ship_from_address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"ship_to_address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shipping_status\": {\n    \"actual_delivery_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"carrier\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expected_delivery_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shipping_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tracking_number\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tracking_uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"short_description\": \"<string>\",\n  \"state\": \"<string>\",\n  \"status\": \"<string>\",\n  \"tax_amount\": \"<integer>\",\n  \"terms\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tip_amount\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"vat_amount\": \"<integer>\",\n  \"vat_rate\": \"<number>\"\n}"
								},
								{
									"id": "f4a9f9bb-c843-4256-a734-bdd7806b6ff7",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n  \"alternate_tax_amount\": 35,\n  \"alternate_tax_id\": \"11\",\n  \"buyer\": {\n    \"legal_entity_id\": \"1490656130\",\n    \"type\": \"legal_entity_id\"\n  },\n  \"customer_reference_number\": \"cust# 1234\",\n  \"delivery_type\": \"point_of_sale\",\n  \"discount_amount\": 0,\n  \"duty_amount\": 0,\n  \"freight_amount\": 0,\n  \"grand_total_amount\": 1000,\n  \"line_items\": [\n    {\n      \"commodity_code\": \"ABC123\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Iron Anvil\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Iron Anvil\",\n        \"photos\": [],\n        \"price\": 490,\n        \"product_code\": \"XYZ321\",\n        \"product_details\": {\n          \"band\": \"nike\"\n        },\n        \"product_name\": \"Acme Anvil - 100 Lb\",\n        \"reference_number\": \"abc_123456\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_123456\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    },\n    {\n      \"commodity_code\": \"XYZ999\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Catapult\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Catapult\",\n        \"photos\": [\n          \"http://imgur.com/o4Qk0AF\"\n        ],\n        \"price\": 490,\n        \"product_code\": \"AAAXYZ321\",\n        \"product_name\": \"Acme Catapult\",\n        \"reference_number\": \"abc_654321\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_654321\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    }\n  ],\n  \"long_description\": null,\n  \"notes\": \"urgent order\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    },\n    {\n      \"auto_billing\": {\n        \"autobill_setup_time\": 1209600,\n        \"payment_frequency\": \"monthly\",\n        \"payment_number\": 1,\n        \"setup_by\": \"payer\",\n        \"total_payments_scheduled\": 5\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"user\",\n      \"type\": \"auto_billing\"\n    }\n  ],\n  \"reference_number\": \"invoice #54321\",\n  \"service_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_from_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_to_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"shipping_status\": {\n    \"actual_delivery_time\": null,\n    \"carrier\": \"UPS\",\n    \"expected_delivery_time\": 1490656130,\n    \"shipping_time\": 1390656130,\n    \"tracking_number\": \"1Z34567890\",\n    \"tracking_uri\": \"https://example.com/ups/1Z34567890\"\n  },\n  \"short_description\": \"Donation to ABC campaign\",\n  \"status\": \"paid\",\n  \"tax_amount\": 35,\n  \"type\": \"goods\",\n  \"vat_amount\": 5,\n  \"vat_rate\": 1.99,\n  \"discount_program_name\": \"Everything is 50% off\",\n  \"tip_amount\": 0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/orders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The POST /orders/{id} call allows your platform to update and add custom data an order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "42302dcb-b262-45d7-842a-cf35c4353120",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n  \"alternate_tax_amount\": 35,\n  \"alternate_tax_id\": \"11\",\n  \"buyer\": {\n    \"legal_entity_id\": \"1490656130\",\n    \"type\": \"legal_entity_id\"\n  },\n  \"customer_reference_number\": \"cust# 1234\",\n  \"delivery_type\": \"point_of_sale\",\n  \"discount_amount\": 0,\n  \"duty_amount\": 0,\n  \"freight_amount\": 0,\n  \"grand_total_amount\": 1000,\n  \"line_items\": [\n    {\n      \"commodity_code\": \"ABC123\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Iron Anvil\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Iron Anvil\",\n        \"photos\": [],\n        \"price\": 490,\n        \"product_code\": \"XYZ321\",\n        \"product_details\": {\n          \"band\": \"nike\"\n        },\n        \"product_name\": \"Acme Anvil - 100 Lb\",\n        \"reference_number\": \"abc_123456\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_123456\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    },\n    {\n      \"commodity_code\": \"XYZ999\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Catapult\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Catapult\",\n        \"photos\": [\n          \"http://imgur.com/o4Qk0AF\"\n        ],\n        \"price\": 490,\n        \"product_code\": \"AAAXYZ321\",\n        \"product_name\": \"Acme Catapult\",\n        \"reference_number\": \"abc_654321\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_654321\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    }\n  ],\n  \"long_description\": null,\n  \"notes\": \"urgent order\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    },\n    {\n      \"auto_billing\": {\n        \"autobill_setup_time\": 1209600,\n        \"payment_frequency\": \"monthly\",\n        \"payment_number\": 1,\n        \"setup_by\": \"payer\",\n        \"total_payments_scheduled\": 5\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"user\",\n      \"type\": \"auto_billing\"\n    }\n  ],\n  \"reference_number\": \"invoice #54321\",\n  \"service_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_from_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_to_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"shipping_status\": {\n    \"actual_delivery_time\": null,\n    \"carrier\": \"UPS\",\n    \"expected_delivery_time\": 1490656130,\n    \"shipping_time\": 1390656130,\n    \"tracking_number\": \"1Z34567890\",\n    \"tracking_uri\": \"https://example.com/ups/1Z34567890\"\n  },\n  \"short_description\": \"Donation to ABC campaign\",\n  \"status\": \"paid\",\n  \"tax_amount\": 35,\n  \"type\": \"goods\",\n  \"vat_amount\": 5,\n  \"vat_rate\": 1.99,\n  \"discount_program_name\": \"Everything is 50% off\",\n  \"tip_amount\": 0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/orders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The POST /orders/{id} call allows your platform to update and add custom data an order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "1fe54024-58da-40b7-88e5-db56232d8c77",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n  \"alternate_tax_amount\": 35,\n  \"alternate_tax_id\": \"11\",\n  \"buyer\": {\n    \"legal_entity_id\": \"1490656130\",\n    \"type\": \"legal_entity_id\"\n  },\n  \"customer_reference_number\": \"cust# 1234\",\n  \"delivery_type\": \"point_of_sale\",\n  \"discount_amount\": 0,\n  \"duty_amount\": 0,\n  \"freight_amount\": 0,\n  \"grand_total_amount\": 1000,\n  \"line_items\": [\n    {\n      \"commodity_code\": \"ABC123\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Iron Anvil\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Iron Anvil\",\n        \"photos\": [],\n        \"price\": 490,\n        \"product_code\": \"XYZ321\",\n        \"product_details\": {\n          \"band\": \"nike\"\n        },\n        \"product_name\": \"Acme Anvil - 100 Lb\",\n        \"reference_number\": \"abc_123456\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_123456\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    },\n    {\n      \"commodity_code\": \"XYZ999\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Catapult\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Catapult\",\n        \"photos\": [\n          \"http://imgur.com/o4Qk0AF\"\n        ],\n        \"price\": 490,\n        \"product_code\": \"AAAXYZ321\",\n        \"product_name\": \"Acme Catapult\",\n        \"reference_number\": \"abc_654321\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_654321\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    }\n  ],\n  \"long_description\": null,\n  \"notes\": \"urgent order\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    },\n    {\n      \"auto_billing\": {\n        \"autobill_setup_time\": 1209600,\n        \"payment_frequency\": \"monthly\",\n        \"payment_number\": 1,\n        \"setup_by\": \"payer\",\n        \"total_payments_scheduled\": 5\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"user\",\n      \"type\": \"auto_billing\"\n    }\n  ],\n  \"reference_number\": \"invoice #54321\",\n  \"service_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_from_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_to_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"shipping_status\": {\n    \"actual_delivery_time\": null,\n    \"carrier\": \"UPS\",\n    \"expected_delivery_time\": 1490656130,\n    \"shipping_time\": 1390656130,\n    \"tracking_number\": \"1Z34567890\",\n    \"tracking_uri\": \"https://example.com/ups/1Z34567890\"\n  },\n  \"short_description\": \"Donation to ABC campaign\",\n  \"status\": \"paid\",\n  \"tax_amount\": 35,\n  \"type\": \"goods\",\n  \"vat_amount\": 5,\n  \"vat_rate\": 1.99,\n  \"discount_program_name\": \"Everything is 50% off\",\n  \"tip_amount\": 0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/orders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the order, generated by WePay when the order is created."
												}
											]
										},
										"description": "The POST /orders/{id} call allows your platform to update and add custom data an order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "ef5cfc87-783e-42ea-a37e-594c5a382cf7"
				},
				{
					"name": "Create an order",
					"id": "578f617a-3db6-4c43-aa0d-44a76c26b37c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n  \"alternate_tax_amount\": 35,\n  \"alternate_tax_id\": \"11\",\n  \"buyer\": {\n    \"legal_entity_id\": \"1490656130\",\n    \"type\": \"legal_entity_id\"\n  },\n  \"customer_reference_number\": \"cust# 1234\",\n  \"delivery_type\": \"point_of_sale\",\n  \"discount_amount\": 0,\n  \"duty_amount\": 0,\n  \"freight_amount\": 0,\n  \"grand_total_amount\": 1000,\n  \"line_items\": [\n    {\n      \"commodity_code\": \"ABC123\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Iron Anvil\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Iron Anvil\",\n        \"photos\": [],\n        \"price\": 490,\n        \"product_code\": \"XYZ321\",\n        \"product_details\": {\n          \"band\": \"nike\"\n        },\n        \"product_name\": \"Acme Anvil - 100 Lb\",\n        \"reference_number\": \"abc_123456\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_123456\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    },\n    {\n      \"commodity_code\": \"XYZ999\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Catapult\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Catapult\",\n        \"photos\": [\n          \"http://imgur.com/o4Qk0AF\"\n        ],\n        \"price\": 490,\n        \"product_code\": \"AAAXYZ321\",\n        \"product_name\": \"Acme Catapult\",\n        \"reference_number\": \"abc_654321\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_654321\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    }\n  ],\n  \"long_description\": null,\n  \"notes\": \"urgent order\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    },\n    {\n      \"auto_billing\": {\n        \"autobill_setup_time\": 1209600,\n        \"payment_frequency\": \"monthly\",\n        \"payment_number\": 1,\n        \"setup_by\": \"payer\",\n        \"total_payments_scheduled\": 5\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"user\",\n      \"type\": \"auto_billing\"\n    }\n  ],\n  \"reference_number\": \"invoice #54321\",\n  \"service_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_from_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_to_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"shipping_status\": {\n    \"actual_delivery_time\": null,\n    \"carrier\": \"UPS\",\n    \"expected_delivery_time\": 1490656130,\n    \"shipping_time\": 1390656130,\n    \"tracking_number\": \"1Z34567890\",\n    \"tracking_uri\": \"https://example.com/ups/1Z34567890\"\n  },\n  \"short_description\": \"Donation to ABC campaign\",\n  \"status\": \"paid\",\n  \"tax_amount\": 35,\n  \"type\": \"goods\",\n  \"vat_amount\": 5,\n  \"vat_rate\": 1.99,\n  \"discount_program_name\": \"Everything is 50% off\",\n  \"tip_amount\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						},
						"description": "The POST /orders call allows your platform to create a new order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
					},
					"response": [
						{
							"id": "843416ae-db33-4e9d-9143-7ba6244ce278",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n  \"alternate_tax_amount\": 35,\n  \"alternate_tax_id\": \"11\",\n  \"buyer\": {\n    \"legal_entity_id\": \"1490656130\",\n    \"type\": \"legal_entity_id\"\n  },\n  \"customer_reference_number\": \"cust# 1234\",\n  \"delivery_type\": \"point_of_sale\",\n  \"discount_amount\": 0,\n  \"duty_amount\": 0,\n  \"freight_amount\": 0,\n  \"grand_total_amount\": 1000,\n  \"line_items\": [\n    {\n      \"commodity_code\": \"ABC123\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Iron Anvil\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Iron Anvil\",\n        \"photos\": [],\n        \"price\": 490,\n        \"product_code\": \"XYZ321\",\n        \"product_details\": {\n          \"band\": \"nike\"\n        },\n        \"product_name\": \"Acme Anvil - 100 Lb\",\n        \"reference_number\": \"abc_123456\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_123456\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    },\n    {\n      \"commodity_code\": \"XYZ999\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Catapult\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Catapult\",\n        \"photos\": [\n          \"http://imgur.com/o4Qk0AF\"\n        ],\n        \"price\": 490,\n        \"product_code\": \"AAAXYZ321\",\n        \"product_name\": \"Acme Catapult\",\n        \"reference_number\": \"abc_654321\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_654321\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    }\n  ],\n  \"long_description\": null,\n  \"notes\": \"urgent order\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    },\n    {\n      \"auto_billing\": {\n        \"autobill_setup_time\": 1209600,\n        \"payment_frequency\": \"monthly\",\n        \"payment_number\": 1,\n        \"setup_by\": \"payer\",\n        \"total_payments_scheduled\": 5\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"user\",\n      \"type\": \"auto_billing\"\n    }\n  ],\n  \"reference_number\": \"invoice #54321\",\n  \"service_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_from_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_to_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"shipping_status\": {\n    \"actual_delivery_time\": null,\n    \"carrier\": \"UPS\",\n    \"expected_delivery_time\": 1490656130,\n    \"shipping_time\": 1390656130,\n    \"tracking_number\": \"1Z34567890\",\n    \"tracking_uri\": \"https://example.com/ups/1Z34567890\"\n  },\n  \"short_description\": \"Donation to ABC campaign\",\n  \"status\": \"paid\",\n  \"tax_amount\": 35,\n  \"type\": \"goods\",\n  \"vat_amount\": 5,\n  \"vat_rate\": 1.99,\n  \"discount_program_name\": \"Everything is 50% off\",\n  \"tip_amount\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									]
								},
								"description": "The POST /orders call allows your platform to create a new order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"alternate_tax_amount\": \"<integer>\",\n  \"alternate_tax_id\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"buyer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customer_reference_number\": \"<string>\",\n  \"delivery_type\": \"<string>\",\n  \"discount_amount\": \"<integer>\",\n  \"discount_program_name\": \"<string>\",\n  \"duty_amount\": \"<integer>\",\n  \"freight_amount\": \"<integer>\",\n  \"grand_total_amount\": \"<integer>\",\n  \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"line_items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"long_description\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"reference_number\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"service_address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"ship_from_address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"ship_to_address\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shipping_status\": {\n    \"actual_delivery_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"carrier\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expected_delivery_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shipping_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tracking_number\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tracking_uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"short_description\": \"<string>\",\n  \"state\": \"<string>\",\n  \"status\": \"<string>\",\n  \"tax_amount\": \"<integer>\",\n  \"terms\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"tip_amount\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"vat_amount\": \"<integer>\",\n  \"vat_rate\": \"<number>\"\n}"
						},
						{
							"id": "5811a02e-643d-4596-bb19-167fb73e4fd7",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n  \"alternate_tax_amount\": 35,\n  \"alternate_tax_id\": \"11\",\n  \"buyer\": {\n    \"legal_entity_id\": \"1490656130\",\n    \"type\": \"legal_entity_id\"\n  },\n  \"customer_reference_number\": \"cust# 1234\",\n  \"delivery_type\": \"point_of_sale\",\n  \"discount_amount\": 0,\n  \"duty_amount\": 0,\n  \"freight_amount\": 0,\n  \"grand_total_amount\": 1000,\n  \"line_items\": [\n    {\n      \"commodity_code\": \"ABC123\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Iron Anvil\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Iron Anvil\",\n        \"photos\": [],\n        \"price\": 490,\n        \"product_code\": \"XYZ321\",\n        \"product_details\": {\n          \"band\": \"nike\"\n        },\n        \"product_name\": \"Acme Anvil - 100 Lb\",\n        \"reference_number\": \"abc_123456\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_123456\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    },\n    {\n      \"commodity_code\": \"XYZ999\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Catapult\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Catapult\",\n        \"photos\": [\n          \"http://imgur.com/o4Qk0AF\"\n        ],\n        \"price\": 490,\n        \"product_code\": \"AAAXYZ321\",\n        \"product_name\": \"Acme Catapult\",\n        \"reference_number\": \"abc_654321\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_654321\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    }\n  ],\n  \"long_description\": null,\n  \"notes\": \"urgent order\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    },\n    {\n      \"auto_billing\": {\n        \"autobill_setup_time\": 1209600,\n        \"payment_frequency\": \"monthly\",\n        \"payment_number\": 1,\n        \"setup_by\": \"payer\",\n        \"total_payments_scheduled\": 5\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"user\",\n      \"type\": \"auto_billing\"\n    }\n  ],\n  \"reference_number\": \"invoice #54321\",\n  \"service_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_from_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_to_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"shipping_status\": {\n    \"actual_delivery_time\": null,\n    \"carrier\": \"UPS\",\n    \"expected_delivery_time\": 1490656130,\n    \"shipping_time\": 1390656130,\n    \"tracking_number\": \"1Z34567890\",\n    \"tracking_uri\": \"https://example.com/ups/1Z34567890\"\n  },\n  \"short_description\": \"Donation to ABC campaign\",\n  \"status\": \"paid\",\n  \"tax_amount\": 35,\n  \"type\": \"goods\",\n  \"vat_amount\": 5,\n  \"vat_rate\": 1.99,\n  \"discount_program_name\": \"Everything is 50% off\",\n  \"tip_amount\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									]
								},
								"description": "The POST /orders call allows your platform to create a new order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "5faa83d3-f60c-48a6-a60c-edb6a03d243b",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n  \"alternate_tax_amount\": 35,\n  \"alternate_tax_id\": \"11\",\n  \"buyer\": {\n    \"legal_entity_id\": \"1490656130\",\n    \"type\": \"legal_entity_id\"\n  },\n  \"customer_reference_number\": \"cust# 1234\",\n  \"delivery_type\": \"point_of_sale\",\n  \"discount_amount\": 0,\n  \"duty_amount\": 0,\n  \"freight_amount\": 0,\n  \"grand_total_amount\": 1000,\n  \"line_items\": [\n    {\n      \"commodity_code\": \"ABC123\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Iron Anvil\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Iron Anvil\",\n        \"photos\": [],\n        \"price\": 490,\n        \"product_code\": \"XYZ321\",\n        \"product_details\": {\n          \"band\": \"nike\"\n        },\n        \"product_name\": \"Acme Anvil - 100 Lb\",\n        \"reference_number\": \"abc_123456\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_123456\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    },\n    {\n      \"commodity_code\": \"XYZ999\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Catapult\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Catapult\",\n        \"photos\": [\n          \"http://imgur.com/o4Qk0AF\"\n        ],\n        \"price\": 490,\n        \"product_code\": \"AAAXYZ321\",\n        \"product_name\": \"Acme Catapult\",\n        \"reference_number\": \"abc_654321\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_654321\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    }\n  ],\n  \"long_description\": null,\n  \"notes\": \"urgent order\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    },\n    {\n      \"auto_billing\": {\n        \"autobill_setup_time\": 1209600,\n        \"payment_frequency\": \"monthly\",\n        \"payment_number\": 1,\n        \"setup_by\": \"payer\",\n        \"total_payments_scheduled\": 5\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"user\",\n      \"type\": \"auto_billing\"\n    }\n  ],\n  \"reference_number\": \"invoice #54321\",\n  \"service_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_from_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_to_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"shipping_status\": {\n    \"actual_delivery_time\": null,\n    \"carrier\": \"UPS\",\n    \"expected_delivery_time\": 1490656130,\n    \"shipping_time\": 1390656130,\n    \"tracking_number\": \"1Z34567890\",\n    \"tracking_uri\": \"https://example.com/ups/1Z34567890\"\n  },\n  \"short_description\": \"Donation to ABC campaign\",\n  \"status\": \"paid\",\n  \"tax_amount\": 35,\n  \"type\": \"goods\",\n  \"vat_amount\": 5,\n  \"vat_rate\": 1.99,\n  \"discount_program_name\": \"Everything is 50% off\",\n  \"tip_amount\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									]
								},
								"description": "The POST /orders call allows your platform to create a new order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "022f816b-4fa3-41ed-9156-88022befb7b8",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n  \"alternate_tax_amount\": 35,\n  \"alternate_tax_id\": \"11\",\n  \"buyer\": {\n    \"legal_entity_id\": \"1490656130\",\n    \"type\": \"legal_entity_id\"\n  },\n  \"customer_reference_number\": \"cust# 1234\",\n  \"delivery_type\": \"point_of_sale\",\n  \"discount_amount\": 0,\n  \"duty_amount\": 0,\n  \"freight_amount\": 0,\n  \"grand_total_amount\": 1000,\n  \"line_items\": [\n    {\n      \"commodity_code\": \"ABC123\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Iron Anvil\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Iron Anvil\",\n        \"photos\": [],\n        \"price\": 490,\n        \"product_code\": \"XYZ321\",\n        \"product_details\": {\n          \"band\": \"nike\"\n        },\n        \"product_name\": \"Acme Anvil - 100 Lb\",\n        \"reference_number\": \"abc_123456\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_123456\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    },\n    {\n      \"commodity_code\": \"XYZ999\",\n      \"currency\": \"USD\",\n      \"description\": \"Classic Catapult\",\n      \"discount_amount\": 0,\n      \"discount_indicator\": null,\n      \"gross_net_indicator\": null,\n      \"item\": {\n        \"account_id\": \"d7608b20-fea5-4eb5-bd30-d3f58435e78b\",\n        \"description\": \"Classic Catapult\",\n        \"photos\": [\n          \"http://imgur.com/o4Qk0AF\"\n        ],\n        \"price\": 490,\n        \"product_code\": \"AAAXYZ321\",\n        \"product_name\": \"Acme Catapult\",\n        \"reference_number\": \"abc_654321\",\n        \"shipping_options\": [\n          \"regular\",\n          \"expedited\"\n        ],\n        \"terms\": {\n          \"terms_text\": \"lorem ipsum...\",\n          \"terms_uri\": \"https://example.com/terms_of_service\"\n        },\n        \"uri\": \"https://example.com/abc_654321\",\n        \"weight\": {\n          \"units\": \"pounds\",\n          \"weight\": 1\n        }\n      },\n      \"quantity\": 1,\n      \"tax_amount\": 5,\n      \"tax_rate\": 1.99,\n      \"tax_type_applied\": \"VAT\",\n      \"total_amount\": 500,\n      \"unit_of_measure\": \"count\",\n      \"unit_price\": 490\n    }\n  ],\n  \"long_description\": null,\n  \"notes\": \"urgent order\",\n  \"rbits\": [\n    {\n      \"address\": {\n        \"origin_address\": {\n          \"city\": \"Sunnyvale\",\n          \"country\": \"US\",\n          \"line1\": \"20 Main Street\",\n          \"postal_code\": \"94085\",\n          \"region\": \"CA\"\n        }\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"partner_database\",\n      \"type\": \"address\"\n    },\n    {\n      \"auto_billing\": {\n        \"autobill_setup_time\": 1209600,\n        \"payment_frequency\": \"monthly\",\n        \"payment_number\": 1,\n        \"setup_by\": \"payer\",\n        \"total_payments_scheduled\": 5\n      },\n      \"receive_time\": 1367958263,\n      \"source\": \"user\",\n      \"type\": \"auto_billing\"\n    }\n  ],\n  \"reference_number\": \"invoice #54321\",\n  \"service_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_from_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"ship_to_address\": {\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"line1\": \"123 Fake Street\",\n    \"postal_code\": \"94101\",\n    \"region\": \"CA\"\n  },\n  \"shipping_status\": {\n    \"actual_delivery_time\": null,\n    \"carrier\": \"UPS\",\n    \"expected_delivery_time\": 1490656130,\n    \"shipping_time\": 1390656130,\n    \"tracking_number\": \"1Z34567890\",\n    \"tracking_uri\": \"https://example.com/ups/1Z34567890\"\n  },\n  \"short_description\": \"Donation to ABC campaign\",\n  \"status\": \"paid\",\n  \"tax_amount\": 35,\n  \"type\": \"goods\",\n  \"vat_amount\": 5,\n  \"vat_rate\": 1.99,\n  \"discount_program_name\": \"Everything is 50% off\",\n  \"tip_amount\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									]
								},
								"description": "The POST /orders call allows your platform to create a new order. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a collection of orders",
					"id": "8d9d197f-4edb-4f79-b872-ae52816725d0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/orders?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&reference_number=in sed commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements from this page."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
								},
								{
									"key": "create_time_start",
									"value": "66825797",
									"description": "The timestamp for the start of the search window."
								},
								{
									"key": "create_time_end",
									"value": "66825797",
									"description": "The timestamp for the end of the search window."
								},
								{
									"key": "reference_number",
									"value": "in sed commodo",
									"description": "Return orders created with this reference number."
								}
							]
						},
						"description": "The GET /orders call allows your platform to look up a collection of orders. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
					},
					"response": [
						{
							"id": "21d8127f-1246-4497-b37c-bc286ce7096e",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&reference_number=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "reference_number",
											"value": "in sed commodo",
											"description": "Return orders created with this reference number."
										}
									]
								},
								"description": "The GET /orders call allows your platform to look up a collection of orders. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"previous\": \"<string>\",\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "1a89dc52-13d1-4316-8986-817ae541cd36",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&reference_number=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "reference_number",
											"value": "in sed commodo",
											"description": "Return orders created with this reference number."
										}
									]
								},
								"description": "The GET /orders call allows your platform to look up a collection of orders. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "e51fd152-c0cc-457a-a947-e1fac605a066",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&reference_number=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "reference_number",
											"value": "in sed commodo",
											"description": "Return orders created with this reference number."
										}
									]
								},
								"description": "The GET /orders call allows your platform to look up a collection of orders. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "2be64ff9-19c4-40dc-9435-79365bc44de9",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&reference_number=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "reference_number",
											"value": "in sed commodo",
											"description": "Return orders created with this reference number."
										}
									]
								},
								"description": "The GET /orders call allows your platform to look up a collection of orders. Orders identify both the merchant and payer, and describe items sold, shipment date, prices, delivery details, and payment terms.  "
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "c9321c87-c572-4b7a-80a8-d0e10019f45b"
		},
		{
			"name": "payments",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get a payment",
							"id": "ee90c823-2d0e-45df-a58c-98c952d6ef73",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payments/:id?expand=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payments",
										":id"
									],
									"query": [
										{
											"key": "expand",
											"value": "in sed commodo",
											"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the payment, generated by WePay when the payment is created."
										}
									]
								},
								"description": "The GET /payments/{id} call allows your platform to look up a single payment."
							},
							"response": [
								{
									"id": "54daa3d7-dea1-4447-9f2c-0797c3aa6aa8",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payments/:id?expand=in sed commodo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "in sed commodo",
													"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment, generated by WePay when the payment is created."
												}
											]
										},
										"description": "The GET /payments/{id} call allows your platform to look up a single payment."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": \"<string>\",\n  \"amount\": \"<integer>\",\n  \"amount_refunded\": \"<integer>\",\n  \"amount_disputed\": \"<integer>\",\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payment_method\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"initiated_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reference_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"capture_at\": \"<long>\",\n  \"authorization_code\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auto_capture\": \"<boolean>\",\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"failure_reason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fee_amount\": \"<integer>\",\n  \"order\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"pending_reasons\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"txnr_app_fee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_merchant\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "7094a7f8-c66d-407e-b539-314084244259",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payments/:id?expand=in sed commodo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "in sed commodo",
													"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment, generated by WePay when the payment is created."
												}
											]
										},
										"description": "The GET /payments/{id} call allows your platform to look up a single payment."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "2c88abae-627c-44ad-a9f7-e9ba6fa4b0ca",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payments/:id?expand=in sed commodo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "in sed commodo",
													"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment, generated by WePay when the payment is created."
												}
											]
										},
										"description": "The GET /payments/{id} call allows your platform to look up a single payment."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "42d0d088-b16a-48e0-ab06-12a927c9e5c7",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payments/:id?expand=in sed commodo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "in sed commodo",
													"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment, generated by WePay when the payment is created."
												}
											]
										},
										"description": "The GET /payments/{id} call allows your platform to look up a single payment."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update a payment",
							"id": "51a5f7b0-1115-4c65-940b-42f1618a65c4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"custom_data\": {\n    \"Another Key\": \"some value\",\n    \"a_reference_number\": 4\n  },\n  \"rbits\": null,\n  \"reference_id\": \"dfeb052b-ae8c-4a69-b909-8d9ecdd7c742\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the payment, generated by WePay when the payment is created."
										}
									]
								},
								"description": "The POST /payments/{id} call allows your platform to update and add custom data to a payment."
							},
							"response": [
								{
									"id": "e03cd905-1548-4540-b6fe-285ee98deee6",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": {\n    \"Another Key\": \"some value\",\n    \"a_reference_number\": 4\n  },\n  \"rbits\": null,\n  \"reference_id\": \"dfeb052b-ae8c-4a69-b909-8d9ecdd7c742\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment, generated by WePay when the payment is created."
												}
											]
										},
										"description": "The POST /payments/{id} call allows your platform to update and add custom data to a payment."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": \"<string>\",\n  \"amount\": \"<integer>\",\n  \"amount_refunded\": \"<integer>\",\n  \"amount_disputed\": \"<integer>\",\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payment_method\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"initiated_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reference_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"capture_at\": \"<long>\",\n  \"authorization_code\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auto_capture\": \"<boolean>\",\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"failure_reason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fee_amount\": \"<integer>\",\n  \"order\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"pending_reasons\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"txnr_app_fee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_merchant\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "e845854e-2d06-498b-8997-913f233a4d26",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": {\n    \"Another Key\": \"some value\",\n    \"a_reference_number\": 4\n  },\n  \"rbits\": null,\n  \"reference_id\": \"dfeb052b-ae8c-4a69-b909-8d9ecdd7c742\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment, generated by WePay when the payment is created."
												}
											]
										},
										"description": "The POST /payments/{id} call allows your platform to update and add custom data to a payment."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "bac8a47f-cddf-4a75-a280-d9f0744b93c5",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": {\n    \"Another Key\": \"some value\",\n    \"a_reference_number\": 4\n  },\n  \"rbits\": null,\n  \"reference_id\": \"dfeb052b-ae8c-4a69-b909-8d9ecdd7c742\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment, generated by WePay when the payment is created."
												}
											]
										},
										"description": "The POST /payments/{id} call allows your platform to update and add custom data to a payment."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "e7bda3e1-4523-4393-b868-9830a04ca995",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": {\n    \"Another Key\": \"some value\",\n    \"a_reference_number\": 4\n  },\n  \"rbits\": null,\n  \"reference_id\": \"dfeb052b-ae8c-4a69-b909-8d9ecdd7c742\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment, generated by WePay when the payment is created."
												}
											]
										},
										"description": "The POST /payments/{id} call allows your platform to update and add custom data to a payment."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Cancel a payment",
							"id": "b890db64-d990-4651-b39c-ebc7d693c960",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cancel_reason\": \"item(s) delayed - cannot fulfill order\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payments/:id/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payments",
										":id",
										"cancel"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the payment, generated by WePay when the payment is created."
										}
									]
								},
								"description": "The POST /payments/{id}/cancel call allows your platform to cancel a payment."
							},
							"response": [
								{
									"id": "56eddbd2-37d0-4b1f-aea7-671fb2cd9109",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cancel_reason\": \"item(s) delayed - cannot fulfill order\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:id/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":id",
												"cancel"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment, generated by WePay when the payment is created."
												}
											]
										},
										"description": "The POST /payments/{id}/cancel call allows your platform to cancel a payment."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": \"<string>\",\n  \"amount\": \"<integer>\",\n  \"amount_refunded\": \"<integer>\",\n  \"amount_disputed\": \"<integer>\",\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payment_method\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"initiated_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reference_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"capture_at\": \"<long>\",\n  \"authorization_code\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auto_capture\": \"<boolean>\",\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"failure_reason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fee_amount\": \"<integer>\",\n  \"order\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"pending_reasons\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"txnr_app_fee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_merchant\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "5551d2a3-0d8c-44ac-9f8f-52389692041f",
									"name": "INVALID_PARAMS, PAYMENT_CANNOT_BE_CANCELED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cancel_reason\": \"item(s) delayed - cannot fulfill order\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:id/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":id",
												"cancel"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment, generated by WePay when the payment is created."
												}
											]
										},
										"description": "The POST /payments/{id}/cancel call allows your platform to cancel a payment."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "1d9c505f-733a-47e3-b872-dec09f400dbe",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cancel_reason\": \"item(s) delayed - cannot fulfill order\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:id/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":id",
												"cancel"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment, generated by WePay when the payment is created."
												}
											]
										},
										"description": "The POST /payments/{id}/cancel call allows your platform to cancel a payment."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "46b43425-f920-45d0-b937-eae66ebb8ea8",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cancel_reason\": \"item(s) delayed - cannot fulfill order\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:id/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":id",
												"cancel"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment, generated by WePay when the payment is created."
												}
											]
										},
										"description": "The POST /payments/{id}/cancel call allows your platform to cancel a payment."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Capture a payment",
							"id": "7218efec-a1fd-4eee-9066-f1837de46705",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amounts\": {\n    \"amount\": 1500,\n    \"currency\": \"USD\",\n    \"fee_amount\": 150\n  },\n  \"custom_data\": {\n    \"foo\": \"bar\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payments/:id/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payments",
										":id",
										"capture"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the payment, generated by WePay when the payment is created."
										}
									]
								},
								"description": "The POST /payments/{id}/capture call allows your platform to capture a payment (when `auto_capture` is set to false)."
							},
							"response": [
								{
									"id": "4fa72f19-a131-4398-806f-8e03e6619dee",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amounts\": {\n    \"amount\": 1500,\n    \"currency\": \"USD\",\n    \"fee_amount\": 150\n  },\n  \"custom_data\": {\n    \"foo\": \"bar\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:id/capture",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":id",
												"capture"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment, generated by WePay when the payment is created."
												}
											]
										},
										"description": "The POST /payments/{id}/capture call allows your platform to capture a payment (when `auto_capture` is set to false)."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": \"<string>\",\n  \"amount\": \"<integer>\",\n  \"amount_refunded\": \"<integer>\",\n  \"amount_disputed\": \"<integer>\",\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payment_method\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"initiated_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reference_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"capture_at\": \"<long>\",\n  \"authorization_code\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auto_capture\": \"<boolean>\",\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"failure_reason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fee_amount\": \"<integer>\",\n  \"order\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"pending_reasons\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"txnr_app_fee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_merchant\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "fd55a82c-5879-4f4b-a111-8fd19c8fd685",
									"name": "INVALID_PARAMS, PARAM_IS_MISSING, PARAM_VALUE_IS_TOO_SMALL_INCLUSIVE, FEE_EXCEEDS_PAYMENT_AMOUNT_THRESHOLD_PERCENTAGE",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amounts\": {\n    \"amount\": 1500,\n    \"currency\": \"USD\",\n    \"fee_amount\": 150\n  },\n  \"custom_data\": {\n    \"foo\": \"bar\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:id/capture",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":id",
												"capture"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment, generated by WePay when the payment is created."
												}
											]
										},
										"description": "The POST /payments/{id}/capture call allows your platform to capture a payment (when `auto_capture` is set to false)."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "36886c8d-2029-4adb-bef1-c00dbb41b4b9",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amounts\": {\n    \"amount\": 1500,\n    \"currency\": \"USD\",\n    \"fee_amount\": 150\n  },\n  \"custom_data\": {\n    \"foo\": \"bar\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:id/capture",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":id",
												"capture"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment, generated by WePay when the payment is created."
												}
											]
										},
										"description": "The POST /payments/{id}/capture call allows your platform to capture a payment (when `auto_capture` is set to false)."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "3fae128a-24e6-4730-ace4-814f0e0f34ef",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amounts\": {\n    \"amount\": 1500,\n    \"currency\": \"USD\",\n    \"fee_amount\": 150\n  },\n  \"custom_data\": {\n    \"foo\": \"bar\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payments/:id/capture",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												":id",
												"capture"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment, generated by WePay when the payment is created."
												}
											]
										},
										"description": "The POST /payments/{id}/capture call allows your platform to capture a payment (when `auto_capture` is set to false)."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "a585d035-1519-430e-86a7-faaea4988a7b"
				},
				{
					"name": "Create a payment",
					"id": "50f0d257-2542-4a70-9bbb-b09167a95a88",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"description": "(Required) ",
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
								"key": "WePay-Risk-Token",
								"value": "in sed commodo"
							},
							{
								"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
								"key": "Client-IP",
								"value": "in sed commodo"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"account_id\": \"abc123\",\n  \"amount\": 1000,\n  \"auto_capture\": true,\n  \"currency\": \"USD\",\n  \"custom_data\": {\n    \"my_key\": \"invoice #54321\"\n  },\n  \"fee_amount\": 30,\n  \"payment_method\": {\n    \"credit_card\": {\n      \"auto_update\": false,\n      \"card_holder\": {\n        \"address\": {\n          \"city\": \"Redwood City\",\n          \"country\": \"US\",\n          \"line1\": \"350 Convention Way\",\n          \"postal_code\": \"94025\",\n          \"region\": \"CA\"\n        },\n        \"email\": \"example@wepay.com\",\n        \"holder_name\": \"John Snow\"\n      },\n      \"card_number\": \"5496198584584769\",\n      \"cvv\": \"007\",\n      \"expiration_month\": 4,\n      \"expiration_year\": 2030,\n      \"virtual_terminal_mode\": \"web\",\n      \"card_on_file\": true,\n      \"recurring\": false\n    },\n    \"custom_data\": {\n      \"my_key\": \"invoice #54321\"\n    },\n    \"type\": \"credit_card\"\n  },\n  \"initiated_by\": \"customer\",\n  \"reference_id\": \"dfeb052b-ae8c-4a69-b909-8d9ecdd7c742\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/payments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payments"
							]
						},
						"description": "The POST /payments call allows your platform to create a new payment. For platforms on blended rate pricing leveraging the Clear product, remember to appropriately [calculate](/clear/process-payments/#calculate-fees) fees. To try this request out in the console, update the following parameters with your own information: **App-Id**, **App-Token**, **Unique-Key**, **payment_method**."
					},
					"response": [
						{
							"id": "dc524994-e5ed-410a-a99b-58c42b453b72",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"description": "(Required) ",
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"abc123\",\n  \"amount\": 1000,\n  \"auto_capture\": true,\n  \"currency\": \"USD\",\n  \"custom_data\": {\n    \"my_key\": \"invoice #54321\"\n  },\n  \"fee_amount\": 30,\n  \"payment_method\": {\n    \"credit_card\": {\n      \"auto_update\": false,\n      \"card_holder\": {\n        \"address\": {\n          \"city\": \"Redwood City\",\n          \"country\": \"US\",\n          \"line1\": \"350 Convention Way\",\n          \"postal_code\": \"94025\",\n          \"region\": \"CA\"\n        },\n        \"email\": \"example@wepay.com\",\n        \"holder_name\": \"John Snow\"\n      },\n      \"card_number\": \"5496198584584769\",\n      \"cvv\": \"007\",\n      \"expiration_month\": 4,\n      \"expiration_year\": 2030,\n      \"virtual_terminal_mode\": \"web\",\n      \"card_on_file\": true,\n      \"recurring\": false\n    },\n    \"custom_data\": {\n      \"my_key\": \"invoice #54321\"\n    },\n    \"type\": \"credit_card\"\n  },\n  \"initiated_by\": \"customer\",\n  \"reference_id\": \"dfeb052b-ae8c-4a69-b909-8d9ecdd7c742\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payments"
									]
								},
								"description": "The POST /payments call allows your platform to create a new payment. For platforms on blended rate pricing leveraging the Clear product, remember to appropriately [calculate](/clear/process-payments/#calculate-fees) fees. To try this request out in the console, update the following parameters with your own information: **App-Id**, **App-Token**, **Unique-Key**, **payment_method**."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": \"<string>\",\n  \"amount\": \"<integer>\",\n  \"amount_refunded\": \"<integer>\",\n  \"amount_disputed\": \"<integer>\",\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payment_method\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"initiated_by\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reference_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"capture_at\": \"<long>\",\n  \"authorization_code\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"auto_capture\": \"<boolean>\",\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"failure_reason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fee_amount\": \"<integer>\",\n  \"order\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"pending_reasons\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"txnr_app_fee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_merchant\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
						},
						{
							"id": "8ec96b56-1295-4aaa-97cd-891743f46277",
							"name": "INVALID_PARAMS, MERCHANT_ACCOUNT_CANNOT_ACCEPT_PAYMENTS, TRANSACTION_DECLINED, UNSUPPORTED_CURRENCY",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"description": "(Required) ",
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"abc123\",\n  \"amount\": 1000,\n  \"auto_capture\": true,\n  \"currency\": \"USD\",\n  \"custom_data\": {\n    \"my_key\": \"invoice #54321\"\n  },\n  \"fee_amount\": 30,\n  \"payment_method\": {\n    \"credit_card\": {\n      \"auto_update\": false,\n      \"card_holder\": {\n        \"address\": {\n          \"city\": \"Redwood City\",\n          \"country\": \"US\",\n          \"line1\": \"350 Convention Way\",\n          \"postal_code\": \"94025\",\n          \"region\": \"CA\"\n        },\n        \"email\": \"example@wepay.com\",\n        \"holder_name\": \"John Snow\"\n      },\n      \"card_number\": \"5496198584584769\",\n      \"cvv\": \"007\",\n      \"expiration_month\": 4,\n      \"expiration_year\": 2030,\n      \"virtual_terminal_mode\": \"web\",\n      \"card_on_file\": true,\n      \"recurring\": false\n    },\n    \"custom_data\": {\n      \"my_key\": \"invoice #54321\"\n    },\n    \"type\": \"credit_card\"\n  },\n  \"initiated_by\": \"customer\",\n  \"reference_id\": \"dfeb052b-ae8c-4a69-b909-8d9ecdd7c742\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payments"
									]
								},
								"description": "The POST /payments call allows your platform to create a new payment. For platforms on blended rate pricing leveraging the Clear product, remember to appropriately [calculate](/clear/process-payments/#calculate-fees) fees. To try this request out in the console, update the following parameters with your own information: **App-Id**, **App-Token**, **Unique-Key**, **payment_method**."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "d6e48a88-b6ff-483a-896c-19e91ba5343d",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"description": "(Required) ",
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"abc123\",\n  \"amount\": 1000,\n  \"auto_capture\": true,\n  \"currency\": \"USD\",\n  \"custom_data\": {\n    \"my_key\": \"invoice #54321\"\n  },\n  \"fee_amount\": 30,\n  \"payment_method\": {\n    \"credit_card\": {\n      \"auto_update\": false,\n      \"card_holder\": {\n        \"address\": {\n          \"city\": \"Redwood City\",\n          \"country\": \"US\",\n          \"line1\": \"350 Convention Way\",\n          \"postal_code\": \"94025\",\n          \"region\": \"CA\"\n        },\n        \"email\": \"example@wepay.com\",\n        \"holder_name\": \"John Snow\"\n      },\n      \"card_number\": \"5496198584584769\",\n      \"cvv\": \"007\",\n      \"expiration_month\": 4,\n      \"expiration_year\": 2030,\n      \"virtual_terminal_mode\": \"web\",\n      \"card_on_file\": true,\n      \"recurring\": false\n    },\n    \"custom_data\": {\n      \"my_key\": \"invoice #54321\"\n    },\n    \"type\": \"credit_card\"\n  },\n  \"initiated_by\": \"customer\",\n  \"reference_id\": \"dfeb052b-ae8c-4a69-b909-8d9ecdd7c742\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payments"
									]
								},
								"description": "The POST /payments call allows your platform to create a new payment. For platforms on blended rate pricing leveraging the Clear product, remember to appropriately [calculate](/clear/process-payments/#calculate-fees) fees. To try this request out in the console, update the following parameters with your own information: **App-Id**, **App-Token**, **Unique-Key**, **payment_method**."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "27251c1a-8c16-4609-a3c4-d567deb6151f",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"description": "(Required) ",
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"abc123\",\n  \"amount\": 1000,\n  \"auto_capture\": true,\n  \"currency\": \"USD\",\n  \"custom_data\": {\n    \"my_key\": \"invoice #54321\"\n  },\n  \"fee_amount\": 30,\n  \"payment_method\": {\n    \"credit_card\": {\n      \"auto_update\": false,\n      \"card_holder\": {\n        \"address\": {\n          \"city\": \"Redwood City\",\n          \"country\": \"US\",\n          \"line1\": \"350 Convention Way\",\n          \"postal_code\": \"94025\",\n          \"region\": \"CA\"\n        },\n        \"email\": \"example@wepay.com\",\n        \"holder_name\": \"John Snow\"\n      },\n      \"card_number\": \"5496198584584769\",\n      \"cvv\": \"007\",\n      \"expiration_month\": 4,\n      \"expiration_year\": 2030,\n      \"virtual_terminal_mode\": \"web\",\n      \"card_on_file\": true,\n      \"recurring\": false\n    },\n    \"custom_data\": {\n      \"my_key\": \"invoice #54321\"\n    },\n    \"type\": \"credit_card\"\n  },\n  \"initiated_by\": \"customer\",\n  \"reference_id\": \"dfeb052b-ae8c-4a69-b909-8d9ecdd7c742\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payments"
									]
								},
								"description": "The POST /payments call allows your platform to create a new payment. For platforms on blended rate pricing leveraging the Clear product, remember to appropriately [calculate](/clear/process-payments/#calculate-fees) fees. To try this request out in the console, update the following parameters with your own information: **App-Id**, **App-Token**, **Unique-Key**, **payment_method**."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a collection of payments",
					"id": "eaf8a408-26df-49e4-87b8-940022135d90",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/payments?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&minimum_amount=-29211542&maximum_amount=-29211542&owner_id=in sed commodo&payment_method_type=payment_bank_us&payment_method_id=in sed commodo&status=completed&reference_id=in sed commodo&expand=in sed commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payments"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements from this page."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
								},
								{
									"key": "create_time_start",
									"value": "66825797",
									"description": "The timestamp for the start of the search window."
								},
								{
									"key": "create_time_end",
									"value": "66825797",
									"description": "The timestamp for the end of the search window."
								},
								{
									"key": "minimum_amount",
									"value": "-29211542",
									"description": "Define the minimum value of the `amount` value for returned Payments (inclusive)."
								},
								{
									"key": "maximum_amount",
									"value": "-29211542",
									"description": "Define the maximum value of the `amount` value for returned Payments (inclusive)."
								},
								{
									"key": "owner_id",
									"value": "in sed commodo",
									"description": "ID of the owner of the resource."
								},
								{
									"key": "payment_method_type",
									"value": "payment_bank_us",
									"description": "Type of the payment method used. Possible values include: `credit_card`, `payment_bank_ca`, `payment_bank_us`."
								},
								{
									"key": "payment_method_id",
									"value": "in sed commodo",
									"description": "ID of the payment method used, generated by WePay when the payment method is created."
								},
								{
									"key": "status",
									"value": "completed",
									"description": "Status of the payment. Possible values include: `pending`, `completed`, `failed`, `canceled`."
								},
								{
									"key": "reference_id",
									"value": "in sed commodo",
									"description": "The reference_id to search for."
								},
								{
									"key": "expand",
									"value": "in sed commodo",
									"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
								}
							]
						},
						"description": "The GET /payments call allows your platform to look up a collection of payments."
					},
					"response": [
						{
							"id": "9f95b5bf-9eec-41c5-b194-8b0d6e6d30f6",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payments?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&minimum_amount=-29211542&maximum_amount=-29211542&owner_id=in sed commodo&payment_method_type=payment_bank_us&payment_method_id=in sed commodo&status=completed&reference_id=in sed commodo&expand=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payments"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "minimum_amount",
											"value": "-29211542",
											"description": "Define the minimum value of the `amount` value for returned Payments (inclusive)."
										},
										{
											"key": "maximum_amount",
											"value": "-29211542",
											"description": "Define the maximum value of the `amount` value for returned Payments (inclusive)."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "ID of the owner of the resource."
										},
										{
											"key": "payment_method_type",
											"value": "payment_bank_us",
											"description": "Type of the payment method used. Possible values include: `credit_card`, `payment_bank_ca`, `payment_bank_us`."
										},
										{
											"key": "payment_method_id",
											"value": "in sed commodo",
											"description": "ID of the payment method used, generated by WePay when the payment method is created."
										},
										{
											"key": "status",
											"value": "completed",
											"description": "Status of the payment. Possible values include: `pending`, `completed`, `failed`, `canceled`."
										},
										{
											"key": "reference_id",
											"value": "in sed commodo",
											"description": "The reference_id to search for."
										},
										{
											"key": "expand",
											"value": "in sed commodo",
											"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
										}
									]
								},
								"description": "The GET /payments call allows your platform to look up a collection of payments."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"previous\": \"<string>\",\n  \"next\": \"<string>\",\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "4ffaf679-461f-410d-b1bb-7de35f60f397",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payments?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&minimum_amount=-29211542&maximum_amount=-29211542&owner_id=in sed commodo&payment_method_type=payment_bank_us&payment_method_id=in sed commodo&status=completed&reference_id=in sed commodo&expand=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payments"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "minimum_amount",
											"value": "-29211542",
											"description": "Define the minimum value of the `amount` value for returned Payments (inclusive)."
										},
										{
											"key": "maximum_amount",
											"value": "-29211542",
											"description": "Define the maximum value of the `amount` value for returned Payments (inclusive)."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "ID of the owner of the resource."
										},
										{
											"key": "payment_method_type",
											"value": "payment_bank_us",
											"description": "Type of the payment method used. Possible values include: `credit_card`, `payment_bank_ca`, `payment_bank_us`."
										},
										{
											"key": "payment_method_id",
											"value": "in sed commodo",
											"description": "ID of the payment method used, generated by WePay when the payment method is created."
										},
										{
											"key": "status",
											"value": "completed",
											"description": "Status of the payment. Possible values include: `pending`, `completed`, `failed`, `canceled`."
										},
										{
											"key": "reference_id",
											"value": "in sed commodo",
											"description": "The reference_id to search for."
										},
										{
											"key": "expand",
											"value": "in sed commodo",
											"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
										}
									]
								},
								"description": "The GET /payments call allows your platform to look up a collection of payments."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "47edfd04-6362-4151-8c13-a83f55b0b70c",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payments?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&minimum_amount=-29211542&maximum_amount=-29211542&owner_id=in sed commodo&payment_method_type=payment_bank_us&payment_method_id=in sed commodo&status=completed&reference_id=in sed commodo&expand=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payments"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "minimum_amount",
											"value": "-29211542",
											"description": "Define the minimum value of the `amount` value for returned Payments (inclusive)."
										},
										{
											"key": "maximum_amount",
											"value": "-29211542",
											"description": "Define the maximum value of the `amount` value for returned Payments (inclusive)."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "ID of the owner of the resource."
										},
										{
											"key": "payment_method_type",
											"value": "payment_bank_us",
											"description": "Type of the payment method used. Possible values include: `credit_card`, `payment_bank_ca`, `payment_bank_us`."
										},
										{
											"key": "payment_method_id",
											"value": "in sed commodo",
											"description": "ID of the payment method used, generated by WePay when the payment method is created."
										},
										{
											"key": "status",
											"value": "completed",
											"description": "Status of the payment. Possible values include: `pending`, `completed`, `failed`, `canceled`."
										},
										{
											"key": "reference_id",
											"value": "in sed commodo",
											"description": "The reference_id to search for."
										},
										{
											"key": "expand",
											"value": "in sed commodo",
											"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
										}
									]
								},
								"description": "The GET /payments call allows your platform to look up a collection of payments."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "ab5ba505-3a90-4835-b2be-9f31fa2a2974",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payments?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&minimum_amount=-29211542&maximum_amount=-29211542&owner_id=in sed commodo&payment_method_type=payment_bank_us&payment_method_id=in sed commodo&status=completed&reference_id=in sed commodo&expand=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payments"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "minimum_amount",
											"value": "-29211542",
											"description": "Define the minimum value of the `amount` value for returned Payments (inclusive)."
										},
										{
											"key": "maximum_amount",
											"value": "-29211542",
											"description": "Define the maximum value of the `amount` value for returned Payments (inclusive)."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "ID of the owner of the resource."
										},
										{
											"key": "payment_method_type",
											"value": "payment_bank_us",
											"description": "Type of the payment method used. Possible values include: `credit_card`, `payment_bank_ca`, `payment_bank_us`."
										},
										{
											"key": "payment_method_id",
											"value": "in sed commodo",
											"description": "ID of the payment method used, generated by WePay when the payment method is created."
										},
										{
											"key": "status",
											"value": "completed",
											"description": "Status of the payment. Possible values include: `pending`, `completed`, `failed`, `canceled`."
										},
										{
											"key": "reference_id",
											"value": "in sed commodo",
											"description": "The reference_id to search for."
										},
										{
											"key": "expand",
											"value": "in sed commodo",
											"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
										}
									]
								},
								"description": "The GET /payments call allows your platform to look up a collection of payments."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "9ce9defc-eb59-41de-84c9-900b0135e00e"
		},
		{
			"name": "payment_methods",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Update a payment method",
							"id": "4e0cd1ad-877a-44db-8ad1-11ec3564b97c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"payment_bank_us\",\n  \"payment_bank_us\": null,\n  \"custom_data\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payment_methods/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payment_methods",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the payment method, generated by WePay when the payment method is created."
										}
									]
								},
								"description": "The POST /payment_methods/{id} call allows your platform to update and add custom data to an existing payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
							},
							"response": [
								{
									"id": "cbf90769-c87b-4dc8-8382-022a38094757",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"payment_bank_us\",\n  \"payment_bank_us\": null,\n  \"custom_data\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payment_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment method, generated by WePay when the payment method is created."
												}
											]
										},
										"description": "The POST /payment_methods/{id} call allows your platform to update and add custom data to an existing payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"type\": \"<string>\",\n  \"status\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"credit_card\": {\n    \"card_holder\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expiration_month\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expiration_year\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"card_on_file\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recurring\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cvv_provided\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"auto_update\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"backing_display_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"bin\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"card_brand\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"card_entry_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"display_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"virtual_terminal_mode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payment_bank_us\": {\n    \"account_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"account_holder\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
								},
								{
									"id": "9e922dbb-694b-4b2a-a600-a87a2e1d2a5e",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"payment_bank_us\",\n  \"payment_bank_us\": null,\n  \"custom_data\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payment_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment method, generated by WePay when the payment method is created."
												}
											]
										},
										"description": "The POST /payment_methods/{id} call allows your platform to update and add custom data to an existing payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "31bcb5e5-2546-4043-968c-45b705b5760e",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"payment_bank_us\",\n  \"payment_bank_us\": null,\n  \"custom_data\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payment_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment method, generated by WePay when the payment method is created."
												}
											]
										},
										"description": "The POST /payment_methods/{id} call allows your platform to update and add custom data to an existing payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "7bdeca9c-d98e-49a6-8207-4ae2b4a6a66a",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"payment_bank_us\",\n  \"payment_bank_us\": null,\n  \"custom_data\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payment_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment method, generated by WePay when the payment method is created."
												}
											]
										},
										"description": "The POST /payment_methods/{id} call allows your platform to update and add custom data to an existing payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get a payment method",
							"id": "46f0282f-bfda-4c85-98e3-474658625449",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payment_methods/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payment_methods",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the payment method, generated by WePay when the payment method is created."
										}
									]
								},
								"description": "The GET /payment_methods/{id} call allows your platform to look up a specific payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
							},
							"response": [
								{
									"id": "b1d79d2d-ef53-4a5c-8042-fc1397970178",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payment_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment method, generated by WePay when the payment method is created."
												}
											]
										},
										"description": "The GET /payment_methods/{id} call allows your platform to look up a specific payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"type\": \"<string>\",\n  \"status\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"credit_card\": {\n    \"card_holder\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expiration_month\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expiration_year\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"card_on_file\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recurring\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cvv_provided\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"auto_update\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"backing_display_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"bin\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"card_brand\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"card_entry_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"display_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"virtual_terminal_mode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payment_bank_us\": {\n    \"account_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"account_holder\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
								},
								{
									"id": "bafad9e9-76a2-4c0e-8cc2-9087990965fa",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payment_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment method, generated by WePay when the payment method is created."
												}
											]
										},
										"description": "The GET /payment_methods/{id} call allows your platform to look up a specific payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "92c4d947-8675-4bce-a342-beed4f8aaea3",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payment_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment method, generated by WePay when the payment method is created."
												}
											]
										},
										"description": "The GET /payment_methods/{id} call allows your platform to look up a specific payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "06153212-b7d7-4f89-82fe-593bdf166ca0",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payment_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment method, generated by WePay when the payment method is created."
												}
											]
										},
										"description": "The GET /payment_methods/{id} call allows your platform to look up a specific payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete a payment method",
							"id": "fe0dff0e-4e44-44d1-bc55-47bf31e1f7ba",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payment_methods/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payment_methods",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the payment method, generated by WePay when the payment method is created."
										}
									]
								},
								"description": "The DELETE /payment_methods/{id} call allows your platform to delete a single payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
							},
							"response": [
								{
									"id": "d295e6dc-1abe-4349-8eaa-ffb0f2ea0b00",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payment_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment method, generated by WePay when the payment method is created."
												}
											]
										},
										"description": "The DELETE /payment_methods/{id} call allows your platform to delete a single payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"type\": \"<string>\",\n  \"status\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"credit_card\": {\n    \"card_holder\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expiration_month\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expiration_year\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"card_on_file\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recurring\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cvv_provided\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"auto_update\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"backing_display_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"bin\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"card_brand\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"card_entry_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"display_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"virtual_terminal_mode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payment_bank_us\": {\n    \"account_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"account_holder\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
								},
								{
									"id": "440dc09f-a88b-4d8d-86cc-9cd42a51db76",
									"name": "INVALID_PARAMS, PAYMENT_METHOD_CANNOT_BE_DELETED",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payment_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment method, generated by WePay when the payment method is created."
												}
											]
										},
										"description": "The DELETE /payment_methods/{id} call allows your platform to delete a single payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "a6ca7de7-0a73-481c-aa34-0c03daa6e0c9",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payment_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment method, generated by WePay when the payment method is created."
												}
											]
										},
										"description": "The DELETE /payment_methods/{id} call allows your platform to delete a single payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "b99384f6-12a8-4a84-8aea-5a590fdca826",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payment_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payment method, generated by WePay when the payment method is created."
												}
											]
										},
										"description": "The DELETE /payment_methods/{id} call allows your platform to delete a single payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Verify a payment method",
							"id": "2531aeca-3f6e-4e69-b653-49aa94e6b1e7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"microdeposits\": [\n    10,\n    55\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payment_methods/:id/verify_bank_deposits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payment_methods",
										":id",
										"verify_bank_deposits"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) "
										}
									]
								},
								"description": "The POST /payment_methods/{id}/verify_bank_deposits call allows your platform to verify a payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
							},
							"response": [
								{
									"id": "fd983b52-2c63-449a-8a5f-45dbf361462a",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"microdeposits\": [\n    10,\n    55\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payment_methods/:id/verify_bank_deposits",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment_methods",
												":id",
												"verify_bank_deposits"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The POST /payment_methods/{id}/verify_bank_deposits call allows your platform to verify a payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"type\": \"<string>\",\n  \"status\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"credit_card\": {\n    \"card_holder\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expiration_month\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expiration_year\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"card_on_file\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recurring\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cvv_provided\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"auto_update\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"backing_display_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"bin\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"card_brand\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"card_entry_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"display_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"virtual_terminal_mode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payment_bank_us\": {\n    \"account_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"account_holder\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
								},
								{
									"id": "37d2271f-8e75-418d-a340-33e82d91b1e0",
									"name": "INVALID_PARAMS, PAYMENT_METHOD_CANNOT_BE_VERIFIED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"microdeposits\": [\n    10,\n    55\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payment_methods/:id/verify_bank_deposits",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment_methods",
												":id",
												"verify_bank_deposits"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The POST /payment_methods/{id}/verify_bank_deposits call allows your platform to verify a payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "c4cd86f3-ec36-43af-a3e0-ad6847c5f9e3",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"microdeposits\": [\n    10,\n    55\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payment_methods/:id/verify_bank_deposits",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment_methods",
												":id",
												"verify_bank_deposits"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The POST /payment_methods/{id}/verify_bank_deposits call allows your platform to verify a payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "731f788a-c097-4c67-80ad-b9c7251ec4f3",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"microdeposits\": [\n    10,\n    55\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payment_methods/:id/verify_bank_deposits",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment_methods",
												":id",
												"verify_bank_deposits"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "The POST /payment_methods/{id}/verify_bank_deposits call allows your platform to verify a payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "0195c760-3ba5-4eed-87af-549b29366f44"
				},
				{
					"name": "Create a payment method",
					"id": "52ee706c-6d16-46ad-a2b2-66e71f2e3af2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
								"key": "WePay-Risk-Token",
								"value": "in sed commodo"
							},
							{
								"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
								"key": "Client-IP",
								"value": "in sed commodo"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"credit_card\": {\n    \"auto_update\": false,\n    \"card_holder\": {\n      \"address\": {\n        \"country\": \"US\",\n        \"postal_code\": \"94025\"\n      },\n      \"email\": \"example@wepay.com\",\n      \"holder_name\": \"John Snow\"\n    },\n    \"card_number\": \"5496198584584769\",\n    \"cvv\": \"007\",\n    \"expiration_month\": 4,\n    \"expiration_year\": 2020,\n    \"trigger_verification\": true,\n    \"virtual_terminal_mode\": \"mobile\",\n    \"card_on_file\": false,\n    \"recurring\": false\n  },\n  \"custom_data\": {\n    \"my_key\": \"invoice #54321\"\n  },\n  \"type\": \"credit_card\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/payment_methods",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payment_methods"
							]
						},
						"description": "The POST /payment_methods call allows your platform to create a payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
					},
					"response": [
						{
							"id": "e5fc2a87-60e0-432f-b238-5c82dbea5967",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"credit_card\": {\n    \"auto_update\": false,\n    \"card_holder\": {\n      \"address\": {\n        \"country\": \"US\",\n        \"postal_code\": \"94025\"\n      },\n      \"email\": \"example@wepay.com\",\n      \"holder_name\": \"John Snow\"\n    },\n    \"card_number\": \"5496198584584769\",\n    \"cvv\": \"007\",\n    \"expiration_month\": 4,\n    \"expiration_year\": 2020,\n    \"trigger_verification\": true,\n    \"virtual_terminal_mode\": \"mobile\",\n    \"card_on_file\": false,\n    \"recurring\": false\n  },\n  \"custom_data\": {\n    \"my_key\": \"invoice #54321\"\n  },\n  \"type\": \"credit_card\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payment_methods",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payment_methods"
									]
								},
								"description": "The POST /payment_methods call allows your platform to create a payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"type\": \"<string>\",\n  \"status\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"credit_card\": {\n    \"card_holder\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expiration_month\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expiration_year\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"card_on_file\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recurring\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cvv_provided\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"auto_update\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"backing_display_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"bin\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"card_brand\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"card_entry_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"display_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"virtual_terminal_mode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payment_bank_us\": {\n    \"account_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"account_holder\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
						},
						{
							"id": "3e6a3f28-63a5-4596-94d7-b0b293e5e104",
							"name": "INVALID_PARAMS, MERCHANT_ACCOUNT_CANNOT_ACCEPT_PAYMENTS",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"credit_card\": {\n    \"auto_update\": false,\n    \"card_holder\": {\n      \"address\": {\n        \"country\": \"US\",\n        \"postal_code\": \"94025\"\n      },\n      \"email\": \"example@wepay.com\",\n      \"holder_name\": \"John Snow\"\n    },\n    \"card_number\": \"5496198584584769\",\n    \"cvv\": \"007\",\n    \"expiration_month\": 4,\n    \"expiration_year\": 2020,\n    \"trigger_verification\": true,\n    \"virtual_terminal_mode\": \"mobile\",\n    \"card_on_file\": false,\n    \"recurring\": false\n  },\n  \"custom_data\": {\n    \"my_key\": \"invoice #54321\"\n  },\n  \"type\": \"credit_card\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payment_methods",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payment_methods"
									]
								},
								"description": "The POST /payment_methods call allows your platform to create a payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "4ac84617-07d0-478d-812d-4c570f157cf2",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"credit_card\": {\n    \"auto_update\": false,\n    \"card_holder\": {\n      \"address\": {\n        \"country\": \"US\",\n        \"postal_code\": \"94025\"\n      },\n      \"email\": \"example@wepay.com\",\n      \"holder_name\": \"John Snow\"\n    },\n    \"card_number\": \"5496198584584769\",\n    \"cvv\": \"007\",\n    \"expiration_month\": 4,\n    \"expiration_year\": 2020,\n    \"trigger_verification\": true,\n    \"virtual_terminal_mode\": \"mobile\",\n    \"card_on_file\": false,\n    \"recurring\": false\n  },\n  \"custom_data\": {\n    \"my_key\": \"invoice #54321\"\n  },\n  \"type\": \"credit_card\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payment_methods",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payment_methods"
									]
								},
								"description": "The POST /payment_methods call allows your platform to create a payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "28af82b6-16b9-4157-9c54-0521d407ed7e",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"credit_card\": {\n    \"auto_update\": false,\n    \"card_holder\": {\n      \"address\": {\n        \"country\": \"US\",\n        \"postal_code\": \"94025\"\n      },\n      \"email\": \"example@wepay.com\",\n      \"holder_name\": \"John Snow\"\n    },\n    \"card_number\": \"5496198584584769\",\n    \"cvv\": \"007\",\n    \"expiration_month\": 4,\n    \"expiration_year\": 2020,\n    \"trigger_verification\": true,\n    \"virtual_terminal_mode\": \"mobile\",\n    \"card_on_file\": false,\n    \"recurring\": false\n  },\n  \"custom_data\": {\n    \"my_key\": \"invoice #54321\"\n  },\n  \"type\": \"credit_card\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payment_methods",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payment_methods"
									]
								},
								"description": "The POST /payment_methods call allows your platform to create a payment method. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a collection of payment methods",
					"id": "a0ce80b4-92b4-4deb-bf4f-4bb2f402047d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/payment_methods?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&card_brand=amex&card_last_four=in sed commodo&bank_routing_number=in sed commodo&bank_last_four=in sed commodo&type=payment_bank_us",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payment_methods"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements from this page."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
								},
								{
									"key": "create_time_start",
									"value": "66825797",
									"description": "The timestamp for the start of the search window."
								},
								{
									"key": "create_time_end",
									"value": "66825797",
									"description": "The timestamp for the end of the search window."
								},
								{
									"key": "card_brand",
									"value": "amex",
									"description": "The brand of the card to look up. Possible values include: `amex`, `discover`, `mastercard`, `visa`."
								},
								{
									"key": "card_last_four",
									"value": "in sed commodo",
									"description": "The last four digits of the card to look up."
								},
								{
									"key": "bank_routing_number",
									"value": "in sed commodo",
									"description": "The routing number of the bank to look up."
								},
								{
									"key": "bank_last_four",
									"value": "in sed commodo",
									"description": "The last four numbers of the bank account. **Note:** If you have verified your account via Plaid, this might be the last four numbers of your tokenized bank account number (TAN)."
								},
								{
									"key": "type",
									"value": "payment_bank_us",
									"description": "The type of payment_method that should be searched. Possible values include: `credit_card`, `payment_bank_us`. Required unless \"page\" is provided."
								}
							]
						},
						"description": "The GET /payment_methods call allows your platform to look up a collection of payment methods. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
					},
					"response": [
						{
							"id": "4037b262-1bfb-421a-bf51-c9af94382dd6",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payment_methods?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&card_brand=amex&card_last_four=in sed commodo&bank_routing_number=in sed commodo&bank_last_four=in sed commodo&type=payment_bank_us",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payment_methods"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "card_brand",
											"value": "amex",
											"description": "The brand of the card to look up. Possible values include: `amex`, `discover`, `mastercard`, `visa`."
										},
										{
											"key": "card_last_four",
											"value": "in sed commodo",
											"description": "The last four digits of the card to look up."
										},
										{
											"key": "bank_routing_number",
											"value": "in sed commodo",
											"description": "The routing number of the bank to look up."
										},
										{
											"key": "bank_last_four",
											"value": "in sed commodo",
											"description": "The last four numbers of the bank account. **Note:** If you have verified your account via Plaid, this might be the last four numbers of your tokenized bank account number (TAN)."
										},
										{
											"key": "type",
											"value": "payment_bank_us",
											"description": "The type of payment_method that should be searched. Possible values include: `credit_card`, `payment_bank_us`. Required unless \"page\" is provided."
										}
									]
								},
								"description": "The GET /payment_methods call allows your platform to look up a collection of payment methods. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"previous\": \"<string>\",\n  \"next\": \"<string>\",\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "9c791f8c-13df-44ca-bdb5-bd06120a4224",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payment_methods?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&card_brand=amex&card_last_four=in sed commodo&bank_routing_number=in sed commodo&bank_last_four=in sed commodo&type=payment_bank_us",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payment_methods"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "card_brand",
											"value": "amex",
											"description": "The brand of the card to look up. Possible values include: `amex`, `discover`, `mastercard`, `visa`."
										},
										{
											"key": "card_last_four",
											"value": "in sed commodo",
											"description": "The last four digits of the card to look up."
										},
										{
											"key": "bank_routing_number",
											"value": "in sed commodo",
											"description": "The routing number of the bank to look up."
										},
										{
											"key": "bank_last_four",
											"value": "in sed commodo",
											"description": "The last four numbers of the bank account. **Note:** If you have verified your account via Plaid, this might be the last four numbers of your tokenized bank account number (TAN)."
										},
										{
											"key": "type",
											"value": "payment_bank_us",
											"description": "The type of payment_method that should be searched. Possible values include: `credit_card`, `payment_bank_us`. Required unless \"page\" is provided."
										}
									]
								},
								"description": "The GET /payment_methods call allows your platform to look up a collection of payment methods. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "4b2a3ff4-2b20-40b1-a8fc-6ca7ad098eb9",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payment_methods?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&card_brand=amex&card_last_four=in sed commodo&bank_routing_number=in sed commodo&bank_last_four=in sed commodo&type=payment_bank_us",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payment_methods"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "card_brand",
											"value": "amex",
											"description": "The brand of the card to look up. Possible values include: `amex`, `discover`, `mastercard`, `visa`."
										},
										{
											"key": "card_last_four",
											"value": "in sed commodo",
											"description": "The last four digits of the card to look up."
										},
										{
											"key": "bank_routing_number",
											"value": "in sed commodo",
											"description": "The routing number of the bank to look up."
										},
										{
											"key": "bank_last_four",
											"value": "in sed commodo",
											"description": "The last four numbers of the bank account. **Note:** If you have verified your account via Plaid, this might be the last four numbers of your tokenized bank account number (TAN)."
										},
										{
											"key": "type",
											"value": "payment_bank_us",
											"description": "The type of payment_method that should be searched. Possible values include: `credit_card`, `payment_bank_us`. Required unless \"page\" is provided."
										}
									]
								},
								"description": "The GET /payment_methods call allows your platform to look up a collection of payment methods. Payment methods represent payment data like credit cards and bank accounts, and allow your platform to charge and accept money from a payer."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "3255107e-5e16-4de4-9203-2d1fcd17acc8"
		},
		{
			"name": "payouts",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Update a payout",
							"id": "8ef01ea0-f914-4a76-a747-ce15c8f08aaf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"custom_data\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payouts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payouts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the payout, generated by WePay when the payout is created."
										}
									]
								},
								"description": "The POST /payouts/{id} call allows your platform to update and add custom data to a payout. Payouts allow your merchants to receive their funds from your platform."
							},
							"response": [
								{
									"id": "e8a23b5b-0242-4c68-a7cd-c090e9e8f0ee",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payouts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payouts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payout, generated by WePay when the payout is created."
												}
											]
										},
										"description": "The POST /payouts/{id} call allows your platform to update and add custom data to a payout. Payouts allow your merchants to receive their funds from your platform."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"amount\": \"<integer>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"complete_time\": \"<long>\",\n  \"create_time\": \"<long>\",\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"failure_reason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payout_method\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"pending_reasons\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"status\": \"<string>\",\n  \"txnr_failure\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_payout\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "3ac9da11-72c7-4244-9a88-9921b6f2a5ce",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payouts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payouts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payout, generated by WePay when the payout is created."
												}
											]
										},
										"description": "The POST /payouts/{id} call allows your platform to update and add custom data to a payout. Payouts allow your merchants to receive their funds from your platform."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "59c09002-1a4d-4005-a7ad-de3f4f765072",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payouts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payouts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payout, generated by WePay when the payout is created."
												}
											]
										},
										"description": "The POST /payouts/{id} call allows your platform to update and add custom data to a payout. Payouts allow your merchants to receive their funds from your platform."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "376aa25a-a7b3-41fa-b6db-b190c3f914b5",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payouts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payouts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payout, generated by WePay when the payout is created."
												}
											]
										},
										"description": "The POST /payouts/{id} call allows your platform to update and add custom data to a payout. Payouts allow your merchants to receive their funds from your platform."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get a payout",
							"id": "3ba518b0-e555-4861-8855-c65ed2de2209",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payouts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payouts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the payout, generated by WePay when the payout is created."
										}
									]
								},
								"description": "The GET /payouts/{id} call allows your platform to look up a single payout. Payouts allow your merchants to receive their funds from your platform."
							},
							"response": [
								{
									"id": "32e200e9-79d6-4160-acf7-5991722b4126",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payouts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payouts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payout, generated by WePay when the payout is created."
												}
											]
										},
										"description": "The GET /payouts/{id} call allows your platform to look up a single payout. Payouts allow your merchants to receive their funds from your platform."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"amount\": \"<integer>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"complete_time\": \"<long>\",\n  \"create_time\": \"<long>\",\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"failure_reason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payout_method\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"pending_reasons\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"status\": \"<string>\",\n  \"txnr_failure\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_payout\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "bbf82483-29bc-497f-a8cc-27f15a80096f",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payouts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payouts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payout, generated by WePay when the payout is created."
												}
											]
										},
										"description": "The GET /payouts/{id} call allows your platform to look up a single payout. Payouts allow your merchants to receive their funds from your platform."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "8866507c-2d9c-4649-8f19-582c1e43e0b4",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payouts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payouts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payout, generated by WePay when the payout is created."
												}
											]
										},
										"description": "The GET /payouts/{id} call allows your platform to look up a single payout. Payouts allow your merchants to receive their funds from your platform."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "2c43a62c-7d1d-4f74-96eb-a33328a8e32d",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payouts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payouts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the payout, generated by WePay when the payout is created."
												}
											]
										},
										"description": "The GET /payouts/{id} call allows your platform to look up a single payout. Payouts allow your merchants to receive their funds from your platform."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "1e05ff2f-f72e-428e-97eb-4125d9adabe8"
				},
				{
					"name": "Get a collection of payouts",
					"id": "73624d5f-e51d-4ae6-8718-197e37413a54",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/payouts?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&payout_method_type=paper_check&payout_method_id=in sed commodo&status=failed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payouts"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements from this page."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
								},
								{
									"key": "create_time_start",
									"value": "66825797",
									"description": "The timestamp for the start of the search window."
								},
								{
									"key": "create_time_end",
									"value": "66825797",
									"description": "The timestamp for the end of the search window."
								},
								{
									"key": "owner_id",
									"value": "in sed commodo",
									"description": "Return elements owned by this resource instance."
								},
								{
									"key": "payout_method_type",
									"value": "paper_check",
									"description": "Payout method used to receive payout."
								},
								{
									"key": "payout_method_id",
									"value": "in sed commodo",
									"description": "ID of the payout method used to receive payout."
								},
								{
									"key": "status",
									"value": "failed",
									"description": "Status of the payout."
								}
							]
						},
						"description": "The GET /payouts call allows your platform to look up a collection of payouts. Payouts allow your merchants to receive their funds from your platform."
					},
					"response": [
						{
							"id": "a77cb91e-dfc0-4c45-9120-0fb2667e4289",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payouts?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&payout_method_type=paper_check&payout_method_id=in sed commodo&status=failed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payouts"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										},
										{
											"key": "payout_method_type",
											"value": "paper_check",
											"description": "Payout method used to receive payout."
										},
										{
											"key": "payout_method_id",
											"value": "in sed commodo",
											"description": "ID of the payout method used to receive payout."
										},
										{
											"key": "status",
											"value": "failed",
											"description": "Status of the payout."
										}
									]
								},
								"description": "The GET /payouts call allows your platform to look up a collection of payouts. Payouts allow your merchants to receive their funds from your platform."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"previous\": \"<string>\",\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "b94f5b80-be1c-4b3e-b526-a2e70d8d0548",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payouts?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&payout_method_type=paper_check&payout_method_id=in sed commodo&status=failed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payouts"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										},
										{
											"key": "payout_method_type",
											"value": "paper_check",
											"description": "Payout method used to receive payout."
										},
										{
											"key": "payout_method_id",
											"value": "in sed commodo",
											"description": "ID of the payout method used to receive payout."
										},
										{
											"key": "status",
											"value": "failed",
											"description": "Status of the payout."
										}
									]
								},
								"description": "The GET /payouts call allows your platform to look up a collection of payouts. Payouts allow your merchants to receive their funds from your platform."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "0d499268-eabe-406e-b001-033267d139fa",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payouts?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&payout_method_type=paper_check&payout_method_id=in sed commodo&status=failed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payouts"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										},
										{
											"key": "payout_method_type",
											"value": "paper_check",
											"description": "Payout method used to receive payout."
										},
										{
											"key": "payout_method_id",
											"value": "in sed commodo",
											"description": "ID of the payout method used to receive payout."
										},
										{
											"key": "status",
											"value": "failed",
											"description": "Status of the payout."
										}
									]
								},
								"description": "The GET /payouts call allows your platform to look up a collection of payouts. Payouts allow your merchants to receive their funds from your platform."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "dd4783da-fb7b-488c-aa1c-42a90619accd",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payouts?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&payout_method_type=paper_check&payout_method_id=in sed commodo&status=failed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payouts"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										},
										{
											"key": "payout_method_type",
											"value": "paper_check",
											"description": "Payout method used to receive payout."
										},
										{
											"key": "payout_method_id",
											"value": "in sed commodo",
											"description": "ID of the payout method used to receive payout."
										},
										{
											"key": "status",
											"value": "failed",
											"description": "Status of the payout."
										}
									]
								},
								"description": "The GET /payouts call allows your platform to look up a collection of payouts. Payouts allow your merchants to receive their funds from your platform."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "ab1d29e1-c953-4b84-b987-0a047e9e0a77"
		},
		{
			"name": "payout_methods",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Update a payout method",
							"id": "9315ac4a-d184-4b1c-91b8-bbeaa75ce670",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"custom_data\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payout_methods/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payout_methods",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) The ID of the payout method, generated by WePay when the payout method is created."
										}
									]
								},
								"description": "The POST /payout_methods/{id}  call allows your platform to update and add custom data to a payout method. Payout methods represent payout targets, such as bank accounts."
							},
							"response": [
								{
									"id": "05858e5c-798d-4da1-b7b9-3f8e0028059f",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "Client-IP",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payout_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payout_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) The ID of the payout method, generated by WePay when the payout method is created."
												}
											]
										},
										"description": "The POST /payout_methods/{id}  call allows your platform to update and add custom data to a payout method. Payout methods represent payout targets, such as bank accounts."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": \"<string>\",\n  \"path\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"nickname\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"paper_check\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"memo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"payout_bank_ca\": {\n    \"account_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"payout_bank_gb\": {\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"payout_bank_us\": {\n    \"account_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": \"<string>\",\n  \"type\": \"<string>\"\n}"
								},
								{
									"id": "9be4e7ef-1357-4b06-aed5-f539daff4bc5",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "Client-IP",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payout_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payout_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) The ID of the payout method, generated by WePay when the payout method is created."
												}
											]
										},
										"description": "The POST /payout_methods/{id}  call allows your platform to update and add custom data to a payout method. Payout methods represent payout targets, such as bank accounts."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "d6f76a3a-9285-4af3-a050-e975713b0bdb",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "Client-IP",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payout_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payout_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) The ID of the payout method, generated by WePay when the payout method is created."
												}
											]
										},
										"description": "The POST /payout_methods/{id}  call allows your platform to update and add custom data to a payout method. Payout methods represent payout targets, such as bank accounts."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "a08784e5-9f68-4c2f-9d19-e39fca11ee4f",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "Client-IP",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payout_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payout_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) The ID of the payout method, generated by WePay when the payout method is created."
												}
											]
										},
										"description": "The POST /payout_methods/{id}  call allows your platform to update and add custom data to a payout method. Payout methods represent payout targets, such as bank accounts."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get a payout method",
							"id": "f7a407fc-dd5b-49ea-826a-ad6c20e40862",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payout_methods/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payout_methods",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) The ID of the payout method, generated by WePay when the payout method is created."
										}
									]
								},
								"description": "The GET /payout_methods/{id} call allows your platform to look up a single payout method. Payout methods represent payout targets, such as bank accounts."
							},
							"response": [
								{
									"id": "57b21117-104f-4541-91c1-e76c9059edfe",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payout_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payout_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) The ID of the payout method, generated by WePay when the payout method is created."
												}
											]
										},
										"description": "The GET /payout_methods/{id} call allows your platform to look up a single payout method. Payout methods represent payout targets, such as bank accounts."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": \"<string>\",\n  \"path\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"nickname\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"paper_check\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"memo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"payout_bank_ca\": {\n    \"account_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"payout_bank_gb\": {\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"payout_bank_us\": {\n    \"account_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": \"<string>\",\n  \"type\": \"<string>\"\n}"
								},
								{
									"id": "71bb0f34-3cd3-418f-9e1b-b51cc0ab04c2",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payout_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payout_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) The ID of the payout method, generated by WePay when the payout method is created."
												}
											]
										},
										"description": "The GET /payout_methods/{id} call allows your platform to look up a single payout method. Payout methods represent payout targets, such as bank accounts."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "f2dc116b-d6ea-488c-be30-a3bea37e465d",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payout_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payout_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) The ID of the payout method, generated by WePay when the payout method is created."
												}
											]
										},
										"description": "The GET /payout_methods/{id} call allows your platform to look up a single payout method. Payout methods represent payout targets, such as bank accounts."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "adaef748-eb0b-4c8c-8bf6-3dc79a247069",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payout_methods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payout_methods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) The ID of the payout method, generated by WePay when the payout method is created."
												}
											]
										},
										"description": "The GET /payout_methods/{id} call allows your platform to look up a single payout method. Payout methods represent payout targets, such as bank accounts."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "1bc4fa26-230b-486a-b8b3-6084afb53e69"
				},
				{
					"name": "Create a payout method",
					"id": "65d586cb-4d72-4a77-a533-2e346bef6269",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
								"key": "WePay-Risk-Token",
								"value": "in sed commodo"
							},
							{
								"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
								"key": "Client-IP",
								"value": "in sed commodo"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custom_data\": {\n    \"my_key\": \"invoice #54321\"\n  },\n  \"legal_entity_id\": \"42d2c2f1-5aeb-4929-944f-e220b4c9425b\",\n  \"nickname\": \"bofa checking 6789\",\n  \"payout_bank_us\": {\n    \"account_number\": \"123456789\",\n    \"account_type\": \"checking\",\n    \"routing_number\": \"987654321\"\n  },\n  \"type\": \"payout_bank_us\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/payout_methods",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payout_methods"
							]
						},
						"description": "The POST /payout_methods call allows your platform to create a new payout method owned by a legal entity. Payout methods represent payout targets, such as bank accounts."
					},
					"response": [
						{
							"id": "a5e7f601-67b5-4489-80e6-f8247bcedd9e",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"custom_data\": {\n    \"my_key\": \"invoice #54321\"\n  },\n  \"legal_entity_id\": \"42d2c2f1-5aeb-4929-944f-e220b4c9425b\",\n  \"nickname\": \"bofa checking 6789\",\n  \"payout_bank_us\": {\n    \"account_number\": \"123456789\",\n    \"account_type\": \"checking\",\n    \"routing_number\": \"987654321\"\n  },\n  \"type\": \"payout_bank_us\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payout_methods",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payout_methods"
									]
								},
								"description": "The POST /payout_methods call allows your platform to create a new payout method owned by a legal entity. Payout methods represent payout targets, such as bank accounts."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": \"<string>\",\n  \"path\": \"<string>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"nickname\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"paper_check\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"memo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"payout_bank_ca\": {\n    \"account_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"payout_bank_gb\": {\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"payout_bank_us\": {\n    \"account_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last_four\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": \"<string>\",\n  \"type\": \"<string>\"\n}"
						},
						{
							"id": "49bf224a-4b9b-4732-b455-75a0720f5ebe",
							"name": "INVALID_PARAMS, MERCHANT_ACCOUNT_CANNOT_ACCEPT_PAYMENTS",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"custom_data\": {\n    \"my_key\": \"invoice #54321\"\n  },\n  \"legal_entity_id\": \"42d2c2f1-5aeb-4929-944f-e220b4c9425b\",\n  \"nickname\": \"bofa checking 6789\",\n  \"payout_bank_us\": {\n    \"account_number\": \"123456789\",\n    \"account_type\": \"checking\",\n    \"routing_number\": \"987654321\"\n  },\n  \"type\": \"payout_bank_us\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payout_methods",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payout_methods"
									]
								},
								"description": "The POST /payout_methods call allows your platform to create a new payout method owned by a legal entity. Payout methods represent payout targets, such as bank accounts."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "e59df713-db6b-4cba-af53-c30de5c6114d",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"custom_data\": {\n    \"my_key\": \"invoice #54321\"\n  },\n  \"legal_entity_id\": \"42d2c2f1-5aeb-4929-944f-e220b4c9425b\",\n  \"nickname\": \"bofa checking 6789\",\n  \"payout_bank_us\": {\n    \"account_number\": \"123456789\",\n    \"account_type\": \"checking\",\n    \"routing_number\": \"987654321\"\n  },\n  \"type\": \"payout_bank_us\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payout_methods",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payout_methods"
									]
								},
								"description": "The POST /payout_methods call allows your platform to create a new payout method owned by a legal entity. Payout methods represent payout targets, such as bank accounts."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "47800929-220c-42da-8278-d624b8d26b2e",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"custom_data\": {\n    \"my_key\": \"invoice #54321\"\n  },\n  \"legal_entity_id\": \"42d2c2f1-5aeb-4929-944f-e220b4c9425b\",\n  \"nickname\": \"bofa checking 6789\",\n  \"payout_bank_us\": {\n    \"account_number\": \"123456789\",\n    \"account_type\": \"checking\",\n    \"routing_number\": \"987654321\"\n  },\n  \"type\": \"payout_bank_us\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payout_methods",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payout_methods"
									]
								},
								"description": "The POST /payout_methods call allows your platform to create a new payout method owned by a legal entity. Payout methods represent payout targets, such as bank accounts."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a collection of payout methods",
					"id": "235b5295-99d6-43cf-869a-75bf678f672b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/payout_methods?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&type=paper_check",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payout_methods"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements from this page."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
								},
								{
									"key": "create_time_start",
									"value": "66825797",
									"description": "The timestamp for the start of the search window."
								},
								{
									"key": "create_time_end",
									"value": "66825797",
									"description": "The timestamp for the end of the search window."
								},
								{
									"key": "owner_id",
									"value": "in sed commodo",
									"description": "Return elements owned by this resource instance."
								},
								{
									"key": "type",
									"value": "paper_check",
									"description": "The type of payout method to search for. Required unless \"page\" is provided"
								}
							]
						},
						"description": "The GET /payout_methods call allows your platform to look up a collection of payout methods. Payout methods represent payout targets, such as bank accounts."
					},
					"response": [
						{
							"id": "f4362345-4161-48f5-a9a3-fb423e900bb0",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payout_methods?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&type=paper_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payout_methods"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										},
										{
											"key": "type",
											"value": "paper_check",
											"description": "The type of payout method to search for. Required unless \"page\" is provided"
										}
									]
								},
								"description": "The GET /payout_methods call allows your platform to look up a collection of payout methods. Payout methods represent payout targets, such as bank accounts."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"previous\": \"<string>\",\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "7c646f07-6982-4d65-b629-5c0aa01c00c3",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payout_methods?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&type=paper_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payout_methods"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										},
										{
											"key": "type",
											"value": "paper_check",
											"description": "The type of payout method to search for. Required unless \"page\" is provided"
										}
									]
								},
								"description": "The GET /payout_methods call allows your platform to look up a collection of payout methods. Payout methods represent payout targets, such as bank accounts."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "b0ba2bd9-2429-4912-ad0b-38d16c2cf781",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payout_methods?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&type=paper_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payout_methods"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										},
										{
											"key": "type",
											"value": "paper_check",
											"description": "The type of payout method to search for. Required unless \"page\" is provided"
										}
									]
								},
								"description": "The GET /payout_methods call allows your platform to look up a collection of payout methods. Payout methods represent payout targets, such as bank accounts."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "6788d865-eea7-417e-bc66-b396c80316db",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payout_methods?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&type=paper_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payout_methods"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										},
										{
											"key": "type",
											"value": "paper_check",
											"description": "The type of payout method to search for. Required unless \"page\" is provided"
										}
									]
								},
								"description": "The GET /payout_methods call allows your platform to look up a collection of payout methods. Payout methods represent payout targets, such as bank accounts."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "e8b434d2-896a-4b5d-8abe-3d0f57dfe163"
		},
		{
			"name": "rbits",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get an rbit",
							"id": "60b58b06-b579-46f5-a9f9-fd783ceb987a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rbits/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rbits",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the rbit, generated by WePay when the rbit is created."
										}
									]
								},
								"description": "The GET /rbits/{id} call allows your platform to look up a single rbit. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
							},
							"response": [
								{
									"id": "f7087360-02fb-481a-b7f9-aa6be3720a61",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rbits/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rbits",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the rbit, generated by WePay when the rbit is created."
												}
											]
										},
										"description": "The GET /rbits/{id} call allows your platform to look up a single rbit. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"id\": \"<string>\",\n    \"resource\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"path\": \"<string>\"\n  },\n  \"resource\": \"<string>\",\n  \"create_time\": \"<long>\",\n  \"receive_time\": \"<long>\",\n  \"type\": \"<string>\",\n  \"source\": \"<string>\",\n  \"state\": \"<string>\",\n  \"address\": {\n    \"origin_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"normalized_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"normalized_address_status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"normalized_source\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"api_version\": \"<string>\",\n  \"auto_billing\": {\n    \"autobill_setup_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payment_frequency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payment_number\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"setup_by\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"total_payments_scheduled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"business_description\": {\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"number_of_employees\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sales_tax_liability_flag\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"business_name\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"external_account\": {\n    \"is_partner_account\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"account_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"connections\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"create_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"feedback_average_score\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"feedback_score_percent_positive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"feedback_scores_provided\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"followers\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"following\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"modify_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"user_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"fundraising_event\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"campaign_category\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"campaign_team\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fundraising_goal\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"giving_deadline\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"photo_uris\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"fundraising_update\": {\n    \"campaign_page_update\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"campaign_title_update\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"industry_code\": {\n    \"code_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"industry_detail\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"mfa\": {\n    \"mfa_action\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associated_phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"partner_service\": {\n    \"service_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"modules_used\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"service_monthly_cost\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"person\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date_of_birth\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"role\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"phone\": {\n    \"country_code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone_number\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"project\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"billing_method\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"completion_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"flat_estimate_amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hourly_estimate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"revenue\": {\n    \"revenue_amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"revenue_fraction\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"transaction_details\": {\n    \"discount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"itemized_receipt\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"note\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchase_order_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"receipt_uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"service_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shipping_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shipping_info\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"terms_text\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"terms_uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"website\": {\n    \"uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
								},
								{
									"id": "a827fdec-ba6d-4c92-9b43-e8e75ac79ffb",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rbits/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rbits",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the rbit, generated by WePay when the rbit is created."
												}
											]
										},
										"description": "The GET /rbits/{id} call allows your platform to look up a single rbit. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "163e3bb1-a69a-46e2-be89-a84a11ba29c2",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rbits/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rbits",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the rbit, generated by WePay when the rbit is created."
												}
											]
										},
										"description": "The GET /rbits/{id} call allows your platform to look up a single rbit. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "ed33c6b5-5f9c-4522-ae9b-49249547473b",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rbits/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rbits",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the rbit, generated by WePay when the rbit is created."
												}
											]
										},
										"description": "The GET /rbits/{id} call allows your platform to look up a single rbit. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete an rbit",
							"id": "aa6d564b-8109-4b4a-9813-4141f2cb8999",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rbits/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rbits",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the rbit, generated by WePay when the rbit is created."
										}
									]
								},
								"description": "The DELETE /rbits call allows you to delete an rbit. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
							},
							"response": [
								{
									"id": "ac62a2f3-8e8e-4df2-9992-7c4d2c1e9517",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rbits/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rbits",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the rbit, generated by WePay when the rbit is created."
												}
											]
										},
										"description": "The DELETE /rbits call allows you to delete an rbit. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"id\": \"<string>\",\n    \"resource\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"path\": \"<string>\"\n  },\n  \"resource\": \"<string>\",\n  \"create_time\": \"<long>\",\n  \"receive_time\": \"<long>\",\n  \"type\": \"<string>\",\n  \"source\": \"<string>\",\n  \"state\": \"<string>\",\n  \"address\": {\n    \"origin_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"normalized_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"normalized_address_status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"normalized_source\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"api_version\": \"<string>\",\n  \"auto_billing\": {\n    \"autobill_setup_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payment_frequency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payment_number\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"setup_by\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"total_payments_scheduled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"business_description\": {\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"number_of_employees\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sales_tax_liability_flag\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"business_name\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"external_account\": {\n    \"is_partner_account\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"account_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"connections\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"create_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"feedback_average_score\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"feedback_score_percent_positive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"feedback_scores_provided\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"followers\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"following\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"modify_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"user_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"fundraising_event\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"campaign_category\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"campaign_team\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fundraising_goal\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"giving_deadline\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"photo_uris\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"fundraising_update\": {\n    \"campaign_page_update\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"campaign_title_update\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"industry_code\": {\n    \"code_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"industry_detail\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"mfa\": {\n    \"mfa_action\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associated_phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"partner_service\": {\n    \"service_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"modules_used\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"service_monthly_cost\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"person\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date_of_birth\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"role\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"phone\": {\n    \"country_code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone_number\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"project\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"billing_method\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"completion_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"flat_estimate_amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hourly_estimate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"revenue\": {\n    \"revenue_amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"revenue_fraction\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"transaction_details\": {\n    \"discount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"itemized_receipt\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"note\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchase_order_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"receipt_uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"service_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shipping_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shipping_info\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"terms_text\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"terms_uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"website\": {\n    \"uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
								},
								{
									"id": "75261114-8d78-4127-81e1-897c15ac4e7b",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rbits/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rbits",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the rbit, generated by WePay when the rbit is created."
												}
											]
										},
										"description": "The DELETE /rbits call allows you to delete an rbit. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "e7c4fc6e-0ae9-4544-ab2c-407fa19e349d",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rbits/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rbits",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the rbit, generated by WePay when the rbit is created."
												}
											]
										},
										"description": "The DELETE /rbits call allows you to delete an rbit. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "be0faab8-cdc2-4a56-bc1e-864ece7eb7bf",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rbits/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rbits",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the rbit, generated by WePay when the rbit is created."
												}
											]
										},
										"description": "The DELETE /rbits call allows you to delete an rbit. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "9b007d27-9a07-4121-a2e5-cbb9c130c0b2"
				},
				{
					"name": "Create an rbit",
					"id": "c123ae9b-e547-48d2-896f-7c5c9abbcb85",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": {\n    \"origin_address\": {\n      \"city\": \"Palo Alto\",\n      \"country\": \"US\",\n      \"line1\": \"380 Portage Avenue\",\n      \"postal_code\": \"93036\",\n      \"region\": \"CA\"\n    }\n  },\n  \"associated_resource\": {\n    \"id\": \"f48cd8e6-e802-4500-a0f9-3ab6228c6f23\",\n    \"resource\": \"accounts\"\n  },\n  \"receive_time\": 1367958263,\n  \"source\": \"guidestar\",\n  \"type\": \"address\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/rbits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rbits"
							]
						},
						"description": "The POST /rbits call allows your platform to create an rbit for a user, account, or transaction. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
					},
					"response": [
						{
							"id": "ab9aacd1-6ed9-4619-b709-f543f76e6ab5",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"address\": {\n    \"origin_address\": {\n      \"city\": \"Palo Alto\",\n      \"country\": \"US\",\n      \"line1\": \"380 Portage Avenue\",\n      \"postal_code\": \"93036\",\n      \"region\": \"CA\"\n    }\n  },\n  \"associated_resource\": {\n    \"id\": \"f48cd8e6-e802-4500-a0f9-3ab6228c6f23\",\n    \"resource\": \"accounts\"\n  },\n  \"receive_time\": 1367958263,\n  \"source\": \"guidestar\",\n  \"type\": \"address\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rbits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rbits"
									]
								},
								"description": "The POST /rbits call allows your platform to create an rbit for a user, account, or transaction. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"id\": \"<string>\",\n    \"resource\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"path\": \"<string>\"\n  },\n  \"resource\": \"<string>\",\n  \"create_time\": \"<long>\",\n  \"receive_time\": \"<long>\",\n  \"type\": \"<string>\",\n  \"source\": \"<string>\",\n  \"state\": \"<string>\",\n  \"address\": {\n    \"origin_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"normalized_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"normalized_address_status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"normalized_source\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"api_version\": \"<string>\",\n  \"auto_billing\": {\n    \"autobill_setup_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payment_frequency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payment_number\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"setup_by\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"total_payments_scheduled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"business_description\": {\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"number_of_employees\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sales_tax_liability_flag\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"business_name\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"external_account\": {\n    \"is_partner_account\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"account_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"connections\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"create_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"feedback_average_score\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"feedback_score_percent_positive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"feedback_scores_provided\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"followers\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"following\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"modify_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"user_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"fundraising_event\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"campaign_category\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"campaign_team\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fundraising_goal\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"giving_deadline\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"photo_uris\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"fundraising_update\": {\n    \"campaign_page_update\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"campaign_title_update\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"industry_code\": {\n    \"code_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"industry_detail\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"mfa\": {\n    \"mfa_action\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associated_phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"partner_service\": {\n    \"service_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"modules_used\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"service_monthly_cost\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"person\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date_of_birth\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"role\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"phone\": {\n    \"country_code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone_number\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"project\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"billing_method\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"completion_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"flat_estimate_amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hourly_estimate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"revenue\": {\n    \"revenue_amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end_time\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"revenue_fraction\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"transaction_details\": {\n    \"discount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"itemized_receipt\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"note\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchase_order_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"receipt_uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"service_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shipping_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shipping_info\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"terms_text\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"terms_uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"website\": {\n    \"uri\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
						},
						{
							"id": "2fccdab2-2c50-4935-81e7-0c62d1af1d45",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"address\": {\n    \"origin_address\": {\n      \"city\": \"Palo Alto\",\n      \"country\": \"US\",\n      \"line1\": \"380 Portage Avenue\",\n      \"postal_code\": \"93036\",\n      \"region\": \"CA\"\n    }\n  },\n  \"associated_resource\": {\n    \"id\": \"f48cd8e6-e802-4500-a0f9-3ab6228c6f23\",\n    \"resource\": \"accounts\"\n  },\n  \"receive_time\": 1367958263,\n  \"source\": \"guidestar\",\n  \"type\": \"address\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rbits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rbits"
									]
								},
								"description": "The POST /rbits call allows your platform to create an rbit for a user, account, or transaction. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "1a7519d0-3baa-4d99-aa8a-8455bd046743",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"address\": {\n    \"origin_address\": {\n      \"city\": \"Palo Alto\",\n      \"country\": \"US\",\n      \"line1\": \"380 Portage Avenue\",\n      \"postal_code\": \"93036\",\n      \"region\": \"CA\"\n    }\n  },\n  \"associated_resource\": {\n    \"id\": \"f48cd8e6-e802-4500-a0f9-3ab6228c6f23\",\n    \"resource\": \"accounts\"\n  },\n  \"receive_time\": 1367958263,\n  \"source\": \"guidestar\",\n  \"type\": \"address\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rbits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rbits"
									]
								},
								"description": "The POST /rbits call allows your platform to create an rbit for a user, account, or transaction. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "b374f619-f85b-42f2-af41-2848efab5dee",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"address\": {\n    \"origin_address\": {\n      \"city\": \"Palo Alto\",\n      \"country\": \"US\",\n      \"line1\": \"380 Portage Avenue\",\n      \"postal_code\": \"93036\",\n      \"region\": \"CA\"\n    }\n  },\n  \"associated_resource\": {\n    \"id\": \"f48cd8e6-e802-4500-a0f9-3ab6228c6f23\",\n    \"resource\": \"accounts\"\n  },\n  \"receive_time\": 1367958263,\n  \"source\": \"guidestar\",\n  \"type\": \"address\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rbits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rbits"
									]
								},
								"description": "The POST /rbits call allows your platform to create an rbit for a user, account, or transaction. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a collection of rbits",
					"id": "68a8f235-b5b0-4aa1-b279-f1f3e9c98ad5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rbits?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&owner_type=in sed commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rbits"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements from this page."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
								},
								{
									"key": "create_time_start",
									"value": "66825797",
									"description": "The timestamp for the start of the search window."
								},
								{
									"key": "create_time_end",
									"value": "66825797",
									"description": "The timestamp for the end of the search window."
								},
								{
									"key": "owner_id",
									"value": "in sed commodo",
									"description": "Return elements owned by this owner ID."
								},
								{
									"key": "owner_type",
									"value": "in sed commodo",
									"description": "Return elements owned by a resource of this type. **Required** if owner_id is provided."
								}
							]
						},
						"description": "The GET /rbits call allows your platform to look up a collection of rbits. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
					},
					"response": [
						{
							"id": "cbe6eb68-fe5a-4447-a490-9b34679f6fd0",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rbits?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&owner_type=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rbits"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this owner ID."
										},
										{
											"key": "owner_type",
											"value": "in sed commodo",
											"description": "Return elements owned by a resource of this type. **Required** if owner_id is provided."
										}
									]
								},
								"description": "The GET /rbits call allows your platform to look up a collection of rbits. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"path\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resource\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"create_time\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"receive_time\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"state\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"api_version\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"auto_billing\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"business_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"business_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"external_account\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fundraising_event\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fundraising_update\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"industry_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mfa\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"partner_service\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"person\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"project\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"revenue\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"transaction_details\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"website\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"path\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resource\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"create_time\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"receive_time\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"state\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"api_version\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"auto_billing\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"business_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"business_name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"external_account\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fundraising_event\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fundraising_update\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"industry_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mfa\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"partner_service\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"person\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"project\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"revenue\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"transaction_details\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"website\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"next\": \"<string>\",\n  \"previous\": \"<string>\",\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "6c756883-0e57-4d58-b3cb-fa1e0392dd84",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rbits?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&owner_type=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rbits"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this owner ID."
										},
										{
											"key": "owner_type",
											"value": "in sed commodo",
											"description": "Return elements owned by a resource of this type. **Required** if owner_id is provided."
										}
									]
								},
								"description": "The GET /rbits call allows your platform to look up a collection of rbits. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "50e9650d-c87f-43ab-85cc-22117e731112",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rbits?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&owner_type=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rbits"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this owner ID."
										},
										{
											"key": "owner_type",
											"value": "in sed commodo",
											"description": "Return elements owned by a resource of this type. **Required** if owner_id is provided."
										}
									]
								},
								"description": "The GET /rbits call allows your platform to look up a collection of rbits. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "f4ff41e4-0af3-46c0-8349-6d8119090877",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rbits?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&owner_type=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rbits"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this owner ID."
										},
										{
											"key": "owner_type",
											"value": "in sed commodo",
											"description": "Return elements owned by a resource of this type. **Required** if owner_id is provided."
										}
									]
								},
								"description": "The GET /rbits call allows your platform to look up a collection of rbits. The rbits resource provides a way to communicate risk-related account and transaction level information between an application and WePay. An rbit contains risk related information about your users, their accounts, and their transactions."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "17d13c51-6d87-410a-8ffc-b778d81ac486"
		},
		{
			"name": "recoveries",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get a recovery",
							"id": "f9dced0f-163f-4c46-9e72-cca6a4d38867",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recoveries/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recoveries",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the recovery, generated by WePay when the recovery is created."
										}
									]
								},
								"description": "The GET /recoveries/{id} call allows your platform to look up information on a single recovery. If a merchant's account balance is negative, Recoveries automatically debit a merchant's Payout Method to bring the balance up to $0. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `recoveries.created` Notification event topic in order to programmatically integrate new Recoveries that WePay attempts from the merchant's Payout Method."
							},
							"response": [
								{
									"id": "14e77630-1c55-4aa6-b31c-60b89d3b5df8",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/recoveries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recoveries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the recovery, generated by WePay when the recovery is created."
												}
											]
										},
										"description": "The GET /recoveries/{id} call allows your platform to look up information on a single recovery. If a merchant's account balance is negative, Recoveries automatically debit a merchant's Payout Method to bring the balance up to $0. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `recoveries.created` Notification event topic in order to programmatically integrate new Recoveries that WePay attempts from the merchant's Payout Method."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"create_time\": \"<long>\",\n  \"complete_time\": \"<long>\",\n  \"status\": \"<string>\",\n  \"amount\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payout_method\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"pending_reasons\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"failure_reason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_recovery\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_failure\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "70e0ed9c-9b51-4216-a358-a111ddfa4b0c",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/recoveries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recoveries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the recovery, generated by WePay when the recovery is created."
												}
											]
										},
										"description": "The GET /recoveries/{id} call allows your platform to look up information on a single recovery. If a merchant's account balance is negative, Recoveries automatically debit a merchant's Payout Method to bring the balance up to $0. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `recoveries.created` Notification event topic in order to programmatically integrate new Recoveries that WePay attempts from the merchant's Payout Method."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "d4e6cab4-0bb4-45f7-a53f-e047d84b0b1c",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/recoveries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recoveries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the recovery, generated by WePay when the recovery is created."
												}
											]
										},
										"description": "The GET /recoveries/{id} call allows your platform to look up information on a single recovery. If a merchant's account balance is negative, Recoveries automatically debit a merchant's Payout Method to bring the balance up to $0. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `recoveries.created` Notification event topic in order to programmatically integrate new Recoveries that WePay attempts from the merchant's Payout Method."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "f109838c-ef45-458b-b38c-ca75835853ba",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/recoveries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recoveries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the recovery, generated by WePay when the recovery is created."
												}
											]
										},
										"description": "The GET /recoveries/{id} call allows your platform to look up information on a single recovery. If a merchant's account balance is negative, Recoveries automatically debit a merchant's Payout Method to bring the balance up to $0. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `recoveries.created` Notification event topic in order to programmatically integrate new Recoveries that WePay attempts from the merchant's Payout Method."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update a recovery",
							"id": "e1e2670b-38cb-4c61-b61e-902c9cf1619f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"custom_data\": {\n    \"receipt_number\": 1258372\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recoveries/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recoveries",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the recovery, generated by WePay when the recovery is created."
										}
									]
								},
								"description": "The POST /recoveries/{id} call allows your platform to update and add custom data to a recovery. The recovery resource notifies your platform that WePay made a recovery attempt to a merchant’s bank account in order to bring their balance up to $0."
							},
							"response": [
								{
									"id": "b924c9b8-a6fb-4e56-96f1-a94fc6d851d6",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": {\n    \"receipt_number\": 1258372\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/recoveries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recoveries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the recovery, generated by WePay when the recovery is created."
												}
											]
										},
										"description": "The POST /recoveries/{id} call allows your platform to update and add custom data to a recovery. The recovery resource notifies your platform that WePay made a recovery attempt to a merchant’s bank account in order to bring their balance up to $0."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"create_time\": \"<long>\",\n  \"complete_time\": \"<long>\",\n  \"status\": \"<string>\",\n  \"amount\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payout_method\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"pending_reasons\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"failure_reason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_recovery\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_failure\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "91af035c-540d-4337-882a-0d71aa29ce82",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": {\n    \"receipt_number\": 1258372\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/recoveries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recoveries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the recovery, generated by WePay when the recovery is created."
												}
											]
										},
										"description": "The POST /recoveries/{id} call allows your platform to update and add custom data to a recovery. The recovery resource notifies your platform that WePay made a recovery attempt to a merchant’s bank account in order to bring their balance up to $0."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "2f148a81-5582-4f9a-b09d-7bc93f743439",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": {\n    \"receipt_number\": 1258372\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/recoveries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recoveries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the recovery, generated by WePay when the recovery is created."
												}
											]
										},
										"description": "The POST /recoveries/{id} call allows your platform to update and add custom data to a recovery. The recovery resource notifies your platform that WePay made a recovery attempt to a merchant’s bank account in order to bring their balance up to $0."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "661b8702-5987-46f3-930e-2893aa0dd689",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": {\n    \"receipt_number\": 1258372\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/recoveries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recoveries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the recovery, generated by WePay when the recovery is created."
												}
											]
										},
										"description": "The POST /recoveries/{id} call allows your platform to update and add custom data to a recovery. The recovery resource notifies your platform that WePay made a recovery attempt to a merchant’s bank account in order to bring their balance up to $0."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "ec0bed6b-bc7f-43e1-a58a-6f1ccacbe914"
				},
				{
					"name": "Get a collection of recoveries",
					"id": "d372c959-cf3d-429e-9f6b-69b9532e91df",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/recoveries?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&payout_method_type=paper_check&payout_method_id=in sed commodo&status=pending",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recoveries"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements from this page."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
								},
								{
									"key": "create_time_start",
									"value": "66825797",
									"description": "The timestamp for the start of the search window."
								},
								{
									"key": "create_time_end",
									"value": "66825797",
									"description": "The timestamp for the end of the search window."
								},
								{
									"key": "owner_id",
									"value": "in sed commodo",
									"description": "Return elements owned by this resource instance."
								},
								{
									"key": "payout_method_type",
									"value": "paper_check",
									"description": "Payout method used to recover funds."
								},
								{
									"key": "payout_method_id",
									"value": "in sed commodo",
									"description": "ID of the payout method used to recover funds."
								},
								{
									"key": "status",
									"value": "pending",
									"description": "Status of the recovery."
								}
							]
						},
						"description": "The GET /recoveries call allows your platform to look up a collection of recoveries. If a merchant's account balance is negative, Recoveries automatically debit a merchant's Payout Method to bring the balance up to $0. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `recoveries.created` Notification event topic in order to programmatically integrate new Recoveries that WePay attempts from the merchant's Payout Method."
					},
					"response": [
						{
							"id": "11f2a01f-ea3a-48aa-828e-c17753cdffbb",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recoveries?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&payout_method_type=paper_check&payout_method_id=in sed commodo&status=pending",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recoveries"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										},
										{
											"key": "payout_method_type",
											"value": "paper_check",
											"description": "Payout method used to recover funds."
										},
										{
											"key": "payout_method_id",
											"value": "in sed commodo",
											"description": "ID of the payout method used to recover funds."
										},
										{
											"key": "status",
											"value": "pending",
											"description": "Status of the recovery."
										}
									]
								},
								"description": "The GET /recoveries call allows your platform to look up a collection of recoveries. If a merchant's account balance is negative, Recoveries automatically debit a merchant's Payout Method to bring the balance up to $0. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `recoveries.created` Notification event topic in order to programmatically integrate new Recoveries that WePay attempts from the merchant's Payout Method."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"previous\": \"<string>\",\n  \"next\": \"<string>\",\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "2ff3a285-4c0d-425b-98ff-f865dc94a8dd",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recoveries?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&payout_method_type=paper_check&payout_method_id=in sed commodo&status=pending",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recoveries"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										},
										{
											"key": "payout_method_type",
											"value": "paper_check",
											"description": "Payout method used to recover funds."
										},
										{
											"key": "payout_method_id",
											"value": "in sed commodo",
											"description": "ID of the payout method used to recover funds."
										},
										{
											"key": "status",
											"value": "pending",
											"description": "Status of the recovery."
										}
									]
								},
								"description": "The GET /recoveries call allows your platform to look up a collection of recoveries. If a merchant's account balance is negative, Recoveries automatically debit a merchant's Payout Method to bring the balance up to $0. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `recoveries.created` Notification event topic in order to programmatically integrate new Recoveries that WePay attempts from the merchant's Payout Method."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "bb3a3ef1-5737-43dc-990e-84d0e3ff441f",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recoveries?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&payout_method_type=paper_check&payout_method_id=in sed commodo&status=pending",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recoveries"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										},
										{
											"key": "payout_method_type",
											"value": "paper_check",
											"description": "Payout method used to recover funds."
										},
										{
											"key": "payout_method_id",
											"value": "in sed commodo",
											"description": "ID of the payout method used to recover funds."
										},
										{
											"key": "status",
											"value": "pending",
											"description": "Status of the recovery."
										}
									]
								},
								"description": "The GET /recoveries call allows your platform to look up a collection of recoveries. If a merchant's account balance is negative, Recoveries automatically debit a merchant's Payout Method to bring the balance up to $0. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `recoveries.created` Notification event topic in order to programmatically integrate new Recoveries that WePay attempts from the merchant's Payout Method."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "0c69ed7a-6bda-4942-8d86-13533afa01fc",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recoveries?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&owner_id=in sed commodo&payout_method_type=paper_check&payout_method_id=in sed commodo&status=pending",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recoveries"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "Return elements owned by this resource instance."
										},
										{
											"key": "payout_method_type",
											"value": "paper_check",
											"description": "Payout method used to recover funds."
										},
										{
											"key": "payout_method_id",
											"value": "in sed commodo",
											"description": "ID of the payout method used to recover funds."
										},
										{
											"key": "status",
											"value": "pending",
											"description": "Status of the recovery."
										}
									]
								},
								"description": "The GET /recoveries call allows your platform to look up a collection of recoveries. If a merchant's account balance is negative, Recoveries automatically debit a merchant's Payout Method to bring the balance up to $0. Be sure to [subscribe](/api/latest/operation/POST_notification_preferences/) to the `recoveries.created` Notification event topic in order to programmatically integrate new Recoveries that WePay attempts from the merchant's Payout Method."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "fabbf845-d7b3-4fa6-8760-09b43d354914"
		},
		{
			"name": "refunds",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get a refund",
							"id": "cadd9f8d-aafc-49e2-a3e2-d14d69b93da8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/refunds/:id?expand=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refunds",
										":id"
									],
									"query": [
										{
											"key": "expand",
											"value": "in sed commodo",
											"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the refund, generated by WePay when the refund is created."
										}
									]
								},
								"description": "The GET /refunds/{id} call allows your platform to look up a single refund. Refunds facilitate the return of money from the merchant to the payer."
							},
							"response": [
								{
									"id": "f14fc64f-a741-4333-b1ff-2a6c0d8efa68",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/refunds/:id?expand=in sed commodo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"refunds",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "in sed commodo",
													"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the refund, generated by WePay when the refund is created."
												}
											]
										},
										"description": "The GET /refunds/{id} call allows your platform to look up a single refund. Refunds facilitate the return of money from the merchant to the payer."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"amounts\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"create_time\": \"<long>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": \"<string>\",\n  \"order\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payment\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payment_method\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"refund_reason\": \"<string>\",\n  \"pending_reasons\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"failure_reason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_merchant_refund\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_app_fee_refund\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reference_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "aa7aaf1c-6e9d-49bc-8413-04136fb34b76",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/refunds/:id?expand=in sed commodo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"refunds",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "in sed commodo",
													"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the refund, generated by WePay when the refund is created."
												}
											]
										},
										"description": "The GET /refunds/{id} call allows your platform to look up a single refund. Refunds facilitate the return of money from the merchant to the payer."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "c3004890-4edf-4735-8a90-a995b3a80d33",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/refunds/:id?expand=in sed commodo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"refunds",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "in sed commodo",
													"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the refund, generated by WePay when the refund is created."
												}
											]
										},
										"description": "The GET /refunds/{id} call allows your platform to look up a single refund. Refunds facilitate the return of money from the merchant to the payer."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "ba26ea54-54c6-40d4-94a0-b9264d13ed3f",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/refunds/:id?expand=in sed commodo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"refunds",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "in sed commodo",
													"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the refund, generated by WePay when the refund is created."
												}
											]
										},
										"description": "The GET /refunds/{id} call allows your platform to look up a single refund. Refunds facilitate the return of money from the merchant to the payer."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update a refund",
							"id": "b912ddd5-6764-4117-89c3-ef4f022646fe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"custom_data\": {\n    \"order_id\": 34211134828443\n  },\n  \"reference_id\": \"reference_id_0\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/refunds/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refunds",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the refund, generated by WePay when the refund is created."
										}
									]
								},
								"description": "The POST /refunds/{id} call allows your platform to update and add custom data to a refund. Refunds facilitate the return of money from the merchant to the payer."
							},
							"response": [
								{
									"id": "e1ba48e8-a74c-4443-bab6-565e68d87581",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": {\n    \"order_id\": 34211134828443\n  },\n  \"reference_id\": \"reference_id_0\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/refunds/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"refunds",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the refund, generated by WePay when the refund is created."
												}
											]
										},
										"description": "The POST /refunds/{id} call allows your platform to update and add custom data to a refund. Refunds facilitate the return of money from the merchant to the payer."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"amounts\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"create_time\": \"<long>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": \"<string>\",\n  \"order\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payment\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payment_method\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"refund_reason\": \"<string>\",\n  \"pending_reasons\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"failure_reason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_merchant_refund\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_app_fee_refund\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reference_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "cc89bea6-f4a2-408e-8845-2f4ff6a731f6",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": {\n    \"order_id\": 34211134828443\n  },\n  \"reference_id\": \"reference_id_0\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/refunds/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"refunds",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the refund, generated by WePay when the refund is created."
												}
											]
										},
										"description": "The POST /refunds/{id} call allows your platform to update and add custom data to a refund. Refunds facilitate the return of money from the merchant to the payer."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "86280282-cbc9-4fba-9439-62a343a381e7",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": {\n    \"order_id\": 34211134828443\n  },\n  \"reference_id\": \"reference_id_0\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/refunds/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"refunds",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the refund, generated by WePay when the refund is created."
												}
											]
										},
										"description": "The POST /refunds/{id} call allows your platform to update and add custom data to a refund. Refunds facilitate the return of money from the merchant to the payer."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "bcfc6b78-5239-4784-a1a2-96853e4c52c1",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_data\": {\n    \"order_id\": 34211134828443\n  },\n  \"reference_id\": \"reference_id_0\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/refunds/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"refunds",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the refund, generated by WePay when the refund is created."
												}
											]
										},
										"description": "The POST /refunds/{id} call allows your platform to update and add custom data to a refund. Refunds facilitate the return of money from the merchant to the payer."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "80ac0745-742b-4988-a913-719bfa0491e2"
				},
				{
					"name": "Get a collection of refunds",
					"id": "21453d6d-4fcb-4397-8097-358a91d4bfc8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/refunds?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&minimum_amount=-29211542&maximum_amount=-29211542&owner_id=in sed commodo&payment_method_type=payment_bank_us&payment_method_id=in sed commodo&status=failed&payment_id=in sed commodo&reference_id=in sed commodo&expand=in sed commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"refunds"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements from this page."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
								},
								{
									"key": "create_time_start",
									"value": "66825797",
									"description": "The timestamp for the start of the search window."
								},
								{
									"key": "create_time_end",
									"value": "66825797",
									"description": "The timestamp for the end of the search window."
								},
								{
									"key": "minimum_amount",
									"value": "-29211542",
									"description": "Define the minimum value of the `amount` parameter you wish to see for returned Refunds (inclusive)."
								},
								{
									"key": "maximum_amount",
									"value": "-29211542",
									"description": "Define the maximum value of the `amount` parameter you wish to see for returned Refunds (inclusive)."
								},
								{
									"key": "owner_id",
									"value": "in sed commodo",
									"description": "The ID of the owner of the resource."
								},
								{
									"key": "payment_method_type",
									"value": "payment_bank_us",
									"description": "The payment method type to filter by."
								},
								{
									"key": "payment_method_id",
									"value": "in sed commodo",
									"description": "The payment method ID to filter by."
								},
								{
									"key": "status",
									"value": "failed",
									"description": "The status of refunds to return."
								},
								{
									"key": "payment_id",
									"value": "in sed commodo",
									"description": "The payment ID to filter by."
								},
								{
									"key": "reference_id",
									"value": "in sed commodo",
									"description": "The reference_id to search for."
								},
								{
									"key": "expand",
									"value": "in sed commodo",
									"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
								}
							]
						},
						"description": "The GET /refunds call allows your platform to look up a collection of refunds. Refunds facilitate the return of money from the merchant to the payer."
					},
					"response": [
						{
							"id": "c560632b-f7c7-490f-a3d9-23c6d7eaec32",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/refunds?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&minimum_amount=-29211542&maximum_amount=-29211542&owner_id=in sed commodo&payment_method_type=payment_bank_us&payment_method_id=in sed commodo&status=failed&payment_id=in sed commodo&reference_id=in sed commodo&expand=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refunds"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "minimum_amount",
											"value": "-29211542",
											"description": "Define the minimum value of the `amount` parameter you wish to see for returned Refunds (inclusive)."
										},
										{
											"key": "maximum_amount",
											"value": "-29211542",
											"description": "Define the maximum value of the `amount` parameter you wish to see for returned Refunds (inclusive)."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "The ID of the owner of the resource."
										},
										{
											"key": "payment_method_type",
											"value": "payment_bank_us",
											"description": "The payment method type to filter by."
										},
										{
											"key": "payment_method_id",
											"value": "in sed commodo",
											"description": "The payment method ID to filter by."
										},
										{
											"key": "status",
											"value": "failed",
											"description": "The status of refunds to return."
										},
										{
											"key": "payment_id",
											"value": "in sed commodo",
											"description": "The payment ID to filter by."
										},
										{
											"key": "reference_id",
											"value": "in sed commodo",
											"description": "The reference_id to search for."
										},
										{
											"key": "expand",
											"value": "in sed commodo",
											"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
										}
									]
								},
								"description": "The GET /refunds call allows your platform to look up a collection of refunds. Refunds facilitate the return of money from the merchant to the payer."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"previous\": \"<string>\",\n  \"next\": \"<string>\",\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "26d0f12a-e4ad-424e-8a0c-1c1c4d7f7d02",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/refunds?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&minimum_amount=-29211542&maximum_amount=-29211542&owner_id=in sed commodo&payment_method_type=payment_bank_us&payment_method_id=in sed commodo&status=failed&payment_id=in sed commodo&reference_id=in sed commodo&expand=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refunds"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "minimum_amount",
											"value": "-29211542",
											"description": "Define the minimum value of the `amount` parameter you wish to see for returned Refunds (inclusive)."
										},
										{
											"key": "maximum_amount",
											"value": "-29211542",
											"description": "Define the maximum value of the `amount` parameter you wish to see for returned Refunds (inclusive)."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "The ID of the owner of the resource."
										},
										{
											"key": "payment_method_type",
											"value": "payment_bank_us",
											"description": "The payment method type to filter by."
										},
										{
											"key": "payment_method_id",
											"value": "in sed commodo",
											"description": "The payment method ID to filter by."
										},
										{
											"key": "status",
											"value": "failed",
											"description": "The status of refunds to return."
										},
										{
											"key": "payment_id",
											"value": "in sed commodo",
											"description": "The payment ID to filter by."
										},
										{
											"key": "reference_id",
											"value": "in sed commodo",
											"description": "The reference_id to search for."
										},
										{
											"key": "expand",
											"value": "in sed commodo",
											"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
										}
									]
								},
								"description": "The GET /refunds call allows your platform to look up a collection of refunds. Refunds facilitate the return of money from the merchant to the payer."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "972324b8-a539-44a4-abd1-a4b0eedd6b66",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/refunds?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&minimum_amount=-29211542&maximum_amount=-29211542&owner_id=in sed commodo&payment_method_type=payment_bank_us&payment_method_id=in sed commodo&status=failed&payment_id=in sed commodo&reference_id=in sed commodo&expand=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refunds"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "minimum_amount",
											"value": "-29211542",
											"description": "Define the minimum value of the `amount` parameter you wish to see for returned Refunds (inclusive)."
										},
										{
											"key": "maximum_amount",
											"value": "-29211542",
											"description": "Define the maximum value of the `amount` parameter you wish to see for returned Refunds (inclusive)."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "The ID of the owner of the resource."
										},
										{
											"key": "payment_method_type",
											"value": "payment_bank_us",
											"description": "The payment method type to filter by."
										},
										{
											"key": "payment_method_id",
											"value": "in sed commodo",
											"description": "The payment method ID to filter by."
										},
										{
											"key": "status",
											"value": "failed",
											"description": "The status of refunds to return."
										},
										{
											"key": "payment_id",
											"value": "in sed commodo",
											"description": "The payment ID to filter by."
										},
										{
											"key": "reference_id",
											"value": "in sed commodo",
											"description": "The reference_id to search for."
										},
										{
											"key": "expand",
											"value": "in sed commodo",
											"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
										}
									]
								},
								"description": "The GET /refunds call allows your platform to look up a collection of refunds. Refunds facilitate the return of money from the merchant to the payer."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "da1eda64-cafb-4dab-9e3a-25af491797b0",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/refunds?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&minimum_amount=-29211542&maximum_amount=-29211542&owner_id=in sed commodo&payment_method_type=payment_bank_us&payment_method_id=in sed commodo&status=failed&payment_id=in sed commodo&reference_id=in sed commodo&expand=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refunds"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp for the end of the search window."
										},
										{
											"key": "minimum_amount",
											"value": "-29211542",
											"description": "Define the minimum value of the `amount` parameter you wish to see for returned Refunds (inclusive)."
										},
										{
											"key": "maximum_amount",
											"value": "-29211542",
											"description": "Define the maximum value of the `amount` parameter you wish to see for returned Refunds (inclusive)."
										},
										{
											"key": "owner_id",
											"value": "in sed commodo",
											"description": "The ID of the owner of the resource."
										},
										{
											"key": "payment_method_type",
											"value": "payment_bank_us",
											"description": "The payment method type to filter by."
										},
										{
											"key": "payment_method_id",
											"value": "in sed commodo",
											"description": "The payment method ID to filter by."
										},
										{
											"key": "status",
											"value": "failed",
											"description": "The status of refunds to return."
										},
										{
											"key": "payment_id",
											"value": "in sed commodo",
											"description": "The payment ID to filter by."
										},
										{
											"key": "reference_id",
											"value": "in sed commodo",
											"description": "The reference_id to search for."
										},
										{
											"key": "expand",
											"value": "in sed commodo",
											"description": "Pass the `payment_method` value to expand the response to include the payment method's `card_brand` and `last_four`."
										}
									]
								},
								"description": "The GET /refunds call allows your platform to look up a collection of refunds. Refunds facilitate the return of money from the merchant to the payer."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a refund",
					"id": "97031e15-ad39-4bb5-bab0-c8afa421ddc2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"description": "(Required) ",
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amounts\": {\n    \"total_amount\": 300,\n    \"currency\": \"USD\",\n    \"fee_refund_amount\": 50\n  },\n  \"order_id\": \"ordr-123-abc\",\n  \"payment_id\": \"18752aba-25d0-4328-aac9-a0ba7216eb67\",\n  \"refund_reason\": \"Item(s) returned\",\n  \"reference_id\": \"reference_id_0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/refunds",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"refunds"
							]
						},
						"description": "The POST /refunds call allows your platform to create a new refund. Refunds facilitate the return of money from the merchant to the payer. **Note:** A Payment must be created within the last 60 days **and** have a `status` of `complete` in order to refund it. If your platform has a custom refund limit, then use that number instead."
					},
					"response": [
						{
							"id": "bde0ca5f-301a-48f0-8361-802d907ec031",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"description": "(Required) ",
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amounts\": {\n    \"total_amount\": 300,\n    \"currency\": \"USD\",\n    \"fee_refund_amount\": 50\n  },\n  \"order_id\": \"ordr-123-abc\",\n  \"payment_id\": \"18752aba-25d0-4328-aac9-a0ba7216eb67\",\n  \"refund_reason\": \"Item(s) returned\",\n  \"reference_id\": \"reference_id_0\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/refunds",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refunds"
									]
								},
								"description": "The POST /refunds call allows your platform to create a new refund. Refunds facilitate the return of money from the merchant to the payer. **Note:** A Payment must be created within the last 60 days **and** have a `status` of `complete` in order to refund it. If your platform has a custom refund limit, then use that number instead."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"amounts\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": \"<string>\",\n  \"create_time\": \"<long>\",\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": \"<string>\",\n  \"order\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payment\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payment_method\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"refund_reason\": \"<string>\",\n  \"pending_reasons\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"failure_reason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_merchant_refund\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"txnr_app_fee_refund\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"custom_data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reference_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
						},
						{
							"id": "cefb2b64-9290-464d-9f6b-c1349ec091f7",
							"name": "INVALID_PARAMS, PAYMENT_CANNOT_BE_REFUNDED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"description": "(Required) ",
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amounts\": {\n    \"total_amount\": 300,\n    \"currency\": \"USD\",\n    \"fee_refund_amount\": 50\n  },\n  \"order_id\": \"ordr-123-abc\",\n  \"payment_id\": \"18752aba-25d0-4328-aac9-a0ba7216eb67\",\n  \"refund_reason\": \"Item(s) returned\",\n  \"reference_id\": \"reference_id_0\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/refunds",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refunds"
									]
								},
								"description": "The POST /refunds call allows your platform to create a new refund. Refunds facilitate the return of money from the merchant to the payer. **Note:** A Payment must be created within the last 60 days **and** have a `status` of `complete` in order to refund it. If your platform has a custom refund limit, then use that number instead."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "0485a0b1-66ff-416b-9dce-7d411d97642c",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"description": "(Required) ",
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amounts\": {\n    \"total_amount\": 300,\n    \"currency\": \"USD\",\n    \"fee_refund_amount\": 50\n  },\n  \"order_id\": \"ordr-123-abc\",\n  \"payment_id\": \"18752aba-25d0-4328-aac9-a0ba7216eb67\",\n  \"refund_reason\": \"Item(s) returned\",\n  \"reference_id\": \"reference_id_0\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/refunds",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refunds"
									]
								},
								"description": "The POST /refunds call allows your platform to create a new refund. Refunds facilitate the return of money from the merchant to the payer. **Note:** A Payment must be created within the last 60 days **and** have a `status` of `complete` in order to refund it. If your platform has a custom refund limit, then use that number instead."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "8f437d8e-93e6-4b7f-bfa3-b49225b39bd0",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"description": "(Required) ",
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amounts\": {\n    \"total_amount\": 300,\n    \"currency\": \"USD\",\n    \"fee_refund_amount\": 50\n  },\n  \"order_id\": \"ordr-123-abc\",\n  \"payment_id\": \"18752aba-25d0-4328-aac9-a0ba7216eb67\",\n  \"refund_reason\": \"Item(s) returned\",\n  \"reference_id\": \"reference_id_0\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/refunds",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refunds"
									]
								},
								"description": "The POST /refunds call allows your platform to create a new refund. Refunds facilitate the return of money from the merchant to the payer. **Note:** A Payment must be created within the last 60 days **and** have a `status` of `complete` in order to refund it. If your platform has a custom refund limit, then use that number instead."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "6caaed4c-be15-489c-ae73-63860503a326"
		},
		{
			"name": "session_tokens",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get a session token",
							"id": "8ee98d48-e9b5-4947-acbd-8826fd108e47",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/session_tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"session_tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the session token, generated by WePay when the session token is created."
										}
									]
								},
								"description": "Lookup a specific API or Mobile Card Reader session token."
							},
							"response": [
								{
									"id": "cf124670-8f8e-4b98-9820-2c2f508bcf22",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "Client-IP",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/session_tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"session_tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the session token, generated by WePay when the session token is created."
												}
											]
										},
										"description": "Lookup a specific API or Mobile Card Reader session token."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"session_token\": \"<string>\",\n  \"expire_time\": \"<long>\",\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"resource\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"path\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"resource\": \"<string>\",\n  \"create_time\": \"<long>\",\n  \"api_version\": \"<string>\",\n  \"state\": \"<string>\",\n  \"type\": \"<string>\",\n  \"mobile_session\": {\n    \"account_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"time_to_live\": \"<long>\"\n  }\n}"
								},
								{
									"id": "127f5c28-1f38-46ac-8801-7f5a0d2c9b31",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "Client-IP",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/session_tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"session_tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the session token, generated by WePay when the session token is created."
												}
											]
										},
										"description": "Lookup a specific API or Mobile Card Reader session token."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "35bf66b6-600e-4560-b381-14a935ccd7f7",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "Client-IP",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/session_tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"session_tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the session token, generated by WePay when the session token is created."
												}
											]
										},
										"description": "Lookup a specific API or Mobile Card Reader session token."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "dc797083-1d99-47dd-ba49-06fae8818e26",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "Client-IP",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/session_tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"session_tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the session token, generated by WePay when the session token is created."
												}
											]
										},
										"description": "Lookup a specific API or Mobile Card Reader session token."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete a session token",
							"id": "58ac9099-4e4b-4ca2-8ac8-dac7e7914b23",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/session_tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"session_tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) ID of the session token, generated by WePay when the session token is created."
										}
									]
								},
								"description": "The DELETE /session_tokens/{id} call allows your platform to delete a single session token."
							},
							"response": [
								{
									"id": "3085343f-cccf-49ab-be40-1af4e28164c2",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "Client-IP",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/session_tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"session_tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the session token, generated by WePay when the session token is created."
												}
											]
										},
										"description": "The DELETE /session_tokens/{id} call allows your platform to delete a single session token."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"session_token\": \"<string>\",\n  \"expire_time\": \"<long>\",\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"resource\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"path\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"resource\": \"<string>\",\n  \"create_time\": \"<long>\",\n  \"api_version\": \"<string>\",\n  \"state\": \"<string>\",\n  \"type\": \"<string>\",\n  \"mobile_session\": {\n    \"account_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"time_to_live\": \"<long>\"\n  }\n}"
								},
								{
									"id": "e37402f2-6edb-4d92-a8af-295bb9d88f5e",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "Client-IP",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/session_tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"session_tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the session token, generated by WePay when the session token is created."
												}
											]
										},
										"description": "The DELETE /session_tokens/{id} call allows your platform to delete a single session token."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "c4adcf52-adaf-4438-8459-825d05d1dc32",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "Client-IP",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/session_tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"session_tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the session token, generated by WePay when the session token is created."
												}
											]
										},
										"description": "The DELETE /session_tokens/{id} call allows your platform to delete a single session token."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "c0502345-66ff-49d7-8293-4cec03417d42",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "WePay-Risk-Token",
												"value": "in sed commodo"
											},
											{
												"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
												"key": "Client-IP",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/session_tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"session_tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) ID of the session token, generated by WePay when the session token is created."
												}
											]
										},
										"description": "The DELETE /session_tokens/{id} call allows your platform to delete a single session token."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "f0539189-2b68-437d-9bd0-668c7792b1f4"
				},
				{
					"name": "Create a session token",
					"id": "7d1f575b-9692-42e2-b50e-1d64261d5c01",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
								"key": "WePay-Risk-Token",
								"value": "in sed commodo"
							},
							{
								"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
								"key": "Client-IP",
								"value": "in sed commodo"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"mobile_session\",\n  \"mobile_session\": {\n    \"account_id\": \"c9536e75-fce8-44e0-94dd-9bc0cdd52d6c\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/session_tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"session_tokens"
							]
						},
						"description": "The POST /session_tokens request generates a session token which associates a mobile card reader with a merchant account."
					},
					"response": [
						{
							"id": "99edd623-f251-41d8-b323-a6fbaa6d3381",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"mobile_session\",\n  \"mobile_session\": {\n    \"account_id\": \"c9536e75-fce8-44e0-94dd-9bc0cdd52d6c\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/session_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"session_tokens"
									]
								},
								"description": "The POST /session_tokens request generates a session token which associates a mobile card reader with a merchant account."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"session_token\": \"<string>\",\n  \"expire_time\": \"<long>\",\n  \"path\": \"<string>\",\n  \"owner\": {\n    \"resource\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"path\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"resource\": \"<string>\",\n  \"create_time\": \"<long>\",\n  \"api_version\": \"<string>\",\n  \"state\": \"<string>\",\n  \"type\": \"<string>\",\n  \"mobile_session\": {\n    \"account_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"time_to_live\": \"<long>\"\n  }\n}"
						},
						{
							"id": "457e983b-be87-4a6c-9c57-411a525b2b00",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"mobile_session\",\n  \"mobile_session\": {\n    \"account_id\": \"c9536e75-fce8-44e0-94dd-9bc0cdd52d6c\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/session_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"session_tokens"
									]
								},
								"description": "The POST /session_tokens request generates a session token which associates a mobile card reader with a merchant account."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "007a6b14-18a7-408d-ba76-8cbcd5934472",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"mobile_session\",\n  \"mobile_session\": {\n    \"account_id\": \"c9536e75-fce8-44e0-94dd-9bc0cdd52d6c\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/session_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"session_tokens"
									]
								},
								"description": "The POST /session_tokens request generates a session token which associates a mobile card reader with a merchant account."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "e75144b7-97bc-45c3-b822-769800bb5afb",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"mobile_session\",\n  \"mobile_session\": {\n    \"account_id\": \"c9536e75-fce8-44e0-94dd-9bc0cdd52d6c\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/session_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"session_tokens"
									]
								},
								"description": "The POST /session_tokens request generates a session token which associates a mobile card reader with a merchant account."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a session token collection",
					"id": "10a90ae0-2c26-49df-be7e-bcce5bae7293",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
								"key": "WePay-Risk-Token",
								"value": "in sed commodo"
							},
							{
								"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
								"key": "Client-IP",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/session_tokens?page_size=10&create_time_start=66825797&create_time_end=66825797&type=mobile_session&account_id=<string>&state=active&page=in sed commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"session_tokens"
							],
							"query": [
								{
									"key": "page_size",
									"value": "10",
									"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
								},
								{
									"key": "create_time_start",
									"value": "66825797",
									"description": "The timestamp (in UNIX seconds) for the start of the search window."
								},
								{
									"key": "create_time_end",
									"value": "66825797",
									"description": "The timestamp (in UNIX seconds) for the end of the search window."
								},
								{
									"key": "type",
									"value": "mobile_session",
									"description": "Describes the type of session token. Can be either `api_session` or `mobile_session`."
								},
								{
									"key": "account_id",
									"value": "<string>"
								},
								{
									"key": "state",
									"value": "active",
									"description": "Describes the state of session token. Can be either `active` or `deleted`."
								},
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Use the value from `next_page` or `previous_page` from the response to a previous GET rerquest with multiple pages of results. The value is a page ID to paginate results. Adjust the number of results per page with the `page_size` query parameter."
								}
							]
						},
						"description": "The GET /session_tokens request call allows your platform to look up a collection of session tokens created by your app."
					},
					"response": [
						{
							"id": "5d4d47ab-fc5b-4688-a11a-2a346be14621",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/session_tokens?page_size=10&create_time_start=66825797&create_time_end=66825797&type=mobile_session&account_id=<string>&state=active&page=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"session_tokens"
									],
									"query": [
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the end of the search window."
										},
										{
											"key": "type",
											"value": "mobile_session",
											"description": "Describes the type of session token. Can be either `api_session` or `mobile_session`."
										},
										{
											"key": "account_id",
											"value": "<string>"
										},
										{
											"key": "state",
											"value": "active",
											"description": "Describes the state of session token. Can be either `active` or `deleted`."
										},
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Use the value from `next_page` or `previous_page` from the response to a previous GET rerquest with multiple pages of results. The value is a page ID to paginate results. Adjust the number of results per page with the `page_size` query parameter."
										}
									]
								},
								"description": "The GET /session_tokens request call allows your platform to look up a collection of session tokens created by your app."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"session_token\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expire_time\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"path\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resource\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"create_time\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"api_version\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"state\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mobile_session\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"next\": \"<string>\",\n  \"previous\": \"<string>\",\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "38a632ac-a1b4-4583-a5f1-b31036bc3404",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/session_tokens?page_size=10&create_time_start=66825797&create_time_end=66825797&type=mobile_session&account_id=<string>&state=active&page=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"session_tokens"
									],
									"query": [
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the end of the search window."
										},
										{
											"key": "type",
											"value": "mobile_session",
											"description": "Describes the type of session token. Can be either `api_session` or `mobile_session`."
										},
										{
											"key": "account_id",
											"value": "<string>"
										},
										{
											"key": "state",
											"value": "active",
											"description": "Describes the state of session token. Can be either `active` or `deleted`."
										},
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Use the value from `next_page` or `previous_page` from the response to a previous GET rerquest with multiple pages of results. The value is a page ID to paginate results. Adjust the number of results per page with the `page_size` query parameter."
										}
									]
								},
								"description": "The GET /session_tokens request call allows your platform to look up a collection of session tokens created by your app."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "a6c8f7f7-d824-4587-a915-7667c62befe8",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/session_tokens?page_size=10&create_time_start=66825797&create_time_end=66825797&type=mobile_session&account_id=<string>&state=active&page=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"session_tokens"
									],
									"query": [
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the end of the search window."
										},
										{
											"key": "type",
											"value": "mobile_session",
											"description": "Describes the type of session token. Can be either `api_session` or `mobile_session`."
										},
										{
											"key": "account_id",
											"value": "<string>"
										},
										{
											"key": "state",
											"value": "active",
											"description": "Describes the state of session token. Can be either `active` or `deleted`."
										},
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Use the value from `next_page` or `previous_page` from the response to a previous GET rerquest with multiple pages of results. The value is a page ID to paginate results. Adjust the number of results per page with the `page_size` query parameter."
										}
									]
								},
								"description": "The GET /session_tokens request call allows your platform to look up a collection of session tokens created by your app."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "1ee6f209-8278-4f00-b1c7-23639951641d",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/session_tokens?page_size=10&create_time_start=66825797&create_time_end=66825797&type=mobile_session&account_id=<string>&state=active&page=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"session_tokens"
									],
									"query": [
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the end of the search window."
										},
										{
											"key": "type",
											"value": "mobile_session",
											"description": "Describes the type of session token. Can be either `api_session` or `mobile_session`."
										},
										{
											"key": "account_id",
											"value": "<string>"
										},
										{
											"key": "state",
											"value": "active",
											"description": "Describes the state of session token. Can be either `active` or `deleted`."
										},
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Use the value from `next_page` or `previous_page` from the response to a previous GET rerquest with multiple pages of results. The value is a page ID to paginate results. Adjust the number of results per page with the `page_size` query parameter."
										}
									]
								},
								"description": "The GET /session_tokens request call allows your platform to look up a collection of session tokens created by your app."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "dca79711-3360-4a23-9756-d7a349a5d050",
							"name": "SERVICE_TEMPORARILY_UNAVAILABLE",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "WePay-Risk-Token",
										"value": "in sed commodo"
									},
									{
										"description": "This header is **required** when tokenizing Payment Methods, Legal Entities, and Payout Methods **when the [tokenization JS library](/sdks-and-libraries/helper-js/) is not being used.** ",
										"key": "Client-IP",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/session_tokens?page_size=10&create_time_start=66825797&create_time_end=66825797&type=mobile_session&account_id=<string>&state=active&page=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"session_tokens"
									],
									"query": [
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 50."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the start of the search window."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The timestamp (in UNIX seconds) for the end of the search window."
										},
										{
											"key": "type",
											"value": "mobile_session",
											"description": "Describes the type of session token. Can be either `api_session` or `mobile_session`."
										},
										{
											"key": "account_id",
											"value": "<string>"
										},
										{
											"key": "state",
											"value": "active",
											"description": "Describes the state of session token. Can be either `active` or `deleted`."
										},
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Use the value from `next_page` or `previous_page` from the response to a previous GET rerquest with multiple pages of results. The value is a page ID to paginate results. Adjust the number of results per page with the `page_size` query parameter."
										}
									]
								},
								"description": "The GET /session_tokens request call allows your platform to look up a collection of session tokens created by your app."
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "b13f76f3-287d-4150-bfc6-2f74c9305e1f"
		},
		{
			"name": "terminals",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Update a terminal",
							"id": "ddbc6735-ac80-4038-ba19-20fc4d2fa8e9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"reference_id\": \"abc12345\",\n  \"terminal_configuration\": {\n    \"contactless_payments\": {\n      \"enabled\": true,\n      \"credit_debit_preference\": \"credit\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/terminals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"terminals",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) "
										}
									]
								},
								"description": "Modify a terminal's configuration. Note that changes in configuration will only be reflected on your physical terminal when it has performed an online update. You cannot modify the configuration of an inactive or deleted terminal. **NOTE:** the `currency` parameter for Terminals **only supports `USD`**."
							},
							"response": [
								{
									"id": "f07f8955-301d-459e-8ae6-831b035c2cd5",
									"name": "A successful terminal modification response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reference_id\": \"abc12345\",\n  \"terminal_configuration\": {\n    \"contactless_payments\": {\n      \"enabled\": true,\n      \"credit_debit_preference\": \"credit\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/terminals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Modify a terminal's configuration. Note that changes in configuration will only be reflected on your physical terminal when it has performed an online update. You cannot modify the configuration of an inactive or deleted terminal. **NOTE:** the `currency` parameter for Terminals **only supports `USD`**."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serial_number\": \"<string>\",\n  \"model\": \"<string>\",\n  \"reference_id\": \"<string>\",\n  \"last_call_home\": \"<long>\",\n  \"terminal_application_version\": \"<string>\",\n  \"terminal_configuration\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maintenance_window\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"manual_entry_configuration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"supported_card_brands\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"credit_debit_preference\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sim_card_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timezone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tip\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signature_required\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactless_payments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quick_chip\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deferred_authorization\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"receipt_header_merchant_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"gateway_id\": \"<string>\"\n}"
								},
								{
									"id": "63056de2-019d-4e17-9d72-bf51c1090208",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reference_id\": \"abc12345\",\n  \"terminal_configuration\": {\n    \"contactless_payments\": {\n      \"enabled\": true,\n      \"credit_debit_preference\": \"credit\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/terminals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Modify a terminal's configuration. Note that changes in configuration will only be reflected on your physical terminal when it has performed an online update. You cannot modify the configuration of an inactive or deleted terminal. **NOTE:** the `currency` parameter for Terminals **only supports `USD`**."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "3520e3a9-c01b-4c9a-9fe1-29505895005a",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reference_id\": \"abc12345\",\n  \"terminal_configuration\": {\n    \"contactless_payments\": {\n      \"enabled\": true,\n      \"credit_debit_preference\": \"credit\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/terminals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Modify a terminal's configuration. Note that changes in configuration will only be reflected on your physical terminal when it has performed an online update. You cannot modify the configuration of an inactive or deleted terminal. **NOTE:** the `currency` parameter for Terminals **only supports `USD`**."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "7aa61021-3f19-4c1c-ab92-3fb99fc43754",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reference_id\": \"abc12345\",\n  \"terminal_configuration\": {\n    \"contactless_payments\": {\n      \"enabled\": true,\n      \"credit_debit_preference\": \"credit\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/terminals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Modify a terminal's configuration. Note that changes in configuration will only be reflected on your physical terminal when it has performed an online update. You cannot modify the configuration of an inactive or deleted terminal. **NOTE:** the `currency` parameter for Terminals **only supports `USD`**."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Look up a terminal",
							"id": "be14594c-7578-4ba7-987b-8142cfeb6e34",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/terminals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"terminals",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) "
										}
									]
								},
								"description": "Look up a terminal to see its current status and configuration."
							},
							"response": [
								{
									"id": "a1d72458-ff92-47c8-906d-0bc6f4252c87",
									"name": "A successful terminal lookup response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/terminals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Look up a terminal to see its current status and configuration."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serial_number\": \"<string>\",\n  \"model\": \"<string>\",\n  \"reference_id\": \"<string>\",\n  \"last_call_home\": \"<long>\",\n  \"terminal_application_version\": \"<string>\",\n  \"terminal_configuration\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maintenance_window\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"manual_entry_configuration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"supported_card_brands\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"credit_debit_preference\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sim_card_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timezone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tip\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signature_required\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactless_payments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quick_chip\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deferred_authorization\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"receipt_header_merchant_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"gateway_id\": \"<string>\"\n}"
								},
								{
									"id": "ce22862c-d7d9-494a-a29f-9263ae8ba2e7",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/terminals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Look up a terminal to see its current status and configuration."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "8b6c4b2c-a636-4f7e-96a8-937668d48820",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/terminals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Look up a terminal to see its current status and configuration."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "d704922b-cdd8-49b4-a596-92be22dcbec2",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/terminals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Look up a terminal to see its current status and configuration."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete a terminal",
							"id": "30cc14a1-9f72-4f44-9706-2e7badbffdd1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/terminals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"terminals",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) "
										}
									]
								},
								"description": "Deletes the terminal from the system, marking it as deleted. The physical terminal represented by this API record will not be able to process payments until it is onboarded again."
							},
							"response": [
								{
									"id": "a4d70fe5-d57c-41d9-850c-4276f758dec7",
									"name": "A successful deletion response.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/terminals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Deletes the terminal from the system, marking it as deleted. The physical terminal represented by this API record will not be able to process payments until it is onboarded again."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serial_number\": \"<string>\",\n  \"model\": \"<string>\",\n  \"reference_id\": \"<string>\",\n  \"last_call_home\": \"<long>\",\n  \"terminal_application_version\": \"<string>\",\n  \"terminal_configuration\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maintenance_window\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"manual_entry_configuration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"supported_card_brands\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"credit_debit_preference\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sim_card_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timezone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tip\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signature_required\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactless_payments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quick_chip\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deferred_authorization\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"receipt_header_merchant_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"gateway_id\": \"<string>\"\n}"
								},
								{
									"id": "5d94d6cb-a5e4-4746-9c65-c36c53c84972",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/terminals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Deletes the terminal from the system, marking it as deleted. The physical terminal represented by this API record will not be able to process payments until it is onboarded again."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "7c40a692-a110-4082-88a8-98ab8e672f95",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/terminals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Deletes the terminal from the system, marking it as deleted. The physical terminal represented by this API record will not be able to process payments until it is onboarded again."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "67882211-d99f-4d02-8d91-a53f72aa1f51",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/terminals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Deletes the terminal from the system, marking it as deleted. The physical terminal represented by this API record will not be able to process payments until it is onboarded again."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Activate a deactivated terminal.",
							"id": "99f3a09c-34e8-464c-a9d9-f1c626ce5c43",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/terminals/:id/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"terminals",
										":id",
										"activate"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) "
										}
									]
								},
								"description": "Activating a terminal will allow it to process payments after being deactivated. You can only activate a deactivated terminal."
							},
							"response": [
								{
									"id": "063e44a4-eb04-47e3-9545-48cf19ed4bdc",
									"name": "Successful response when activating a terminal.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/terminals/:id/activate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id",
												"activate"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Activating a terminal will allow it to process payments after being deactivated. You can only activate a deactivated terminal."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serial_number\": \"<string>\",\n  \"model\": \"<string>\",\n  \"reference_id\": \"<string>\",\n  \"last_call_home\": \"<long>\",\n  \"terminal_application_version\": \"<string>\",\n  \"terminal_configuration\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maintenance_window\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"manual_entry_configuration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"supported_card_brands\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"credit_debit_preference\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sim_card_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timezone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tip\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signature_required\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactless_payments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quick_chip\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deferred_authorization\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"receipt_header_merchant_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"gateway_id\": \"<string>\"\n}"
								},
								{
									"id": "72abd0d7-fb0d-4522-9003-8765e42dcafa",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/terminals/:id/activate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id",
												"activate"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Activating a terminal will allow it to process payments after being deactivated. You can only activate a deactivated terminal."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "f8fff388-8e83-40e5-98e1-883fa8a81aad",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/terminals/:id/activate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id",
												"activate"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Activating a terminal will allow it to process payments after being deactivated. You can only activate a deactivated terminal."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "0a3953db-464c-4b2b-b779-38e76ce7a923",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/terminals/:id/activate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id",
												"activate"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Activating a terminal will allow it to process payments after being deactivated. You can only activate a deactivated terminal."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Deactivate an activated terminal.",
							"id": "cb77f87d-bcfc-4675-a408-636e6de986b5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/terminals/:id/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"terminals",
										":id",
										"deactivate"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) "
										}
									]
								},
								"description": "Deactivating a terminal will prevent it from processing payments after being deactivated. You can only deactivate an active terminal."
							},
							"response": [
								{
									"id": "c6f512c8-edc5-41de-90c9-8bb5fa0896a5",
									"name": "Successful response when deactivating a terminal.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/terminals/:id/deactivate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id",
												"deactivate"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Deactivating a terminal will prevent it from processing payments after being deactivated. You can only deactivate an active terminal."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serial_number\": \"<string>\",\n  \"model\": \"<string>\",\n  \"reference_id\": \"<string>\",\n  \"last_call_home\": \"<long>\",\n  \"terminal_application_version\": \"<string>\",\n  \"terminal_configuration\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maintenance_window\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"manual_entry_configuration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"supported_card_brands\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"credit_debit_preference\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sim_card_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timezone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tip\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signature_required\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactless_payments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quick_chip\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deferred_authorization\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"receipt_header_merchant_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"gateway_id\": \"<string>\"\n}"
								},
								{
									"id": "044bd137-1b6e-4362-a53f-605442734953",
									"name": "INVALID_PARAMS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/terminals/:id/deactivate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id",
												"deactivate"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Deactivating a terminal will prevent it from processing payments after being deactivated. You can only deactivate an active terminal."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "5b3e5d59-18f1-400d-aa23-3eb22bb78cf5",
									"name": "NOT_AUTHORIZED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/terminals/:id/deactivate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id",
												"deactivate"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Deactivating a terminal will prevent it from processing payments after being deactivated. You can only deactivate an active terminal."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "bed78447-c06f-4c23-a8d3-f86090fa9bcb",
									"name": "UNEXPECTED_ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Api-Version",
												"value": "3.0"
											},
											{
												"key": "Unique-Key",
												"value": "in sed commodo"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/terminals/:id/deactivate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"terminals",
												":id",
												"deactivate"
											],
											"variable": [
												{
													"key": "id",
													"value": "Excepteur exercitation sed ut",
													"description": "(Required) "
												}
											]
										},
										"description": "Deactivating a terminal will prevent it from processing payments after being deactivated. You can only deactivate an active terminal."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "c6fa442e-ffda-423f-a6c3-48239453ffff"
				},
				{
					"name": "Onboard a terminal",
					"id": "61286603-0788-470a-97c6-1bdd4eed5461",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"account_id\": \"0ef0dcd6-a2c6-49c4-9051-bbbe5c6c36e2\",\n  \"serial_number\": \"FA00332-1000138\",\n  \"model\": \"verifone_p400\",\n  \"reference_id\": \"abc12345\",\n  \"terminal_configuration\": {\n    \"name\": \"Front Desk\",\n    \"receipt_header_merchant_name\": \"Joe's Coffee\",\n    \"maintenance_window\": {\n      \"start\": 0,\n      \"duration\": 1\n    },\n    \"manual_entry_configuration\": {\n      \"avs_prompt_enabled\": true,\n      \"cvd_prompt_enabled\": true\n    },\n    \"address\": {\n      \"city\": \"Redwood City\",\n      \"country\": \"US\",\n      \"line1\": \"250 Convention Way\",\n      \"line2\": \"Suite 200\",\n      \"postal_code\": \"94063\",\n      \"region\": \"CA\"\n    },\n    \"timezone\": \"US/Pacific\",\n    \"currency\": \"USD\",\n    \"supported_card_brands\": [\n      \"visa\",\n      \"american_express\",\n      \"discover\",\n      \"mastercard\",\n      \"diners_club\",\n      \"jcb\"\n    ],\n    \"tip\": {\n      \"mode\": \"prompt_on_terminal\",\n      \"terminal_display\": {\n        \"amount_guide_type\": \"percentage_guide\",\n        \"percentage_guide\": {\n          \"show_amount\": false,\n          \"percentage_low\": 15,\n          \"percentage_medium\": 18,\n          \"percentage_high\": 20\n        }\n      }\n    },\n    \"signature_required\": true,\n    \"contactless_payments\": {\n      \"enabled\": true,\n      \"credit_debit_preference\": \"credit\"\n    },\n    \"quick_chip\": {\n      \"enabled\": true\n    },\n    \"deferred_authorization\": {\n      \"enabled\": true,\n      \"international_enabled\": true,\n      \"max_transaction_count\": 20,\n      \"max_total_amount\": 250000,\n      \"max_transaction_amount\": 12500,\n      \"supported_card_entry_modes\": [\n        \"chip\",\n        \"contactless\"\n      ]\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/terminals",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"terminals"
							]
						},
						"description": "Onboard a Point-of-Sale terminal into the WePay system. A Terminal resource allows you to control the configuration and lifecycle of a physical terminal. You can only have one non-deleted instance of a terminals resource per physical terminal, which is uniquely identified by the model and serial number. **NOTE:** the `currency` parameter for Terminals **only supports `USD`**."
					},
					"response": [
						{
							"id": "36731d38-2ab8-4b4e-91bb-4e84e609005d",
							"name": "A successful terminals creation response.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"0ef0dcd6-a2c6-49c4-9051-bbbe5c6c36e2\",\n  \"serial_number\": \"FA00332-1000138\",\n  \"model\": \"verifone_p400\",\n  \"reference_id\": \"abc12345\",\n  \"terminal_configuration\": {\n    \"name\": \"Front Desk\",\n    \"receipt_header_merchant_name\": \"Joe's Coffee\",\n    \"maintenance_window\": {\n      \"start\": 0,\n      \"duration\": 1\n    },\n    \"manual_entry_configuration\": {\n      \"avs_prompt_enabled\": true,\n      \"cvd_prompt_enabled\": true\n    },\n    \"address\": {\n      \"city\": \"Redwood City\",\n      \"country\": \"US\",\n      \"line1\": \"250 Convention Way\",\n      \"line2\": \"Suite 200\",\n      \"postal_code\": \"94063\",\n      \"region\": \"CA\"\n    },\n    \"timezone\": \"US/Pacific\",\n    \"currency\": \"USD\",\n    \"supported_card_brands\": [\n      \"visa\",\n      \"american_express\",\n      \"discover\",\n      \"mastercard\",\n      \"diners_club\",\n      \"jcb\"\n    ],\n    \"tip\": {\n      \"mode\": \"prompt_on_terminal\",\n      \"terminal_display\": {\n        \"amount_guide_type\": \"percentage_guide\",\n        \"percentage_guide\": {\n          \"show_amount\": false,\n          \"percentage_low\": 15,\n          \"percentage_medium\": 18,\n          \"percentage_high\": 20\n        }\n      }\n    },\n    \"signature_required\": true,\n    \"contactless_payments\": {\n      \"enabled\": true,\n      \"credit_debit_preference\": \"credit\"\n    },\n    \"quick_chip\": {\n      \"enabled\": true\n    },\n    \"deferred_authorization\": {\n      \"enabled\": true,\n      \"international_enabled\": true,\n      \"max_transaction_count\": 20,\n      \"max_total_amount\": 250000,\n      \"max_transaction_amount\": 12500,\n      \"supported_card_entry_modes\": [\n        \"chip\",\n        \"contactless\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/terminals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"terminals"
									]
								},
								"description": "Onboard a Point-of-Sale terminal into the WePay system. A Terminal resource allows you to control the configuration and lifecycle of a physical terminal. You can only have one non-deleted instance of a terminals resource per physical terminal, which is uniquely identified by the model and serial number. **NOTE:** the `currency` parameter for Terminals **only supports `USD`**."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"path\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"owner\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serial_number\": \"<string>\",\n  \"model\": \"<string>\",\n  \"reference_id\": \"<string>\",\n  \"last_call_home\": \"<long>\",\n  \"terminal_application_version\": \"<string>\",\n  \"terminal_configuration\": {\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maintenance_window\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"manual_entry_configuration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"supported_card_brands\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"credit_debit_preference\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sim_card_id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timezone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tip\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signature_required\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactless_payments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quick_chip\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deferred_authorization\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"receipt_header_merchant_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"gateway_id\": \"<string>\"\n}"
						},
						{
							"id": "3dadd0b3-d851-4b50-84e8-a92b0cfeb3c7",
							"name": "INVALID_PARAMS, ACCOUNT_CANNOT_CREATE_TERMINALS",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"0ef0dcd6-a2c6-49c4-9051-bbbe5c6c36e2\",\n  \"serial_number\": \"FA00332-1000138\",\n  \"model\": \"verifone_p400\",\n  \"reference_id\": \"abc12345\",\n  \"terminal_configuration\": {\n    \"name\": \"Front Desk\",\n    \"receipt_header_merchant_name\": \"Joe's Coffee\",\n    \"maintenance_window\": {\n      \"start\": 0,\n      \"duration\": 1\n    },\n    \"manual_entry_configuration\": {\n      \"avs_prompt_enabled\": true,\n      \"cvd_prompt_enabled\": true\n    },\n    \"address\": {\n      \"city\": \"Redwood City\",\n      \"country\": \"US\",\n      \"line1\": \"250 Convention Way\",\n      \"line2\": \"Suite 200\",\n      \"postal_code\": \"94063\",\n      \"region\": \"CA\"\n    },\n    \"timezone\": \"US/Pacific\",\n    \"currency\": \"USD\",\n    \"supported_card_brands\": [\n      \"visa\",\n      \"american_express\",\n      \"discover\",\n      \"mastercard\",\n      \"diners_club\",\n      \"jcb\"\n    ],\n    \"tip\": {\n      \"mode\": \"prompt_on_terminal\",\n      \"terminal_display\": {\n        \"amount_guide_type\": \"percentage_guide\",\n        \"percentage_guide\": {\n          \"show_amount\": false,\n          \"percentage_low\": 15,\n          \"percentage_medium\": 18,\n          \"percentage_high\": 20\n        }\n      }\n    },\n    \"signature_required\": true,\n    \"contactless_payments\": {\n      \"enabled\": true,\n      \"credit_debit_preference\": \"credit\"\n    },\n    \"quick_chip\": {\n      \"enabled\": true\n    },\n    \"deferred_authorization\": {\n      \"enabled\": true,\n      \"international_enabled\": true,\n      \"max_transaction_count\": 20,\n      \"max_total_amount\": 250000,\n      \"max_transaction_amount\": 12500,\n      \"supported_card_entry_modes\": [\n        \"chip\",\n        \"contactless\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/terminals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"terminals"
									]
								},
								"description": "Onboard a Point-of-Sale terminal into the WePay system. A Terminal resource allows you to control the configuration and lifecycle of a physical terminal. You can only have one non-deleted instance of a terminals resource per physical terminal, which is uniquely identified by the model and serial number. **NOTE:** the `currency` parameter for Terminals **only supports `USD`**."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "b421da7b-322f-45a1-9233-52a4d51067bd",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"0ef0dcd6-a2c6-49c4-9051-bbbe5c6c36e2\",\n  \"serial_number\": \"FA00332-1000138\",\n  \"model\": \"verifone_p400\",\n  \"reference_id\": \"abc12345\",\n  \"terminal_configuration\": {\n    \"name\": \"Front Desk\",\n    \"receipt_header_merchant_name\": \"Joe's Coffee\",\n    \"maintenance_window\": {\n      \"start\": 0,\n      \"duration\": 1\n    },\n    \"manual_entry_configuration\": {\n      \"avs_prompt_enabled\": true,\n      \"cvd_prompt_enabled\": true\n    },\n    \"address\": {\n      \"city\": \"Redwood City\",\n      \"country\": \"US\",\n      \"line1\": \"250 Convention Way\",\n      \"line2\": \"Suite 200\",\n      \"postal_code\": \"94063\",\n      \"region\": \"CA\"\n    },\n    \"timezone\": \"US/Pacific\",\n    \"currency\": \"USD\",\n    \"supported_card_brands\": [\n      \"visa\",\n      \"american_express\",\n      \"discover\",\n      \"mastercard\",\n      \"diners_club\",\n      \"jcb\"\n    ],\n    \"tip\": {\n      \"mode\": \"prompt_on_terminal\",\n      \"terminal_display\": {\n        \"amount_guide_type\": \"percentage_guide\",\n        \"percentage_guide\": {\n          \"show_amount\": false,\n          \"percentage_low\": 15,\n          \"percentage_medium\": 18,\n          \"percentage_high\": 20\n        }\n      }\n    },\n    \"signature_required\": true,\n    \"contactless_payments\": {\n      \"enabled\": true,\n      \"credit_debit_preference\": \"credit\"\n    },\n    \"quick_chip\": {\n      \"enabled\": true\n    },\n    \"deferred_authorization\": {\n      \"enabled\": true,\n      \"international_enabled\": true,\n      \"max_transaction_count\": 20,\n      \"max_total_amount\": 250000,\n      \"max_transaction_amount\": 12500,\n      \"supported_card_entry_modes\": [\n        \"chip\",\n        \"contactless\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/terminals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"terminals"
									]
								},
								"description": "Onboard a Point-of-Sale terminal into the WePay system. A Terminal resource allows you to control the configuration and lifecycle of a physical terminal. You can only have one non-deleted instance of a terminals resource per physical terminal, which is uniquely identified by the model and serial number. **NOTE:** the `currency` parameter for Terminals **only supports `USD`**."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "0d4a86e8-3471-45cd-a055-afd5f94b63bf",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"account_id\": \"0ef0dcd6-a2c6-49c4-9051-bbbe5c6c36e2\",\n  \"serial_number\": \"FA00332-1000138\",\n  \"model\": \"verifone_p400\",\n  \"reference_id\": \"abc12345\",\n  \"terminal_configuration\": {\n    \"name\": \"Front Desk\",\n    \"receipt_header_merchant_name\": \"Joe's Coffee\",\n    \"maintenance_window\": {\n      \"start\": 0,\n      \"duration\": 1\n    },\n    \"manual_entry_configuration\": {\n      \"avs_prompt_enabled\": true,\n      \"cvd_prompt_enabled\": true\n    },\n    \"address\": {\n      \"city\": \"Redwood City\",\n      \"country\": \"US\",\n      \"line1\": \"250 Convention Way\",\n      \"line2\": \"Suite 200\",\n      \"postal_code\": \"94063\",\n      \"region\": \"CA\"\n    },\n    \"timezone\": \"US/Pacific\",\n    \"currency\": \"USD\",\n    \"supported_card_brands\": [\n      \"visa\",\n      \"american_express\",\n      \"discover\",\n      \"mastercard\",\n      \"diners_club\",\n      \"jcb\"\n    ],\n    \"tip\": {\n      \"mode\": \"prompt_on_terminal\",\n      \"terminal_display\": {\n        \"amount_guide_type\": \"percentage_guide\",\n        \"percentage_guide\": {\n          \"show_amount\": false,\n          \"percentage_low\": 15,\n          \"percentage_medium\": 18,\n          \"percentage_high\": 20\n        }\n      }\n    },\n    \"signature_required\": true,\n    \"contactless_payments\": {\n      \"enabled\": true,\n      \"credit_debit_preference\": \"credit\"\n    },\n    \"quick_chip\": {\n      \"enabled\": true\n    },\n    \"deferred_authorization\": {\n      \"enabled\": true,\n      \"international_enabled\": true,\n      \"max_transaction_count\": 20,\n      \"max_total_amount\": 250000,\n      \"max_transaction_amount\": 12500,\n      \"supported_card_entry_modes\": [\n        \"chip\",\n        \"contactless\"\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/terminals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"terminals"
									]
								},
								"description": "Onboard a Point-of-Sale terminal into the WePay system. A Terminal resource allows you to control the configuration and lifecycle of a physical terminal. You can only have one non-deleted instance of a terminals resource per physical terminal, which is uniquely identified by the model and serial number. **NOTE:** the `currency` parameter for Terminals **only supports `USD`**."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a collection of terminals",
					"id": "98cf241d-8825-484c-a248-c0747a0d1713",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/terminals?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&account_id=<string>&reference_id=dolor min&model=ingenico_lane3000&serial_number=FA00332-1000138&status=deleted&status=deleted&gateway_id=esse",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"terminals"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Maximum number of items per page of results."
								},
								{
									"key": "create_time_start",
									"value": "66825797",
									"description": "The create time epoch timestamp (in seconds) for the start of the search window, inclusive."
								},
								{
									"key": "create_time_end",
									"value": "66825797",
									"description": "The create time epoch timestamp (in seconds) for the end of the search window, inclusive."
								},
								{
									"key": "account_id",
									"value": "<string>"
								},
								{
									"key": "reference_id",
									"value": "dolor min",
									"description": "Filter search window by elements that match the reference ID."
								},
								{
									"key": "model",
									"value": "ingenico_lane3000",
									"description": "Filter search window by elements that match the model."
								},
								{
									"key": "serial_number",
									"value": "FA00332-1000138",
									"description": "Filter search window by elements that match the serial_number."
								},
								{
									"key": "status",
									"value": "deleted",
									"description": "Filter search window by elements that match the status list."
								},
								{
									"key": "status",
									"value": "deleted",
									"description": "Filter search window by elements that match the status list."
								},
								{
									"key": "gateway_id",
									"value": "esse",
									"description": "Filter search window by elements that match the gateway_id."
								}
							]
						},
						"description": "Look up a collection of terminals, filtered by the optional specified parameters. **Note:** By default, the response *will not* include deleted terminals, while it *will* include deactivated terminals."
					},
					"response": [
						{
							"id": "96c49dd9-6ea1-4d98-9989-e121413e13cb",
							"name": "A successful collection lookup response.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/terminals?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&account_id=<string>&reference_id=dolor min&model=ingenico_lane3000&serial_number=FA00332-1000138&status=deleted&status=deleted&gateway_id=esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"terminals"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Maximum number of items per page of results."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The create time epoch timestamp (in seconds) for the start of the search window, inclusive."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The create time epoch timestamp (in seconds) for the end of the search window, inclusive."
										},
										{
											"key": "account_id",
											"value": "<string>"
										},
										{
											"key": "reference_id",
											"value": "dolor min",
											"description": "Filter search window by elements that match the reference ID."
										},
										{
											"key": "model",
											"value": "ingenico_lane3000",
											"description": "Filter search window by elements that match the model."
										},
										{
											"key": "serial_number",
											"value": "FA00332-1000138",
											"description": "Filter search window by elements that match the serial_number."
										},
										{
											"key": "status",
											"value": "deleted",
											"description": "Filter search window by elements that match the status list."
										},
										{
											"key": "status",
											"value": "deleted",
											"description": "Filter search window by elements that match the status list."
										},
										{
											"key": "gateway_id",
											"value": "esse",
											"description": "Filter search window by elements that match the gateway_id."
										}
									]
								},
								"description": "Look up a collection of terminals, filtered by the optional specified parameters. **Note:** By default, the response *will not* include deleted terminals, while it *will* include deactivated terminals."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"next\": \"<string>\",\n  \"previous\": \"<string>\",\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "a2efafc2-8fd7-4c77-a267-fd6f5befda3a",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/terminals?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&account_id=<string>&reference_id=dolor min&model=ingenico_lane3000&serial_number=FA00332-1000138&status=deleted&status=deleted&gateway_id=esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"terminals"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Maximum number of items per page of results."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The create time epoch timestamp (in seconds) for the start of the search window, inclusive."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The create time epoch timestamp (in seconds) for the end of the search window, inclusive."
										},
										{
											"key": "account_id",
											"value": "<string>"
										},
										{
											"key": "reference_id",
											"value": "dolor min",
											"description": "Filter search window by elements that match the reference ID."
										},
										{
											"key": "model",
											"value": "ingenico_lane3000",
											"description": "Filter search window by elements that match the model."
										},
										{
											"key": "serial_number",
											"value": "FA00332-1000138",
											"description": "Filter search window by elements that match the serial_number."
										},
										{
											"key": "status",
											"value": "deleted",
											"description": "Filter search window by elements that match the status list."
										},
										{
											"key": "status",
											"value": "deleted",
											"description": "Filter search window by elements that match the status list."
										},
										{
											"key": "gateway_id",
											"value": "esse",
											"description": "Filter search window by elements that match the gateway_id."
										}
									]
								},
								"description": "Look up a collection of terminals, filtered by the optional specified parameters. **Note:** By default, the response *will not* include deleted terminals, while it *will* include deactivated terminals."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "8fbffe52-b033-4885-9f11-b49e5f22bb20",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/terminals?page=in sed commodo&page_size=10&create_time_start=66825797&create_time_end=66825797&account_id=<string>&reference_id=dolor min&model=ingenico_lane3000&serial_number=FA00332-1000138&status=deleted&status=deleted&gateway_id=esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"terminals"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements starting from this page. If specified, no other query parameters can be specified."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Maximum number of items per page of results."
										},
										{
											"key": "create_time_start",
											"value": "66825797",
											"description": "The create time epoch timestamp (in seconds) for the start of the search window, inclusive."
										},
										{
											"key": "create_time_end",
											"value": "66825797",
											"description": "The create time epoch timestamp (in seconds) for the end of the search window, inclusive."
										},
										{
											"key": "account_id",
											"value": "<string>"
										},
										{
											"key": "reference_id",
											"value": "dolor min",
											"description": "Filter search window by elements that match the reference ID."
										},
										{
											"key": "model",
											"value": "ingenico_lane3000",
											"description": "Filter search window by elements that match the model."
										},
										{
											"key": "serial_number",
											"value": "FA00332-1000138",
											"description": "Filter search window by elements that match the serial_number."
										},
										{
											"key": "status",
											"value": "deleted",
											"description": "Filter search window by elements that match the status list."
										},
										{
											"key": "status",
											"value": "deleted",
											"description": "Filter search window by elements that match the status list."
										},
										{
											"key": "gateway_id",
											"value": "esse",
											"description": "Filter search window by elements that match the gateway_id."
										}
									]
								},
								"description": "Look up a collection of terminals, filtered by the optional specified parameters. **Note:** By default, the response *will not* include deleted terminals, while it *will* include deactivated terminals."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "a622644b-0c16-4508-9565-e3907e6578d0"
		},
		{
			"name": "transaction_records",
			"item": [
				{
					"name": "Get a collection of transaction records",
					"id": "afc6e2cc-910b-4c2e-8a32-012aa57b7b8e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction_records?page=in sed commodo&page_size=10&create_time_start=47829085&create_time_end=47829085&account_id=in sed commodo&payout_id=in sed commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction_records"
							],
							"query": [
								{
									"key": "page",
									"value": "in sed commodo",
									"description": "Return elements from this page. If specified, then do not provide any other query parameters."
								},
								{
									"key": "page_size",
									"value": "10",
									"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 500."
								},
								{
									"key": "create_time_start",
									"value": "47829085",
									"description": "The timestamp for the start of the search window. **Default:** current time -7 days if not provided. **Note:** The time interval between `create_time_start` and `create_time_end` cannot exceed 35 days."
								},
								{
									"key": "create_time_end",
									"value": "47829085",
									"description": "The timestamp for the end of the search window. **Default:** current time if not provided. **Note:** The time interval between `create_time_start` and `create_time_end` cannot exceed 35 days."
								},
								{
									"key": "account_id",
									"value": "in sed commodo",
									"description": "Return all transaction records for resources owned by an account. Resources include: adjustments, disputes, payments, payouts, recoveries, and refunds."
								},
								{
									"key": "payout_id",
									"value": "in sed commodo",
									"description": "Transaction records for all resources contributing to this payout ID. **create_time_start** and **create_time_end** are not required and a default is not set for them when this parameter is provided in the request."
								}
							]
						},
						"description": "The GET /transaction_records call allows your platform to look up a collection of transaction records. Transactions records represent one entry (e.g. payout) and the impact to an account’s balance. **Note:** Generating transaction records may not complete for up to 6 hours. Learn how to generate Transaction and Reconciliation reports [here](/docs/cookbooks/reporting)."
					},
					"response": [
						{
							"id": "9411ac66-db65-4fd2-86d6-b468e2ef8442",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction_records?page=in sed commodo&page_size=10&create_time_start=47829085&create_time_end=47829085&account_id=in sed commodo&payout_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction_records"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page. If specified, then do not provide any other query parameters."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 500."
										},
										{
											"key": "create_time_start",
											"value": "47829085",
											"description": "The timestamp for the start of the search window. **Default:** current time -7 days if not provided. **Note:** The time interval between `create_time_start` and `create_time_end` cannot exceed 35 days."
										},
										{
											"key": "create_time_end",
											"value": "47829085",
											"description": "The timestamp for the end of the search window. **Default:** current time if not provided. **Note:** The time interval between `create_time_start` and `create_time_end` cannot exceed 35 days."
										},
										{
											"key": "account_id",
											"value": "in sed commodo",
											"description": "Return all transaction records for resources owned by an account. Resources include: adjustments, disputes, payments, payouts, recoveries, and refunds."
										},
										{
											"key": "payout_id",
											"value": "in sed commodo",
											"description": "Transaction records for all resources contributing to this payout ID. **create_time_start** and **create_time_end** are not required and a default is not set for them when this parameter is provided in the request."
										}
									]
								},
								"description": "The GET /transaction_records call allows your platform to look up a collection of transaction records. Transactions records represent one entry (e.g. payout) and the impact to an account’s balance. **Note:** Generating transaction records may not complete for up to 6 hours. Learn how to generate Transaction and Reconciliation reports [here](/docs/cookbooks/reporting)."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"next\": \"<string>\",\n  \"previous\": \"<string>\",\n  \"api_version\": \"<string>\"\n}"
						},
						{
							"id": "e63c1a64-d139-4b54-8056-6153ef66f208",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction_records?page=in sed commodo&page_size=10&create_time_start=47829085&create_time_end=47829085&account_id=in sed commodo&payout_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction_records"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page. If specified, then do not provide any other query parameters."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 500."
										},
										{
											"key": "create_time_start",
											"value": "47829085",
											"description": "The timestamp for the start of the search window. **Default:** current time -7 days if not provided. **Note:** The time interval between `create_time_start` and `create_time_end` cannot exceed 35 days."
										},
										{
											"key": "create_time_end",
											"value": "47829085",
											"description": "The timestamp for the end of the search window. **Default:** current time if not provided. **Note:** The time interval between `create_time_start` and `create_time_end` cannot exceed 35 days."
										},
										{
											"key": "account_id",
											"value": "in sed commodo",
											"description": "Return all transaction records for resources owned by an account. Resources include: adjustments, disputes, payments, payouts, recoveries, and refunds."
										},
										{
											"key": "payout_id",
											"value": "in sed commodo",
											"description": "Transaction records for all resources contributing to this payout ID. **create_time_start** and **create_time_end** are not required and a default is not set for them when this parameter is provided in the request."
										}
									]
								},
								"description": "The GET /transaction_records call allows your platform to look up a collection of transaction records. Transactions records represent one entry (e.g. payout) and the impact to an account’s balance. **Note:** Generating transaction records may not complete for up to 6 hours. Learn how to generate Transaction and Reconciliation reports [here](/docs/cookbooks/reporting)."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "d80b2f49-02cc-4c5a-b5e7-cf51ca685f86",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction_records?page=in sed commodo&page_size=10&create_time_start=47829085&create_time_end=47829085&account_id=in sed commodo&payout_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction_records"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page. If specified, then do not provide any other query parameters."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 500."
										},
										{
											"key": "create_time_start",
											"value": "47829085",
											"description": "The timestamp for the start of the search window. **Default:** current time -7 days if not provided. **Note:** The time interval between `create_time_start` and `create_time_end` cannot exceed 35 days."
										},
										{
											"key": "create_time_end",
											"value": "47829085",
											"description": "The timestamp for the end of the search window. **Default:** current time if not provided. **Note:** The time interval between `create_time_start` and `create_time_end` cannot exceed 35 days."
										},
										{
											"key": "account_id",
											"value": "in sed commodo",
											"description": "Return all transaction records for resources owned by an account. Resources include: adjustments, disputes, payments, payouts, recoveries, and refunds."
										},
										{
											"key": "payout_id",
											"value": "in sed commodo",
											"description": "Transaction records for all resources contributing to this payout ID. **create_time_start** and **create_time_end** are not required and a default is not set for them when this parameter is provided in the request."
										}
									]
								},
								"description": "The GET /transaction_records call allows your platform to look up a collection of transaction records. Transactions records represent one entry (e.g. payout) and the impact to an account’s balance. **Note:** Generating transaction records may not complete for up to 6 hours. Learn how to generate Transaction and Reconciliation reports [here](/docs/cookbooks/reporting)."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "52241847-7e73-428e-9cf9-2dc51c14fbe0",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction_records?page=in sed commodo&page_size=10&create_time_start=47829085&create_time_end=47829085&account_id=in sed commodo&payout_id=in sed commodo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction_records"
									],
									"query": [
										{
											"key": "page",
											"value": "in sed commodo",
											"description": "Return elements from this page. If specified, then do not provide any other query parameters."
										},
										{
											"key": "page_size",
											"value": "10",
											"description": "Return no more than this many elements per page. If not specified, `page_size` defaults to 10. Maximum value allowed is 500."
										},
										{
											"key": "create_time_start",
											"value": "47829085",
											"description": "The timestamp for the start of the search window. **Default:** current time -7 days if not provided. **Note:** The time interval between `create_time_start` and `create_time_end` cannot exceed 35 days."
										},
										{
											"key": "create_time_end",
											"value": "47829085",
											"description": "The timestamp for the end of the search window. **Default:** current time if not provided. **Note:** The time interval between `create_time_start` and `create_time_end` cannot exceed 35 days."
										},
										{
											"key": "account_id",
											"value": "in sed commodo",
											"description": "Return all transaction records for resources owned by an account. Resources include: adjustments, disputes, payments, payouts, recoveries, and refunds."
										},
										{
											"key": "payout_id",
											"value": "in sed commodo",
											"description": "Transaction records for all resources contributing to this payout ID. **create_time_start** and **create_time_end** are not required and a default is not set for them when this parameter is provided in the request."
										}
									]
								},
								"description": "The GET /transaction_records call allows your platform to look up a collection of transaction records. Transactions records represent one entry (e.g. payout) and the impact to an account’s balance. **Note:** Generating transaction records may not complete for up to 6 hours. Learn how to generate Transaction and Reconciliation reports [here](/docs/cookbooks/reporting)."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a transaction record",
					"id": "c0e5ee8b-44b7-450a-b0b8-acff4c3f2a34",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "Api-Version",
								"value": "3.0"
							},
							{
								"key": "Unique-Key",
								"value": "in sed commodo"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction_records/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction_records",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "Excepteur exercitation sed ut",
									"description": "(Required) "
								}
							]
						},
						"description": "The GET /transaction_records/{id} call allows your platform to look up a single transaction record. Transactions records represent one entry (e.g. payout) and the impact to an account’s balance. **Note:** Generating transaction records may not complete for up to 6 hours. Learn how to generate Transaction and Reconciliation reports [here](/docs/cookbooks/reporting)."
					},
					"response": [
						{
							"id": "0dfed568-6022-444e-86b2-76913467865a",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction_records/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction_records",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) "
										}
									]
								},
								"description": "The GET /transaction_records/{id} call allows your platform to look up a single transaction record. Transactions records represent one entry (e.g. payout) and the impact to an account’s balance. **Note:** Generating transaction records may not complete for up to 6 hours. Learn how to generate Transaction and Reconciliation reports [here](/docs/cookbooks/reporting)."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"path\": \"<string>\",\n  \"resource\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"create_time\": \"<long>\",\n  \"api_version\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currency\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fee_amount\": \"<integer>\",\n  \"gross_amount\": \"<integer>\",\n  \"net_amount\": \"<integer>\",\n  \"owner\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"resource\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"path\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"custom_data\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"type\": \"<string>\"\n}"
						},
						{
							"id": "f525dcef-8a50-41bf-bdcf-c4d4b9a3013a",
							"name": "INVALID_PARAMS",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction_records/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction_records",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) "
										}
									]
								},
								"description": "The GET /transaction_records/{id} call allows your platform to look up a single transaction record. Transactions records represent one entry (e.g. payout) and the impact to an account’s balance. **Note:** Generating transaction records may not complete for up to 6 hours. Learn how to generate Transaction and Reconciliation reports [here](/docs/cookbooks/reporting)."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "5dfe5aa3-d331-40ac-95ca-6ae833c4ef3d",
							"name": "NOT_AUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction_records/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction_records",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) "
										}
									]
								},
								"description": "The GET /transaction_records/{id} call allows your platform to look up a single transaction record. Transactions records represent one entry (e.g. payout) and the impact to an account’s balance. **Note:** Generating transaction records may not complete for up to 6 hours. Learn how to generate Transaction and Reconciliation reports [here](/docs/cookbooks/reporting)."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						},
						{
							"id": "06723d9c-4865-4270-adb7-afffaa50ef23",
							"name": "UNEXPECTED_ERROR",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "Api-Version",
										"value": "3.0"
									},
									{
										"key": "Unique-Key",
										"value": "in sed commodo"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction_records/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction_records",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Excepteur exercitation sed ut",
											"description": "(Required) "
										}
									]
								},
								"description": "The GET /transaction_records/{id} call allows your platform to look up a single transaction record. Transactions records represent one entry (e.g. payout) and the impact to an account’s balance. **Note:** Generating transaction records may not complete for up to 6 hours. Learn how to generate Transaction and Reconciliation reports [here](/docs/cookbooks/reporting)."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error_code\": \"<string>\",\n  \"error_message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "b3e17b46-5e54-4d41-8b26-18478b1d9a36"
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "App-Id",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"id": "9dcf804e-5a3e-4ab2-8073-aa1aa16b54a8",
			"key": "baseUrl",
			"value": "https://stage-api.wepay.com",
			"type": "string"
		}
	]
}